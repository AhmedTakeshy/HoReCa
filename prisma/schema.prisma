generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model AuthActionForCustomerDescriptions {
  Id                      BigInt                 @id(map: "PK_AuthActionForCustomerDescriptions") @default(autoincrement())
  AuthActionForCustomerId BigInt
  LanguageId              BigInt
  Description             String                 @db.NVarChar(500)
  AuthActionForCustomers  AuthActionForCustomers @relation(fields: [AuthActionForCustomerId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForCustomerDescriptionAuthActionForCustomer")
  Languages               Languages              @relation(fields: [LanguageId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForCustomerDescriptionLanguage")

  @@index([AuthActionForCustomerId], map: "IX_FK_AuthActionForCustomerDescriptionAuthActionForCustomer")
  @@index([LanguageId], map: "IX_FK_AuthActionForCustomerDescriptionLanguage")
}

model AuthActionForCustomers {
  Id                                BigInt                              @id(map: "PK_AuthActionForCustomers") @default(autoincrement())
  Code                              String                              @db.NVarChar(80)
  OrderNumber                       Int
  DetailedDescription               String?                             @db.NVarChar(500)
  AuthActionForCustomerDescriptions AuthActionForCustomerDescriptions[]
  CouponCustomerAuthActions         CouponCustomerAuthActions[]
  CustomerAuthActionForCustomers    CustomerAuthActionForCustomers[]
  CustomerAuthActionForPackages     CustomerAuthActionForPackages[]
  CustomerSubscriptionCustomerAuths CustomerSubscriptionCustomerAuths[]
  PackageExtras                     PackageExtras[]
}

model AuthActionForUserDescriptions {
  Id                  BigInt             @id(map: "PK_AuthActionForUserDescriptions") @default(autoincrement())
  AuthActionForUserId BigInt
  LanguageId          BigInt
  Description         String             @db.NVarChar(500)
  AuthActionForUsers  AuthActionForUsers @relation(fields: [AuthActionForUserId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForUserDescriptionAuthActionForUser")
  Languages           Languages          @relation(fields: [LanguageId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForUserDescriptionLanguage")

  @@index([AuthActionForUserId], map: "IX_FK_AuthActionForUserDescriptionAuthActionForUser")
  @@index([LanguageId], map: "IX_FK_AuthActionForUserDescriptionLanguage")
}

model AuthActionForUsers {
  Id                             BigInt                           @id(map: "PK_AuthActionForUsers") @default(autoincrement())
  Code                           String                           @db.NVarChar(80)
  OrderNumber                    Int
  GroupCode                      String                           @db.NVarChar(20)
  AuthActionForUserDescriptions  AuthActionForUserDescriptions[]
  CustomerUserAuthActionForUsers CustomerUserAuthActionForUsers[]
}

model BulkOperationLines {
  Id                         BigInt                     @id(map: "PK_BulkOperationLines") @default(autoincrement())
  Status                     Int                        @db.TinyInt
  StatusResult               String?                    @db.NVarChar(2000)
  BulkOperationId            BigInt
  Entegre_ProductECommerceId BigInt?
  ProductId                  BigInt?
  FormulaText                String?                    @db.NVarChar(250)
  BulkOperations             BulkOperations             @relation(fields: [BulkOperationId], references: [Id], onUpdate: NoAction, map: "FK_BulkOperationBulkOperationLine")
  Entegre_ProductECommerces  Entegre_ProductECommerces? @relation(fields: [Entegre_ProductECommerceId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_ProductECommerceBulkOperationLine")
  Products                   Products?                  @relation(fields: [ProductId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductBulkOperationLine")

  @@index([BulkOperationId, Status], map: "IX_BulkOperationLines_BulkOperationId_Status")
  @@index([ProductId, Status], map: "IX_BulkOperationLines_ProductId_Status")
}

model BulkOperations {
  Id                   BigInt               @id(map: "PK_BulkOperations") @default(autoincrement())
  OperationType        Int                  @db.TinyInt
  CreatedDate          DateTime             @db.DateTime
  StartDate            DateTime?            @db.DateTime
  EndDate              DateTime?            @db.DateTime
  ParamValue           String?              @db.NVarChar(250)
  OperationSourceValue String?              @db.NVarChar(2500)
  OperationSourceType  Int?                 @db.TinyInt
  CustomerId           BigInt
  Status               Int                  @db.TinyInt
  ProductId            BigInt?
  BulkOperationLines   BulkOperationLines[]
  Customers            Customers            @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerBulkOperation")
  Products             Products?            @relation(fields: [ProductId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductBulkOperation")

  @@index([CustomerId], map: "IX_BulkOperations_CustomerId")
  @@index([OperationType, OperationSourceType, CustomerId, CreatedDate, ParamValue, Status], map: "IX_BulkOperations_OperationType_OperationSourceType_CustomerId_CreatedDate_ParamValue_Status")
}

model CampaignCustomers {
  Id           BigInt     @id(map: "PK_CampaignCustomers") @default(autoincrement())
  IpAddress    String     @db.NVarChar(50)
  RegisterDate DateTime   @db.DateTime
  RegisterGuid String     @db.UniqueIdentifier
  PurchaseDate DateTime?  @db.DateTime
  CampaignId   String     @db.UniqueIdentifier
  CustomerId   BigInt?
  PackagesId   BigInt?
  Campaigns    Campaigns  @relation(fields: [CampaignId], references: [Id], onUpdate: NoAction, map: "FK_CampaignCampaignCustomers")
  Customers    Customers? @relation(fields: [CustomerId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerCampaignCustomers")
  Packages     Packages?  @relation(fields: [PackagesId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_PackagesCampaignCustomers")

  @@index([CampaignId], map: "IX_FK_CampaignCampaignCustomers")
  @@index([CustomerId], map: "IX_FK_CustomerCampaignCustomers")
  @@index([PackagesId], map: "IX_FK_PackagesCampaignCustomers")
}

model Campaigns {
  Id                       String                   @id(map: "PK_Campaigns") @db.UniqueIdentifier
  CampaignCode             String?                  @db.NVarChar(50)
  CampaignDescription      String?                  @db.NVarChar(300)
  RegisterDate             DateTime                 @db.DateTime
  CustomerRepresentativeId BigInt?
  CampaignCustomers        CampaignCustomers[]
  CustomerRepresentatives  CustomerRepresentatives? @relation(fields: [CustomerRepresentativeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerRepresentativeCampaign")

  @@index([CustomerRepresentativeId], map: "IX_FK_CustomerRepresentativeCampaign")
}

model Categories {
  Id               BigInt       @id(map: "PK_Categories") @default(autoincrement())
  Name             String       @db.NVarChar(100)
  Deepest          Boolean
  ParentId         BigInt?
  DefaultVatRateId Int?
  BreadCrumb       String       @db.NVarChar(500)
  CustomerId       BigInt
  Categories       Categories?  @relation("CategoriesToCategories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CategoryCategory")
  other_Categories Categories[] @relation("CategoriesToCategories")
  VatRates         VatRates?    @relation(fields: [DefaultVatRateId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CategoryVatRate")
  Customers        Customers    @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCategory")
  Products         Products[]

  @@index([CustomerId], map: "IX_Categories_CustomerId")
  @@index([Deepest, CustomerId], map: "IX_Categories_Deepest_CustomerId")
  @@index([ParentId, CustomerId], map: "IX_Categories_ParentId_CustomerId")
  @@index([ParentId], map: "IX_FK_CategoryCategory")
}

model Cities {
  Id                          BigInt                        @id(map: "PK_Cities") @default(autoincrement())
  Name                        String                        @db.NVarChar(100)
  CustomerInvoiceInformations CustomerInvoiceInformations[]
  Customers                   Customers[]
  Districts                   Districts[]
}

model ClaimItemReasons {
  Id          BigInt     @id(map: "PK_ClaimItemReasons") @default(autoincrement())
  ClaimItemId BigInt
  ClaimReason String     @db.NVarChar(350)
  ClaimItems  ClaimItems @relation(fields: [ClaimItemId], references: [Id], onUpdate: NoAction, map: "FK_ClaimItemReasonClaimItem")

  @@index([ClaimItemId], map: "IX_ClaimItemReasons_ClaimItemId")
}

model ClaimItems {
  Id                             BigInt             @id(map: "PK_ClaimItems") @default(autoincrement())
  ClaimId                        BigInt
  ProductId                      BigInt?
  ProductVariantGroupId          BigInt?
  ProductStockCode               String             @db.NVarChar(50)
  EntegreProductId               String?            @db.NVarChar(50)
  EntegreLineItemId              String?            @db.NVarChar(50)
  Quantity                       Decimal            @db.Decimal(20, 8)
  VatRateId                      Int
  CurrencyId                     Int
  UnitTypeId                     Int
  ClaimItemStatus                Int                @db.TinyInt
  UnitPrice                      Decimal            @db.Decimal(12, 2)
  ShipmentCompanyCampaignNumber  String?            @db.NVarChar(80)
  ShipmentCompanyECommerceCodeId String?            @db.NVarChar(80)
  ProductName                    String             @db.NVarChar(250)
  OrderLineId                    BigInt?
  EntegreProductSlug             String?            @db.NVarChar(250)
  RequestedEntegreLineItemIdCode String?            @db.NVarChar(50)
  StockMultiplier                Decimal            @default(1, map: "DF_CI_StockMultplier") @db.Decimal(16, 8)
  UnitDiscountAmount             Decimal            @default(0, map: "DF__ClaimItem__UnitD__1E05700A") @db.Decimal(12, 2)
  ClaimItemReasons               ClaimItemReasons[]

  @@index([ClaimId], map: "IX_FK_ClaimItemClaim")
  @@index([ProductId], map: "IX_FK_ClaimItemProduct")
  @@index([ProductVariantGroupId], map: "IX_FK_ClaimItemProductVariantGroup")
  @@index([OrderLineId], map: "IX_FK_OrderLineId")
}

model Claims {
  Id                      BigInt                @id(map: "PK_Claims") @default(autoincrement())
  EntegreClaimNumber      String                @db.NVarChar(50)
  EntegreClaimId          String?               @db.NVarChar(50)
  CustomerFullName        String                @db.NVarChar(300)
  ClaimDate               DateTime              @db.DateTime
  IntegratedECommerceCode String                @db.NVarChar(10)
  CustomerId              BigInt
  CustomerECommerceKeyId  BigInt
  PackageBarcode          String?               @db.NVarChar(250)
  ClaimStatus             Int                   @db.TinyInt
  InvoicePrinted          Boolean               @default(false, map: "DF__Claims__InvoiceP__1EF99443")
  OrderInvoiceNumber      String?               @db.NVarChar(50)
  ClaimInvoiceNumber      String?               @db.NVarChar(50)
  Customers               Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_ClaimCustomer")
  CustomerECommerceKeys   CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_ClaimCustomerECommerceKey")

  @@index([CustomerId, ClaimDate], map: "IX_Claims_CustomerId_ClaimDate")
  @@index([EntegreClaimNumber, IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId, ClaimStatus], map: "IX_Claims_EntegreClaimNumber_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId_ClaimStatus")
  @@index([IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId, EntegreClaimId, ClaimDate], map: "IX_Claims_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId_EntegreClaimId_ClaimDate")
  @@index([IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId, EntegreClaimId, ClaimStatus], map: "IX_Claims_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId_EntegreClaimId_ClaimStatus")
  @@index([IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId, EntegreClaimNumber, ClaimDate], map: "IX_Claims_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId_EntegreClaimNumber_ClaimDate")
  @@index([CustomerId], map: "IX_FK_ClaimCustomer")
}

model ConnectedCustomers {
  Id            BigInt       @id(map: "PK_ConnectedCustomers") @default(autoincrement())
  ConnectionId  String       @db.NVarChar(50)
  IpAddress     String?      @db.NVarChar(40)
  ConnectedOn   DateTime     @db.DateTime
  CustomerId    BigInt
  AccountingApp String?      @db.NVarChar(20)
  Transport     String?      @db.NVarChar(100)
  CustomerErpId BigInt
  Customers     Customers    @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerConnectedCustomer")
  CustomerErps  CustomerErps @relation(fields: [CustomerErpId], references: [Id], onUpdate: NoAction, map: "FK_CustomerErpConnectedCustomer")
}

model ConnectedUsers {
  Id           BigInt    @id(map: "PK_ConnectedUsers") @default(autoincrement())
  ConnectionId String    @unique(map: "UNQ_ConnectedUsers_ConnectionId") @db.NVarChar(50)
  ConnectedOn  DateTime  @db.DateTime
  UserAgent    String?
  UserId       BigInt
  CustomerId   BigInt
  IpAddress    String?   @db.NVarChar(40)
  Transport    String?   @db.NVarChar(100)
  Customers    Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerConnectedUser")
  Users        Users     @relation(fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_UserConnectedUser")

  @@index([CustomerId], map: "IX_FK_CustomerConnectedUser")
  @@index([UserId], map: "IX_FK_UserConnectedUser")
}

model Countries {
  Iso2              String              @id(map: "PK_Countries") @db.NVarChar(2)
  Iso3              String?             @db.NVarChar(3)
  PhoneCode         Int?                @db.SmallInt
  Name              String              @db.NVarChar(80)
  Customers         Customers[]
  InvoiceAddresses  InvoiceAddresses[]
  ShippingAddresses ShippingAddresses[]
}

model CouponAllowedPackages {
  Id         BigInt   @id(map: "PK_CouponAllowedPackages") @default(autoincrement())
  CouponId   BigInt
  PackagesId BigInt
  Coupons    Coupons  @relation(fields: [CouponId], references: [Id], onUpdate: NoAction, map: "FK_CouponAllowedPackageCoupon")
  Packages   Packages @relation(fields: [PackagesId], references: [Id], onUpdate: NoAction, map: "FK_CouponAllowedPackagePackages")

  @@index([CouponId], map: "IX_FK_CouponAllowedPackageCoupon")
  @@index([PackagesId], map: "IX_FK_CouponAllowedPackagePackages")
}

model CouponCustomerAuthActions {
  Id                      BigInt                 @id(map: "PK_CouponCustomerAuthActions") @default(autoincrement())
  CouponId                BigInt
  AuthActionForCustomerId BigInt
  AuthActionForCustomers  AuthActionForCustomers @relation(fields: [AuthActionForCustomerId], references: [Id], onUpdate: NoAction, map: "FK_CouponCustomerAuthActionAuthActionForCustomer")
  Coupons                 Coupons                @relation(fields: [CouponId], references: [Id], onUpdate: NoAction, map: "FK_CouponCustomerAuthActionCoupon")

  @@index([AuthActionForCustomerId], map: "IX_FK_CouponCustomerAuthActionAuthActionForCustomer")
  @@index([CouponId], map: "IX_FK_CouponCustomerAuthActionCoupon")
}

model CouponGiftPackages {
  Id         BigInt   @id(map: "PK_CouponGiftPackages") @default(autoincrement())
  CouponId   BigInt
  PackagesId BigInt
  Price      Decimal  @db.Decimal(12, 2)
  Coupons    Coupons  @relation(fields: [CouponId], references: [Id], onUpdate: NoAction, map: "FK_CouponGiftPackageCoupon")
  Packages   Packages @relation(fields: [PackagesId], references: [Id], onUpdate: NoAction, map: "FK_CouponGiftPackagePackages")

  @@index([CouponId], map: "IX_FK_CouponGiftPackageCoupon")
  @@index([PackagesId], map: "IX_FK_CouponGiftPackagePackages")
}

model CouponPackageExtras {
  Id                       BigInt  @id(map: "PK_CouponPackageExtras") @default(autoincrement())
  CompetitionAnalysisCount Int
  ErpCount                 Int
  ProductLimit             Int
  SubUserCount             Int
  StoreCount               Int
  CouponId                 BigInt
  Coupons                  Coupons @relation(fields: [CouponId], references: [Id], onUpdate: NoAction, map: "FK_CouponPackageExtraCoupon")

  @@index([CouponId], map: "IX_FK_CouponPackageExtraCoupon")
}

model Coupons {
  Id                        BigInt                      @id(map: "PK_Coupons") @default(autoincrement())
  Name                      String                      @db.NVarChar(100)
  Code                      String                      @db.NVarChar(25)
  Limit                     Int
  StartDate                 DateTime                    @db.DateTime
  EndDate                   DateTime?                   @db.DateTime
  NewCustomerOnly           Boolean
  CouponAllowedPackages     CouponAllowedPackages[]
  CouponCustomerAuthActions CouponCustomerAuthActions[]
  CouponGiftPackages        CouponGiftPackages[]
  CouponPackageExtras       CouponPackageExtras[]
  CouponUsages              CouponUsages[]
}

model CouponUsages {
  Id                     BigInt                @id(map: "PK_CouponUsages") @default(autoincrement())
  CustomerId             BigInt
  CustomerSubscriptionId BigInt
  Date                   DateTime              @db.DateTime
  CouponId               BigInt
  Coupons                Coupons               @relation(fields: [CouponId], references: [Id], onUpdate: NoAction, map: "FK_CouponUsageCoupon")
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CouponUsageCustomer")
  CustomerSubscriptions  CustomerSubscriptions @relation(fields: [CustomerSubscriptionId], references: [Id], onUpdate: NoAction, map: "FK_CouponUsageCustomerSubscription")

  @@index([CouponId], map: "IX_FK_CouponUsageCoupon")
  @@index([CustomerId], map: "IX_FK_CouponUsageCustomer")
  @@index([CustomerSubscriptionId], map: "IX_FK_CouponUsageCustomerSubscription")
}

model Currencies {
  Id                                                                                                            Int                                    @id(map: "PK_Currencies") @default(autoincrement())
  Code                                                                                                          String                                 @db.NVarChar(4)
  Name                                                                                                          String                                 @db.NVarChar(20)
  IsDefault                                                                                                     Boolean
  CurrencyExchanges                                                                                             CurrencyExchanges[]
  CustomerShipmentPriceForOrderAmounts_CustomerShipmentPriceForOrderAmounts_ShipmentPriceCurrencyIdToCurrencies CustomerShipmentPriceForOrderAmounts[] @relation("CustomerShipmentPriceForOrderAmounts_ShipmentPriceCurrencyIdToCurrencies")
  CustomerShipmentPriceForOrderAmounts_CustomerShipmentPriceForOrderAmounts_OrderAmountCurrencyIdToCurrencies   CustomerShipmentPriceForOrderAmounts[] @relation("CustomerShipmentPriceForOrderAmounts_OrderAmountCurrencyIdToCurrencies")
  CustomerShipmentPrices_CustomerShipmentPrices_DomesticCurrencyIdToCurrencies                                  CustomerShipmentPrices[]               @relation("CustomerShipmentPrices_DomesticCurrencyIdToCurrencies")
  CustomerShipmentPrices_CustomerShipmentPrices_InternationalCurrencyIdToCurrencies                             CustomerShipmentPrices[]               @relation("CustomerShipmentPrices_InternationalCurrencyIdToCurrencies")
  Entegre_ProductECommerces_Entegre_ProductECommerces_CurrencyIdToCurrencies                                    Entegre_ProductECommerces[]            @relation("Entegre_ProductECommerces_CurrencyIdToCurrencies")
  Entegre_ProductECommerces_Entegre_ProductECommerces_SourceCurrencyIdToCurrencies                              Entegre_ProductECommerces[]            @relation("Entegre_ProductECommerces_SourceCurrencyIdToCurrencies")
  OrderLinePhantomLines                                                                                         OrderLinePhantomLines[]
  OrderLines_OrderLines_CurrencyIdToCurrencies                                                                  OrderLines[]                           @relation("OrderLines_CurrencyIdToCurrencies")
  OrderLines_OrderLines_ShipmentCurrencyIdToCurrencies                                                          OrderLines[]                           @relation("OrderLines_ShipmentCurrencyIdToCurrencies")
  OrderLines_OrderLines_ProductCurrencyIdToCurrencies                                                           OrderLines[]                           @relation("OrderLines_ProductCurrencyIdToCurrencies")
  OrderServiceItems                                                                                             OrderServiceItems[]
  Products_Products_CurrencyIdToCurrencies                                                                      Products[]                             @relation("Products_CurrencyIdToCurrencies")
  Products_Products_MinSalePriceCurrencyIdToCurrencies                                                          Products[]                             @relation("Products_MinSalePriceCurrencyIdToCurrencies")
  Shipments                                                                                                     Shipments[]
}

model CurrencyExchanges {
  Id         Int        @id(map: "PK_CurrencyExchanges") @default(autoincrement())
  Selling    Decimal    @db.Decimal(28, 20)
  Buying     Decimal    @db.Decimal(28, 20)
  CurrencyId Int
  LastUpdate DateTime   @db.DateTime
  Currencies Currencies @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CurrencyCurrencyExchange")
}

model CustomerAuthActionForCustomers {
  Id                      BigInt                 @id(map: "PK_CustomerAuthActionForCustomers") @default(autoincrement())
  CustomerId              BigInt
  AuthActionForCustomerId BigInt
  AuthActionForCustomers  AuthActionForCustomers @relation(fields: [AuthActionForCustomerId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForCustomerCustomerAuthActionForCustomer")
  Customers               Customers              @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerAuthActionForCustomer")

  @@index([AuthActionForCustomerId], map: "IX_FK_AuthActionForCustomerCustomerAuthActionForCustomer")
  @@index([CustomerId], map: "IX_FK_CustomerCustomerAuthActionForCustomer")
}

model CustomerAuthActionForPackages {
  Id                      BigInt                 @id(map: "PK_CustomerAuthActionForPackages") @default(autoincrement())
  PackagesId              BigInt
  AuthActionForCustomerId BigInt
  AuthActionForCustomers  AuthActionForCustomers @relation(fields: [AuthActionForCustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerAuthActionForPackageAuthActionForCustomer")
  Packages                Packages               @relation(fields: [PackagesId], references: [Id], onUpdate: NoAction, map: "FK_CustomerAuthActionForPackagePackages")
}

model CustomerBrands {
  Id         BigInt    @id(map: "PK_CustomerBrands") @default(autoincrement())
  Name       String    @db.NVarChar(100)
  CustomerId BigInt
  Customers  Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerBrand")

  @@index([CustomerId], map: "IX_CustomerBrands_CustomerId")
}

model CustomerCreditTransactions {
  Id                      BigInt                 @id(map: "PK_CustomerCreditTransactions") @default(autoincrement())
  TransactionDate         DateTime               @db.DateTime
  TransactionType         Int                    @db.TinyInt
  TransactionAmount       Decimal                @db.Decimal(12, 2)
  StoreName               String?                @db.NVarChar(50)
  ReferenceNumber         String?                @db.NVarChar(50)
  Description             String?                @db.NVarChar(300)
  IntegratedECommerceCode String?                @db.NVarChar(10)
  CustomerECommerceKeyId  BigInt?
  CustomerId              BigInt
  OrderId                 BigInt?
  Customers               Customers              @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerCreditTransaction")
  CustomerECommerceKeys   CustomerECommerceKeys? @relation(fields: [CustomerECommerceKeyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceKeyCustomerCreditTransaction")
  IntegratedECommerces    IntegratedECommerces?  @relation(fields: [IntegratedECommerceCode], references: [Code], onDelete: NoAction, onUpdate: NoAction, map: "FK_IntegratedECommerceCustomerCreditTransaction")
  Orders                  Orders?                @relation(fields: [OrderId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderCustomerCreditTransaction")
  CustomerPosPayments     CustomerPosPayments[]

  @@index([CustomerId, TransactionDate], map: "IX_CustomerCreditTransactions_CustomerId_TransactionDate")
  @@index([CustomerId, TransactionType, ReferenceNumber], map: "IX_CustomerCreditTransactions_CustomerId_TransactionType_ReferenceNumber")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyId")
  @@index([OrderId], map: "IX_FK_OrderId")
}

model CustomerDefaultCargoSettings {
  Id                     BigInt                @id(map: "PK_CustomerDefaultCargoSettings") @default(autoincrement())
  SettingModel           String                @db.NVarChar(4000)
  CustomerECommerceKeyId BigInt
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerDefaultCargoSettingCustomerECommerceKey")

  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerDefaultCargoSettingCustomerECommerceKey")
}

model CustomerECommerceDefaultSettings {
  CustomerId                               BigInt
  IntegratedECommerceCode                  String                                   @db.NVarChar(10)
  ComissionRate                            Decimal?                                 @db.Decimal(4, 2)
  DefaultProductDescription                String?                                  @db.NVarChar(Max)
  Entegre_GG_CustomerDefaultSettingId      BigInt?
  Entegre_N11_CustomerDefaultSettingId     BigInt?
  Entegre_SP_CustomerDefaultSettingId      BigInt?
  OrderAutoSendToAccounting                Boolean                                  @default(true, map: "DF__CustomerE__Order__1FEDB87C")
  Entegre_AMZ_CustomerDefaultSettingId     BigInt?
  Id                                       BigInt                                   @id(map: "PK_CustomerECommerceDefaultSettingss") @default(autoincrement())
  CustomerECommerceKeyId                   BigInt
  OrderAutoApprove                         Boolean                                  @default(false, map: "DF__CustomerE__Order__20E1DCB5")
  CustomerErpId                            BigInt?
  Entegre_IC_CustomerDefaultSettingId      BigInt?
  DefaultEInvoiceNote                      String?                                  @db.NVarChar(300)
  OrderAutoApproveType                     Int?                                     @db.TinyInt
  Entegre_Etsy_CustomerDefaultSettingId    BigInt?
  Entegre_AE_CustomerDefaultSettingId      BigInt?
  Entegre_Ebay_CustomerDefaultSettingId    BigInt?
  Entegre_Allegro_CustomerDefaultSettingId BigInt?
  Entegre_N11Pro_CustomerDefaultSettingId  BigInt?
  Customers                                Customers                                @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerECommerceDefaultSetting")
  CustomerErps                             CustomerErps?                            @relation(fields: [CustomerErpId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceDefaultSettingCustomerErp")
  CustomerECommerceKeys                    CustomerECommerceKeys                    @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyCustomerECommerceDefaultSetting")
  Entegre_AE_CustomerDefaultSettings       Entegre_AE_CustomerDefaultSettings?      @relation(fields: [Entegre_AE_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_AE_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_Allegro_CustomerDefaultSettings  Entegre_Allegro_CustomerDefaultSettings? @relation(fields: [Entegre_Allegro_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Allegro_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_AMZ_CustomerDefaultSettings      Entegre_AMZ_CustomerDefaultSettings?     @relation(fields: [Entegre_AMZ_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_AMZ_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_Ebay_CustomerDefaultSettings     Entegre_Ebay_CustomerDefaultSettings?    @relation(fields: [Entegre_Ebay_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Ebay_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_Etsy_CustomerDefaultSettings     Entegre_Etsy_CustomerDefaultSettings?    @relation(fields: [Entegre_Etsy_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Etsy_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_GG_CustomerDefaultSettings       Entegre_GG_CustomerDefaultSettings?      @relation(fields: [Entegre_GG_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_GG_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_IC_CustomerDefaultSettings       Entegre_IC_CustomerDefaultSettings?      @relation(fields: [Entegre_IC_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_IC_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_N11_CustomerDefaultSettings      Entegre_N11_CustomerDefaultSettings?     @relation(fields: [Entegre_N11_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_N11_DefaultSettingCustomerECommerceDefaultSetting")
  Entegre_N11Pro_CustomerDefaultSettings   Entegre_N11Pro_CustomerDefaultSettings?  @relation(fields: [Entegre_N11Pro_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_N11Pro_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  Entegre_SP_CustomerDefaultSettings       Entegre_SP_CustomerDefaultSettings?      @relation(fields: [Entegre_SP_CustomerDefaultSettingId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_SP_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  IntegratedECommerces                     IntegratedECommerces                     @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceCustomerECommerceDefaultSetting")

  @@unique([CustomerECommerceKeyId, CustomerId, IntegratedECommerceCode], map: "uq_CustomerECommerceDefaultSettingCustomerECommerceKey")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyCustomerECommerceDefaultSetting")
  @@index([Entegre_Allegro_CustomerDefaultSettingId], map: "IX_FK_Entegre_Allegro_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  @@index([Entegre_Ebay_CustomerDefaultSettingId], map: "IX_FK_Entegre_Ebay_CustomerDefaultSettingCustomerECommerceDefaultSetting")
  @@index([Entegre_N11Pro_CustomerDefaultSettingId], map: "IX_FK_Entegre_N11Pro_CustomerDefaultSettingCustomerECommerceDefaultSetting")
}

model CustomerECommerceKeyPriceFormulas {
  Id                     BigInt                @id(map: "PK_CustomerECommerceKeyPriceFormulas") @default(autoincrement())
  CustomerId             BigInt
  CustomerECommerceKeyId BigInt
  FormulaString          String                @db.NVarChar(200)
  MinCostPrice           Decimal               @db.Decimal(12, 2)
  MaxCostPrice           Decimal               @db.Decimal(12, 2)
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyPriceFormulaCustomer")
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyPriceFormulaCustomerECommerceKey")

  @@index([CustomerId], map: "IX_FK_CustomerECommerceKeyPriceFormulaCustomer")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyPriceFormulaCustomerECommerceKey")
}

model CustomerECommerceKeys {
  CustomerId                                                             BigInt
  IntegratedECommerceCode                                                String                                 @db.NVarChar(10)
  ApiKey                                                                 String?                                @db.NVarChar(200)
  ApiSecret                                                              String?                                @db.NVarChar(200)
  UserName                                                               String?                                @db.NVarChar(200)
  Password                                                               String?                                @db.NVarChar(200)
  ShopId                                                                 String?                                @db.NVarChar(50)
  Active                                                                 Boolean
  PraPazarAuthorized                                                     Boolean                                @default(false, map: "DF__CustomerE__PraPa__21D600EE")
  Id                                                                     BigInt                                 @id(map: "PK_CustomerECommerceKeys") @default(autoincrement())
  StoreName                                                              String                                 @default("N'Mağaza İsmi'", map: "DF__CustomerE__Store__22CA2527") @db.NVarChar(50)
  BaseUrlApi                                                             String?                                @db.NVarChar(200)
  BaseUrlProduct                                                         String?                                @db.NVarChar(200)
  ShipmentCompanyECommerceCodeId                                         String?                                @db.NVarChar(80)
  UseForDailyStockUpdate                                                 Boolean                                @default(false, map: "DF__CustomerE__UseFo__23BE4960")
  UsedForXmlOutput                                                       Boolean                                @default(false, map: "DF__CustomerE__UsedF__24B26D99")
  RefreshToken                                                           String?                                @db.NVarChar(2500)
  RefreshTokenExpiryDate                                                 DateTime?                              @db.DateTime
  AccessToken                                                            String?                                @db.NVarChar(2500)
  AccessTokenExpiryDate                                                  DateTime?                              @db.DateTime
  OutOfStockOnCriticalInventory                                          Boolean                                @default(false, map: "DF__CustomerE__OutOf__25A691D2")
  AutoAssignOrderPackageUserId                                           BigInt?
  ECommercePriceFromCostPriceFormula                                     String?                                @db.NVarChar(200)
  UseVirtualStockAmount                                                  Boolean                                @default(false, map: "DF__CustomerE__UseVi__269AB60B")
  Claims                                                                 Claims[]
  CustomerCreditTransactions                                             CustomerCreditTransactions[]
  CustomerDefaultCargoSettings                                           CustomerDefaultCargoSettings[]
  CustomerECommerceDefaultSettings                                       CustomerECommerceDefaultSettings[]
  CustomerECommerceKeyPriceFormulas                                      CustomerECommerceKeyPriceFormulas[]
  Customers                                                              Customers                              @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerECommerceKey")
  Users                                                                  Users?                                 @relation(fields: [AutoAssignOrderPackageUserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceKeyUser")
  IntegratedECommerces                                                   IntegratedECommerces                   @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceCustomerECommerceKey")
  CustomerInvoiceInformations                                            CustomerInvoiceInformations[]
  CustomerShipmentPriceForOrderAmounts                                   CustomerShipmentPriceForOrderAmounts[]
  ECommerceMessagesECommerceKeys                                         ECommerceMessagesECommerceKeys[]
  ECommerceProductBatches                                                ECommerceProductBatches[]
  eInvoices                                                              eInvoices[]
  Entegre_CS_Questions                                                   Entegre_CS_Questions[]
  Entegre_GG_Messages                                                    Entegre_GG_Messages[]
  Entegre_HB_Questions                                                   Entegre_HB_Questions[]
  Entegre_N11_Questions                                                  Entegre_N11_Questions[]
  Entegre_Ozon_Messages                                                  Entegre_Ozon_Messages[]
  Entegre_PraStore_Categories                                            Entegre_PraStore_Categories[]
  Entegre_ProductECommerces                                              Entegre_ProductECommerces[]
  Entegre_TO_Questions                                                   Entegre_TO_Questions[]
  Orders_Orders_CustomerECommerceAccountingKeyIdToCustomerECommerceKeys  Orders[]                               @relation("Orders_CustomerECommerceAccountingKeyIdToCustomerECommerceKeys")
  Orders_Orders_CustomerECommerceCargoKeyIdToCustomerECommerceKeys       Orders[]                               @relation("Orders_CustomerECommerceCargoKeyIdToCustomerECommerceKeys")
  Orders_Orders_CustomerECommerceFulFillmentKeyIdToCustomerECommerceKeys Orders[]                               @relation("Orders_CustomerECommerceFulFillmentKeyIdToCustomerECommerceKeys")
  Orders_Orders_CustomerECommerceKeyIdToCustomerECommerceKeys            Orders[]                               @relation("Orders_CustomerECommerceKeyIdToCustomerECommerceKeys")

  @@unique([CustomerId, IntegratedECommerceCode, StoreName], map: "uq_CustomerECommerceKeyStoreName")
  @@index([Active], map: "IX_CustomerECommerceKeys_Active")
  @@index([Active, IntegratedECommerceCode], map: "IX_CustomerECommerceKeys_Active_IntegratedECommerceCode")
  @@index([CustomerId], map: "IX_CustomerECommerceKeys_CustomerId")
  @@index([AutoAssignOrderPackageUserId], map: "IX_FK_CustomerECommerceKeyUser")
  @@index([IntegratedECommerceCode], map: "IX_FK_IntegratedECommerceCustomerECommerceKey")
}

model CustomerECommerceMessageTemplates {
  Id                             BigInt                           @id(map: "PK_CustomerECommerceMessageTemplates") @default(autoincrement())
  Title                          String                           @db.NVarChar(50)
  Description                    String                           @db.NVarChar(2000)
  CustomerId                     BigInt
  Customers                      Customers                        @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceMessageTemplateCustomer")
  ECommerceMessagesECommerceKeys ECommerceMessagesECommerceKeys[]

  @@index([CustomerId], map: "IX_FK_CustomerECommerceMessageTemplateCustomer")
}

model CustomerECommerceProductInsertLogs {
  Id                         BigInt    @id(map: "PK_CustomerECommerceProductInsertLogs") @default(autoincrement())
  Entegre_ECommerceProductId BigInt
  CustomerId                 BigInt
  InsertDate                 DateTime  @db.DateTime
  Customers                  Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceProductInsertLogCustomer")

  @@index([CustomerId, InsertDate], map: "IX_CustomerECommerceProductInsertLogs_CustomerId_InsertDate")
}

model CustomerErps {
  Id                               BigInt                             @id(map: "PK_CustomerErps") @default(autoincrement())
  Name                             String                             @db.NVarChar(50)
  IsDefault                        Boolean
  UseForStockUpdate                Boolean
  CustomerId                       BigInt
  Code                             String?                            @db.NVarChar(100)
  ConnectedCustomers               ConnectedCustomers[]
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
  Customers                        Customers                          @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerErpCustomer")

  @@index([CustomerId], map: "IX_FK_CustomerErpCustomer")
}

model CustomerInvoiceInformations {
  CustomerId             BigInt
  Name                   String                @db.NVarChar(250)
  TaxNumber              String                @db.NVarChar(20)
  TaxOffice              String?               @db.NVarChar(20)
  Email                  String                @db.NVarChar(250)
  PhoneNumber            String                @db.NVarChar(15)
  CityId                 BigInt
  DistrictId             BigInt
  DefaultNote            String?               @db.NVarChar(300)
  CustomerECommerceKeyId BigInt
  Id                     BigInt                @id(map: "PK_CustomerInvoiceInformations") @default(autoincrement())
  Address                String?               @db.NVarChar(250)
  InvoiceProfileId       String?               @db.NVarChar(100)
  IbanNumber             String?               @db.NVarChar(30)
  TaxExemptionCode       String?               @db.NVarChar(5)
  ExportTaxExemptionCode String?               @db.NVarChar(5)
  Cities                 Cities                @relation(fields: [CityId], references: [Id], onUpdate: NoAction, map: "FK_CityCustomerInvoiceInformation")
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerInvoiceInformation")
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerInvoiceInformationCustomerECommerceKey")
  Districts              Districts             @relation(fields: [DistrictId], references: [Id], onUpdate: NoAction, map: "FK_DistrictCustomerInvoiceInformation")

  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerInvoiceInformationCustomerECommerceKey")
}

model CustomerInvoiceSettings {
  CustomerId                        BigInt    @id(map: "PK_CustomerInvoiceSettings")
  UseProductNameForInvoice          Boolean
  AskForInvoiceNumberOnPrintInvoice Boolean
  UseStockMultiplierForAccounting   Boolean   @default(false, map: "DF__CustomerI__UseSt__278EDA44")
  UseStockMultiplierForInvoice      Boolean   @default(false, map: "DF__CustomerI__UseSt__2882FE7D")
  UseStockMultiplierForCargoBarcode Boolean   @default(false, map: "DF__CustomerI__UseSt__297722B6")
  UseBundleProductForInvoice        Boolean   @default(false, map: "DF__CustomerI__UseBu__797DF6D1")
  Customers                         Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerInvoiceSetting")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model CustomerNotifications {
  Id                      BigInt                @default(autoincrement())
  CustomerId              BigInt
  NotificationType        Int                   @db.TinyInt
  RefNo                   String                @db.NVarChar(50)
  NotificationDescription String                @db.NVarChar(500)
  NotificationDate        DateTime              @db.DateTime
  IntegratedECommerceCode String?               @db.NVarChar(10)
  Customers               Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerNotificationCustomer")
  IntegratedECommerces    IntegratedECommerces? @relation(fields: [IntegratedECommerceCode], references: [Code], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerNotificationIntegratedECommerce")

  @@index([CustomerId, NotificationDate], map: "IX_CustomerNotifications_CustomerId_NotificationDate")
  @@ignore
}

model CustomerNotificationSettings {
  Id                                 BigInt                           @id(map: "PK_CustomerNotificationSettings") @default(autoincrement())
  StartDate                          DateTime                         @db.Time
  EndDate                            DateTime                         @db.Time
  Active                             Boolean
  Destination                        String                           @db.NVarChar(250)
  CustomerId                         BigInt
  CustomerNotificationSettingTypesId BigInt
  Customers                          Customers                        @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerNotificationSettings")
  CustomerNotificationSettingTypes   CustomerNotificationSettingTypes @relation(fields: [CustomerNotificationSettingTypesId], references: [Id], onUpdate: NoAction, map: "FK_CustomerNotificationSettingTypesCustomerNotificationSettings")

  @@index([CustomerId], map: "IX_FK_CustomerCustomerNotificationSettings")
}

model CustomerNotificationSettingTypes {
  Id                           BigInt                         @id(map: "PK_CustomerNotificationSettingTypes") @default(autoincrement())
  CustomerNotificationType     Int                            @db.TinyInt
  Description                  String                         @db.NVarChar(100)
  Code                         String                         @db.NVarChar(50)
  CustomerNotificationSettings CustomerNotificationSettings[]
}

model CustomerOrderColorTags {
  Id         BigInt    @id(map: "PK_CustomerOrderColorTags") @default(autoincrement())
  CustomerId BigInt
  Name       String    @db.NVarChar(150)
  ColorTag   Int       @db.SmallInt
  Customers  Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerOrderColorTagCustomer")

  @@index([CustomerId], map: "IX_FK_CustomerOrderColorTagCustomer")
}

model CustomerPosPayments {
  Id                          BigInt                      @id(map: "PK_CustomerPosPayments") @default(autoincrement())
  PaymentDate                 DateTime                    @db.DateTime
  CreditCardMaskedNumber      String                      @db.NVarChar(20)
  ExpireYear                  Int                         @db.SmallInt
  ExpireMonth                 Int                         @db.TinyInt
  ClientIp                    String                      @db.NVarChar(50)
  PaymentAmount               Decimal                     @db.Decimal(12, 2)
  PaymentResult               Int                         @db.TinyInt
  ResultMessage               String?                     @db.NVarChar(Max)
  TransactionId               String                      @db.NVarChar(80)
  CustomerId                  BigInt
  CustomerCreditTransactionId BigInt?
  CustomerSMSTransactionsId   BigInt?
  PaymentFor                  Int                         @db.TinyInt
  CustomerSubscriptionId      BigInt?
  BankName                    String?                     @db.NVarChar(20)
  CustomerCreditTransactions  CustomerCreditTransactions? @relation(fields: [CustomerCreditTransactionId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerCreditTransactionCustomerPostPayment")
  Customers                   Customers                   @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerPostPayment")
  CustomerSMSTransactions     CustomerSMSTransactions?    @relation(fields: [CustomerSMSTransactionsId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerPosPaymentCustomerSMSTransactions")
  CustomerSubscriptions       CustomerSubscriptions?      @relation(fields: [CustomerSubscriptionId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerPosPaymentCustomerSubscription")

  @@index([PaymentResult, PaymentDate], map: "IX_CustomerPosPayments_PaymentResult_PaymentDate")
  @@index([TransactionId], map: "IX_CustomerPosPayments_TransactionId")
}

model CustomerReports {
  Id                BigInt    @id(map: "PK_CustomerReports") @default(autoincrement())
  CustomerId        BigInt
  CreationDate      DateTime  @db.DateTime
  StartDate         DateTime? @db.DateTime
  EndDate           DateTime? @db.DateTime
  ReportSourceValue String?   @db.NVarChar(2500)
  Status            Int       @db.TinyInt
  ReportFileName    String?   @db.NVarChar(50)
  ReportMessage     String?
  Customers         Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerReportCustomer")

  @@index([CustomerId], map: "IX_FK_CustomerReportCustomer")
}

model CustomerReportTemplates {
  Id           BigInt    @id(map: "PK_CustomerReportTemplates") @default(autoincrement())
  ReportType   String    @db.NVarChar(20)
  TemplateName String    @db.NVarChar(50)
  Template     String    @db.NVarChar(Max)
  CustomerId   BigInt
  IsDefault    Boolean
  Customers    Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerReportTemplate")

  @@index([CustomerId], map: "IX_FK_CustomerCustomerReportTemplate")
}

model CustomerRepresentatives {
  Id             BigInt         @id(map: "PK_CustomerRepresentatives") @default(autoincrement())
  Name           String         @db.NVarChar(80)
  PhoneNumber    String?        @db.NVarChar(10)
  CustomerUserId BigInt?
  IsDealer       Boolean        @default(true, map: "DF__CustomerR__IsDea__2A6B46EF")
  Campaigns      Campaigns[]
  CustomerUsers  CustomerUsers? @relation(fields: [CustomerUserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerRepresentativeCustomerUser")
  Customers      Customers[]

  @@index([CustomerUserId], map: "IX_FK_CustomerRepresentativeCustomerUser")
}

model Customers {
  Id                                           BigInt                                         @id(map: "PK_Customers") @default(autoincrement())
  Name                                         String                                         @db.NVarChar(250)
  IsMainCompany                                Boolean
  CitizenShipId                                String?                                        @db.NVarChar(20)
  TaxNumber                                    String?                                        @db.NVarChar(20)
  TaxOffice                                    String?                                        @db.NVarChar(20)
  Active                                       Boolean
  ApiSecret                                    String?                                        @db.NVarChar(32)
  ApiKey                                       String?                                        @db.NVarChar(100)
  PhoneNumber                                  String?                                        @db.NVarChar(15)
  GsmNumber                                    String?                                        @db.NVarChar(15)
  Email                                        String                                         @unique(map: "UNQ_Customers_EMail") @db.NVarChar(250)
  CityId                                       BigInt?
  DistrictId                                   BigInt?
  LastActivity                                 DateTime?                                      @db.DateTime
  CustomerRepresentativeId                     BigInt?
  HasApprovedContract                          Boolean                                        @default(false, map: "DF__Customers__HasAp__2B5F6B28")
  ContractApprovedDate                         DateTime?                                      @db.DateTime
  ContractApprovedIpAddress                    String?                                        @db.NVarChar(50)
  ContractUserAgent                            String?
  InvoiceAdress                                String?                                        @db.NVarChar(800)
  InvoiceCityId                                BigInt?
  InvoiceDistrictId                            BigInt?
  InvoiceName                                  String?                                        @db.NVarChar(250)
  InvoiceTaxNumber                             String?                                        @db.NVarChar(20)
  InvoiceTaxOffice                             String?                                        @db.NVarChar(20)
  InvoiceCitizenShipId                         String?                                        @db.NVarChar(20)
  ProfileImage                                 String?                                        @db.NVarChar(80)
  CountryIso2                                  String                                         @default("TR", map: "DF__Customers__Count__2C538F61") @db.NVarChar(2)
  ReferenceCode                                String                                         @default("newid()", map: "DF__Customers__Refer__2D47B39A") @db.NVarChar(50)
  ReferenceCustomerId                          BigInt?
  BulkOperations                               BulkOperations[]
  CampaignCustomers                            CampaignCustomers[]
  Categories                                   Categories[]
  Claims                                       Claims[]
  ConnectedCustomers                           ConnectedCustomers[]
  ConnectedUsers                               ConnectedUsers[]
  CouponUsages                                 CouponUsages[]
  CustomerAuthActionForCustomers               CustomerAuthActionForCustomers[]
  CustomerBrands                               CustomerBrands[]
  CustomerCreditTransactions                   CustomerCreditTransactions[]
  CustomerECommerceDefaultSettings             CustomerECommerceDefaultSettings[]
  CustomerECommerceKeyPriceFormulas            CustomerECommerceKeyPriceFormulas[]
  CustomerECommerceKeys                        CustomerECommerceKeys[]
  CustomerECommerceMessageTemplates            CustomerECommerceMessageTemplates[]
  CustomerECommerceProductInsertLogs           CustomerECommerceProductInsertLogs[]
  CustomerErps                                 CustomerErps[]
  CustomerInvoiceInformations                  CustomerInvoiceInformations[]
  CustomerInvoiceSettings                      CustomerInvoiceSettings?
  CustomerNotifications                        CustomerNotifications[]                        @ignore
  CustomerNotificationSettings                 CustomerNotificationSettings[]
  CustomerOrderColorTags                       CustomerOrderColorTags[]
  CustomerPosPayments                          CustomerPosPayments[]
  CustomerReports                              CustomerReports[]
  CustomerReportTemplates                      CustomerReportTemplates[]
  Cities                                       Cities?                                        @relation(fields: [CityId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CityCustomer")
  Countries                                    Countries                                      @relation(fields: [CountryIso2], references: [Iso2], onUpdate: NoAction, map: "FK_CustomerCountry")
  Customers                                    Customers?                                     @relation("CustomersToCustomers", fields: [ReferenceCustomerId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerCustomer")
  other_Customers                              Customers[]                                    @relation("CustomersToCustomers")
  CustomerRepresentatives                      CustomerRepresentatives?                       @relation(fields: [CustomerRepresentativeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerRepresentativeCustomer")
  Districts                                    Districts?                                     @relation(fields: [DistrictId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_DistrictCustomer")
  CustomerSettings                             CustomerSettings?
  CustomerShipmentPriceForOrderAmounts         CustomerShipmentPriceForOrderAmounts[]
  CustomerShipmentPrices                       CustomerShipmentPrices[]
  CustomerSMSTransactions                      CustomerSMSTransactions[]
  CustomerSubscriptions                        CustomerSubscriptions[]
  CustomerUsers                                CustomerUsers[]
  DescriptionTemplates                         DescriptionTemplates[]
  ECommerceProductBatches                      ECommerceProductBatches[]
  ECommerceSynchronizations                    ECommerceSynchronizations[]
  Entegre_CS_Questions                         Entegre_CS_Questions[]
  Entegre_GG_Messages                          Entegre_GG_Messages[]
  Entegre_HB_Questions                         Entegre_HB_Questions[]
  Entegre_N11_Questions                        Entegre_N11_Questions[]
  Entegre_Ozon_Messages                        Entegre_Ozon_Messages[]
  Entegre_ProductECommerce_CompetitionAnalyses Entegre_ProductECommerce_CompetitionAnalyses[]
  Entegre_ProductECommerce_Jobs                Entegre_ProductECommerce_Jobs[]
  Entegre_ProductECommerces                    Entegre_ProductECommerces[]
  Entegre_TO_Questions                         Entegre_TO_Questions[]
  Orders                                       Orders[]
  Products                                     Products[]
  Shipments                                    Shipments[]
  Tags                                         Tags[]
  Variants                                     Variants[]
  VariantValues                                VariantValues[]

  @@index([Active, LastActivity], map: "IX_Customers_Active_LastActivity")
  @@index([CustomerRepresentativeId, IsMainCompany], map: "IX_Customers_CustomerRepresentativeId_IsMainCompany")
  @@index([IsMainCompany], map: "IX_Customers_IsMainCompany")
  @@index([ReferenceCode], map: "IX_Customers_ReferenceCode")
  @@index([CountryIso2], map: "IX_FK_CustomerCountry")
  @@index([ReferenceCustomerId], map: "IX_FK_CustomerCustomer")
  @@index([CustomerRepresentativeId], map: "IX_FK_CustomerRepresentativeCustomer")
}

model CustomerSettings {
  CustomerId                      BigInt    @id(map: "PK_CustomerSettings")
  IncreaseStockOnCancelOrder      Boolean
  CancelCargoOnCancelOrder        Boolean   @default(false, map: "DF__CustomerS__Cance__2E3BD7D3")
  UseProductNameForCargoBarcode   Boolean   @default(false, map: "DF__CustomerS__UsePr__2F2FFC0C")
  IncreaseStockOnClaimApprove     Boolean   @default(true, map: "DF__CustomerS__Incre__30242045")
  CalculateCargoCountFromQuantity Boolean   @default(false, map: "DF__CustomerS__Calcu__3118447E")
  UseBundleNameForCargoBarcode    Boolean   @default(false, map: "DF__CustomerS__UseBu__320C68B7")
  PostInvoiceToECommerce          Boolean   @default(false, map: "DF__CustomerS__PostI__33008CF0")
  VatRateId                       Int       @default(4, map: "DF__CustomerS__VatRa__33F4B129")
  PostInvoiceLinkToECommerce      Boolean   @default(false, map: "DF__CustomerS__PostI__4DD47EBD")
  Customers                       Customers @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerSettingCustomer")
  VatRates                        VatRates  @relation(fields: [VatRateId], references: [Id], onUpdate: NoAction, map: "FK_VatRateCustomerSetting")

  @@index([VatRateId], map: "IX_FK_VatRateCustomerSetting")
}

model CustomerShipmentPriceForOrderAmounts {
  Id                                                                                  BigInt                @id(map: "PK_CustomerShipmentPriceForOrderAmounts") @default(autoincrement())
  CustomerId                                                                          BigInt
  CustomerECommerceKeyId                                                              BigInt
  ShipmentPrice                                                                       Decimal               @db.Decimal(10, 2)
  ShipmentPriceCurrencyId                                                             Int
  MinOrderAmount                                                                      Decimal               @db.Decimal(10, 2)
  MaxOrderAmount                                                                      Decimal               @db.Decimal(10, 2)
  OrderAmountCurrencyId                                                               Int
  Currencies_CustomerShipmentPriceForOrderAmounts_ShipmentPriceCurrencyIdToCurrencies Currencies            @relation("CustomerShipmentPriceForOrderAmounts_ShipmentPriceCurrencyIdToCurrencies", fields: [ShipmentPriceCurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipmentPriceForOrderAmountCurrency")
  Currencies_CustomerShipmentPriceForOrderAmounts_OrderAmountCurrencyIdToCurrencies   Currencies            @relation("CustomerShipmentPriceForOrderAmounts_OrderAmountCurrencyIdToCurrencies", fields: [OrderAmountCurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipmentPriceForOrderAmountCurrency1")
  Customers                                                                           Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipmentPricePerECommerceKeyCustomer")
  CustomerECommerceKeys                                                               CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipmentPricePerECommerceKeyCustomerECommerceKey")

  @@index([ShipmentPriceCurrencyId], map: "IX_FK_CustomerShipmentPriceForOrderAmountCurrency")
  @@index([OrderAmountCurrencyId], map: "IX_FK_CustomerShipmentPriceForOrderAmountCurrency1")
  @@index([CustomerId], map: "IX_FK_CustomerShipmentPricePerECommerceKeyCustomer")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerShipmentPricePerECommerceKeyCustomerECommerceKey")
}

model CustomerShipmentPrices {
  Id                                                                    BigInt      @id(map: "PK_CustomerShipmentPrices") @default(autoincrement())
  CustomerId                                                            BigInt
  VolumetricWeight                                                      Int         @db.SmallInt
  DomesticPrice                                                         Decimal     @db.Decimal(10, 2)
  DomesticCurrencyId                                                    Int
  InternationalPrice                                                    Decimal?    @db.Decimal(10, 2)
  InternationalCurrencyId                                               Int?
  Currencies_CustomerShipmentPrices_DomesticCurrencyIdToCurrencies      Currencies  @relation("CustomerShipmentPrices_DomesticCurrencyIdToCurrencies", fields: [DomesticCurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipmentPriceCurrency")
  Currencies_CustomerShipmentPrices_InternationalCurrencyIdToCurrencies Currencies? @relation("CustomerShipmentPrices_InternationalCurrencyIdToCurrencies", fields: [InternationalCurrencyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerShipmentPriceCurrencyInternational")
  Customers                                                             Customers   @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipmentPriceCustomer")

  @@index([CustomerId, VolumetricWeight], map: "IX_CustomerShipmentPrices_CustomerId_VolumetricWeight")
  @@index([DomesticCurrencyId], map: "IX_FK_CustomerShipmentPriceCurrency")
  @@index([InternationalCurrencyId], map: "IX_FK_CustomerShipmentPriceCurrencyInternational")
  @@index([CustomerId], map: "IX_FK_CustomerShipmentPriceCustomer")
}

model CustomerSMSTransactions {
  Id                  BigInt                @id(map: "PK_CustomerSMSTransactions") @default(autoincrement())
  TransactionAmount   Decimal               @db.Decimal(12, 2)
  PhoneNumber         String?               @db.NVarChar(15)
  MessageId           String?               @db.NVarChar(15)
  TransactionDate     DateTime              @db.DateTime
  CustomerId          BigInt
  CustomerPosPayments CustomerPosPayments[]
  Customers           Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerSMSTransactions")

  @@index([CustomerId], map: "IX_CustomerSMSTransactions_CustomerId")
}

model CustomerSubscriptionCustomerAuths {
  Id                      BigInt                 @id(map: "PK_CustomerSubscriptionCustomerAuths") @default(autoincrement())
  CustomerSubscriptionId  BigInt
  AuthActionForCustomerId BigInt
  AuthActionForCustomers  AuthActionForCustomers @relation(fields: [AuthActionForCustomerId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForCustomerCustomerSubscriptionCustomerAuth")
  CustomerSubscriptions   CustomerSubscriptions  @relation(fields: [CustomerSubscriptionId], references: [Id], onUpdate: NoAction, map: "FK_CustomerSubscriptionCustomerSubscriptionCustomerAuth")

  @@index([AuthActionForCustomerId], map: "IX_CustomerSubscriptionCustomerAuths_AuthActionForCustomerId")
  @@index([CustomerSubscriptionId], map: "IX_FK_CustomerSubscriptionCustomerSubscriptionCustomerAuth")
}

model CustomerSubscriptions {
  Id                                  BigInt                              @id(map: "PK_CustomerSubscriptions") @default(autoincrement())
  StartDate                           DateTime                            @db.DateTime
  EndDate                             DateTime                            @db.DateTime
  SubscriptionType                    Int                                 @db.TinyInt
  CustomerId                          BigInt
  PackageName                         String                              @default("N'PACKAGE'", map: "DF__CustomerS__Packa__34E8D562") @db.NVarChar(20)
  MaxStoreCount                       Int                                 @default(10, map: "DF__CustomerS__MaxSt__35DCF99B") @db.SmallInt
  MaxSubUserCount                     Int                                 @default(0, map: "DF__CustomerS__MaxSu__36D11DD4") @db.SmallInt
  Price                               Decimal                             @default(0, map: "DF__CustomerS__Price__37C5420D") @db.Decimal(12, 2)
  Description                         String?                             @db.NVarChar(500)
  MaxCompetitionAnalysisCount         Int                                 @default(0, map: "DF__CustomerS__MaxCo__38B96646")
  DiscountPrice                       Decimal                             @default(0, map: "DF__CustomerS__Disco__39AD8A7F") @db.Decimal(12, 2)
  MinimumMonthlyCreditUsageAmount     Decimal?                            @db.Decimal(12, 2)
  DailyNewECommerceProductLimit       Int?
  PackagesId                          BigInt?
  MaximumErpCount                     Int                                 @default(0, map: "DF__CustomerS__Maxim__3AA1AEB8") @db.SmallInt
  MaxProductLimit                     Int?
  MaxOrderLimit                       Int?
  OrderLimitFirstNotificationSended   Boolean                             @default(false, map: "DF__CustomerS__Order__0C90CB45")
  OrderLimitSecondNotificationSended  Boolean                             @default(false, map: "DF__CustomerS__Order__0D84EF7E")
  OrderLimitReachedNotificationSended Boolean                             @default(false, map: "DF__CustomerS__Order__0E7913B7")
  HasApprovedContract                 Boolean                             @default(false, map: "DF__CustomerS__HasAp__0F6D37F0")
  ContractApprovedDate                DateTime?                           @db.DateTime
  ContractApprovedIpAddress           String?                             @db.NVarChar(50)
  ContractUserAgent                   String?
  CouponUsages                        CouponUsages[]
  CustomerPosPayments                 CustomerPosPayments[]
  CustomerSubscriptionCustomerAuths   CustomerSubscriptionCustomerAuths[]
  Customers                           Customers                           @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerSubscription")
  Packages                            Packages?                           @relation(fields: [PackagesId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerSubscriptionPackages")

  @@index([CustomerId, StartDate, EndDate], map: "IX_CustomerSubscriptions_CustomerId_StartDate_EndDate")
  @@index([PackageName, StartDate], map: "IX_CustomerSubscriptions_PackageName_StartDate")
  @@index([PackagesId, StartDate, EndDate], map: "IX_CustomerSubscriptions_PackagesId_StartDate_EndDate")
  @@index([StartDate, EndDate], map: "IX_CustomerSubscriptions_StartDate_EndDate")
  @@index([StartDate, EndDate, SubscriptionType], map: "IX_CustomerSubscriptions_StartDate_EndDate_SubscriptionType")
  @@index([SubscriptionType], map: "IX_CustomerSubscriptions_SubscriptionType")
  @@index([SubscriptionType, StartDate, EndDate], map: "IX_CustomerSubscriptions_SubscriptionType_StartDate_EndDate")
  @@index([CustomerId], map: "IX_FK_CustomerCustomerSubscription")
}

model CustomerUserAuthActionForUsers {
  Id                  BigInt             @id(map: "PK_CustomerUserAuthActionForUsers") @default(autoincrement())
  CustomerUserId      BigInt
  AuthActionForUserId BigInt
  AuthActionForUsers  AuthActionForUsers @relation(fields: [AuthActionForUserId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForUserCustomerUserAuthActionForUser")
  CustomerUsers       CustomerUsers      @relation(fields: [CustomerUserId], references: [Id], onUpdate: NoAction, map: "FK_CustomerUserCustomerUserAuthActionForUser")

  @@index([CustomerUserId], map: "IX_CustomerUserAuthActionForUsers_CustomerUserId")
}

model CustomerUserNotificationTypes {
  Id                 Int               @id(map: "PK_CustomerUserNotificationTypes") @default(autoincrement())
  Enabled            Boolean
  NotificationTypeId Int
  CustomerUserId     BigInt
  CustomerUsers      CustomerUsers     @relation(fields: [CustomerUserId], references: [Id], onUpdate: NoAction, map: "FK_CustomerUserCustomerUserNotificationType")
  NotificationTypes  NotificationTypes @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_NotificationTypeCustomerUserNotificationType")

  @@index([CustomerUserId], map: "IX_FK_CustomerUserCustomerUserNotificationType")
}

model CustomerUsers {
  Id                             BigInt                           @id(map: "PK_CustomerUsers") @default(autoincrement())
  Active                         Boolean
  IsMainUser                     Boolean
  UserId                         BigInt
  CustomerId                     BigInt
  LastActivity                   DateTime?                        @db.DateTime
  CustomerRepresentatives        CustomerRepresentatives[]
  CustomerUserAuthActionForUsers CustomerUserAuthActionForUsers[]
  CustomerUserNotificationTypes  CustomerUserNotificationTypes[]
  Customers                      Customers                        @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerCustomerUser")
  Users                          Users                            @relation(fields: [UserId], references: [Id], onUpdate: NoAction, map: "FK_UserCustomerUser")

  @@index([CustomerId], map: "IX_FK_CustomerCustomerUser")
  @@index([UserId], map: "IX_FK_UserCustomerUser")
}

model DescriptionTemplates {
  Id                                            BigInt                                          @id(map: "PK_DescriptionTemplates") @default(autoincrement())
  Description                                   String                                          @db.NVarChar(4000)
  CustomerId                                    BigInt
  Name                                          String                                          @db.NVarChar(30)
  Customers                                     Customers                                       @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerDescriptionTemplate")
  Entegre_ProductECommerce_DescriptionTemplates Entegre_ProductECommerce_DescriptionTemplates[]

  @@index([CustomerId], map: "IX_FK_CustomerDescriptionTemplate")
}

model Districts {
  Id                          BigInt                        @id(map: "PK_Districts") @default(autoincrement())
  Name                        String                        @db.NVarChar(100)
  CityId                      BigInt
  CustomerInvoiceInformations CustomerInvoiceInformations[]
  Customers                   Customers[]
  Cities                      Cities                        @relation(fields: [CityId], references: [Id], onUpdate: NoAction, map: "FK_CityDistrict")

  @@index([CityId], map: "IX_FK_CityDistrict")
}

model ECommerceMessagesECommerceKeys {
  Id                                 BigInt                            @id(map: "PK_ECommerceMessagesECommerceKeys") @default(autoincrement())
  CustomerECommerceKeyId             BigInt
  CustomerECommerceMessageTemplateId BigInt
  CustomerECommerceKeys              CustomerECommerceKeys             @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_ECommerceMessagesECommerceKeyCustomerECommerceKey")
  CustomerECommerceMessageTemplates  CustomerECommerceMessageTemplates @relation(fields: [CustomerECommerceMessageTemplateId], references: [Id], onUpdate: NoAction, map: "FK_ECommerceMessagesECommerceKeyCustomerECommerceMessageTemplate")

  @@index([CustomerECommerceKeyId], map: "IX_FK_ECommerceMessagesECommerceKeyCustomerECommerceKey")
  @@index([CustomerECommerceMessageTemplateId], map: "IX_FK_ECommerceMessagesECommerceKeyCustomerECommerceMessageTemplate")
}

model ECommerceProductBatchDatas {
  BatchId                 String                    @id(map: "PK_ECommerceProductBatchDatas") @db.NVarChar(50)
  BatchData               String?                   @db.NVarChar(Max)
  ResultData              String?                   @db.NVarChar(Max)
  ECommerceProductBatches ECommerceProductBatches[]
}

model ECommerceProductBatches {
  Id                         BigInt                     @id(map: "PK_ECommerceProductBatches") @default(autoincrement())
  CustomerId                 BigInt
  BatchType                  Int                        @db.TinyInt
  BatchDate                  DateTime                   @db.DateTime
  Entegre_ProductECommerceId BigInt?
  ResultType                 Int                        @db.TinyInt
  BatchId                    String                     @db.NVarChar(50)
  IntegratedECommerceCode    String                     @db.NVarChar(10)
  CustomerECommerceKeyId     BigInt
  CustomerECommerceKeys      CustomerECommerceKeys      @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_ECommerceProductBatchCustomerECommerceKey")
  ECommerceProductBatchDatas ECommerceProductBatchDatas @relation(fields: [BatchId], references: [BatchId], onUpdate: NoAction, map: "FK_ECommerceProductBatchDataECommerceProductBatch")
  IntegratedECommerces       IntegratedECommerces       @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_ECommerceProductBatchIntegratedECommerce")
  Customers                  Customers                  @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_ECommerceProductResultCustomer")

  @@index([BatchId, Entegre_ProductECommerceId], map: "IX_ECommerceProductBatches_BatchId_Entegre_ProductECommerceId")
  @@index([CustomerId], map: "IX_ECommerceProductBatches_CustomerId")
  @@index([CustomerId, ResultType, IntegratedECommerceCode], map: "IX_ECommerceProductBatches_CustomerId_ResultType_IntegratedECommerceCode")
  @@index([ResultType], map: "IX_ECommerceProductBatches_ResultType")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyId")
  @@index([BatchId], map: "IX_FK_ECommerceProductBatchDataECommerceProductBatch")
}

model ECommerceSynchronizations {
  Id                      BigInt               @id(map: "PK_ECommerceSynchronizations") @default(autoincrement())
  StartDateTime           DateTime             @db.DateTime
  EndDateTime             DateTime?            @db.DateTime
  SynchronizationStatus   Int                  @db.TinyInt
  SynchronizationType     Int                  @db.TinyInt
  IntegratedECommerceCode String               @db.NVarChar(10)
  CustomerId              BigInt
  JobId                   String?              @db.NVarChar(20)
  Description             String?              @db.NVarChar(2000)
  ExtraParamValue         String?              @db.NVarChar(50)
  Customers               Customers            @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceSynchronization")
  IntegratedECommerces    IntegratedECommerces @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceECommerceSynchronization")

  @@index([SynchronizationType, IntegratedECommerceCode, CustomerId], map: "IX_ECommerceSynchronizations_SynchronizationType_IntegratedECommerceCode_CustomerId")
}

model eInvoices {
  Id                      BigInt                @id(map: "PK_eInvoices") @default(autoincrement())
  Uuid                    String                @db.NVarChar(80)
  DocumentNumber          String                @db.NVarChar(80)
  eInvoiceType            Int                   @db.TinyInt
  Note                    String?               @db.NVarChar(500)
  IntegratedECommerceCode String                @db.NVarChar(10)
  CustomerECommerceKeyId  BigInt
  SendDate                DateTime              @db.DateTime
  CustomerECommerceKeys   CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_eInvoiceCustomerECommerceKey")
  IntegratedECommerces    IntegratedECommerces  @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceeInvoice")
  Orders                  Orders[]

  @@index([CustomerECommerceKeyId, SendDate], map: "IX_eInvoices_CustomerECommerceKeyId_SendDate")
}

model EInvoiceUsers {
  Id        BigInt @id(map: "PK_EInvoiceUsers") @default(autoincrement())
  TaxNumber String @db.NVarChar(11)
  Alias     String @db.NVarChar(250)

  @@index([TaxNumber], map: "IX_EInvoiceUsers_TaxNumber")
}

model Entegre_AE_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_AE_AttributeAttributeValues") @default(autoincrement())
  Entegre_AE_AttributeId      BigInt
  Entegre_AE_AttributeValueId BigInt
  Entegre_AE_CategoryId       BigInt
  Entegre_AE_Attributes       Entegre_AE_Attributes      @relation(fields: [Entegre_AE_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_AE_AttributeAttributeValueEntegre_AE_Attribute")
  Entegre_AE_AttributeValues  Entegre_AE_AttributeValues @relation(fields: [Entegre_AE_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_AE_AttributeAttributeValueEntegre_AE_AttributeValue")
  Entegre_AE_Categories       Entegre_AE_Categories      @relation(fields: [Entegre_AE_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_AE_AttributeAttributeValueEntegre_AE_Category")

  @@index([Entegre_AE_AttributeId, Entegre_AE_AttributeValueId], map: "IX_Entegre_AE_AttributeAttributeValues_Entegre_AE_AttributeId_Entegre_AE_AttributeValueId")
  @@index([Entegre_AE_AttributeId, Entegre_AE_CategoryId], map: "IX_Entegre_AE_AttributeAttributeValues_Entegre_AE_AttributeId_Entegre_AE_CategoryId")
}

model Entegre_AE_Attributes {
  Id                                  BigInt                                @id(map: "PK_Entegre_AE_Attributes")
  Name                                String                                @db.NVarChar(100)
  Entegre_AE_AttributeAttributeValues Entegre_AE_AttributeAttributeValues[]
  Entegre_AE_CategoryAttributes       Entegre_AE_CategoryAttributes[]
}

model Entegre_AE_AttributeValues {
  Id                                  BigInt                                @id(map: "PK_Entegre_AE_AttributeValues")
  AttributeValue                      String                                @db.NVarChar(100)
  Entegre_AE_AttributeAttributeValues Entegre_AE_AttributeAttributeValues[]

  @@index([AttributeValue], map: "IX_Entegre_AE_AttributeValues_AttributeValue")
}

model Entegre_AE_Categories {
  Id                                  BigInt                                @id(map: "PK_Entegre_AE_Categories")
  Name                                String                                @db.NVarChar(100)
  Deepest                             Boolean
  BreadCrumb                          String                                @db.NVarChar(500)
  ParentId                            BigInt?
  Entegre_AE_AttributeAttributeValues Entegre_AE_AttributeAttributeValues[]
  Entegre_AE_CategoryAttributes       Entegre_AE_CategoryAttributes[]

  @@index([ParentId], map: "IX_Entegre_AE_Categories_ParentId")
}

model Entegre_AE_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_AE_CategoryAttributes") @default(autoincrement())
  Required               Boolean
  Varianter              Boolean
  Entegre_AE_AttributeId BigInt
  Entegre_AE_CategoryId  BigInt
  IsAttribute            Boolean
  AttributeType          String                @db.NVarChar(10)
  Entegre_AE_Attributes  Entegre_AE_Attributes @relation(fields: [Entegre_AE_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_AE_CategoriAttributeEntegre_AE_Attribute")
  Entegre_AE_Categories  Entegre_AE_Categories @relation(fields: [Entegre_AE_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_AE_CategoriAttributeEntegre_AE_Category")

  @@index([Entegre_AE_CategoryId], map: "IX_Entegre_AE_CategoryAttributes_CategoryId_AttributeId")
}

model Entegre_AE_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_AE_CustomerDefaultSettings") @default(autoincrement())
  ShipmentTemplateId               BigInt
  LanguageCode                     String                             @db.NVarChar(5)
  ShippingDays                     Int
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_AERU_AttributeAttributeValues {
  Id                            BigInt @id(map: "PK_Entegre_AERU_AttributeAttributeValue") @default(autoincrement())
  Entegre_AERU_AttributeId      BigInt
  Entegre_AERU_AttributeValueId BigInt
  Entegre_AERU_CategoryId       BigInt
}

model Entegre_AERU_Attributes {
  Id   BigInt @id(map: "PK_Entegre_AERU_Attribute")
  Name String @db.NVarChar(100)
}

model Entegre_AERU_AttributeValues {
  Id             BigInt @id(map: "PK_Entegre_AERU_AttributeValue")
  AttributeValue String @db.NVarChar(100)
}

model Entegre_AERU_Categories {
  Id         BigInt  @id(map: "PK_Entegre_AERU_Category")
  Name       String  @db.NVarChar(100)
  Deepest    Boolean
  BreadCrumb String  @db.NVarChar(500)
  ParentId   BigInt?
}

model Entegre_AERU_CategoryAttributes {
  Id                       BigInt  @id(map: "PK_Entegre_AERU_CategoryAttribute") @default(autoincrement())
  Required                 Boolean
  Varianter                Boolean
  IsAttribute              Boolean
  AttributeType            String  @db.NVarChar(10)
  Entegre_AERU_AttributeId BigInt
  Entegre_AERU_CategoryId  BigInt
}

model Entegre_Allegro_AttributeAttributeValues {
  Id                               BigInt                          @id(map: "PK_Entegre_Allegro_AttributeAttributeValues") @default(autoincrement())
  Entegre_Allegro_CategoryId       String                          @db.NVarChar(50)
  Entegre_Allegro_AttributeId      String                          @db.NVarChar(50)
  Entegre_Allegro_AttributeValueId String                          @db.NVarChar(50)
  Entegre_Allegro_Attributes       Entegre_Allegro_Attributes      @relation(fields: [Entegre_Allegro_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Allegro_AttributeEntegre_Allegro_AttributeAttributeValue")
  Entegre_Allegro_AttributeValues  Entegre_Allegro_AttributeValues @relation(fields: [Entegre_Allegro_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Allegro_AttributeValueEntegre_Allegro_AttributeAttributeValue")
  Entegre_Allegro_Categories       Entegre_Allegro_Categories      @relation(fields: [Entegre_Allegro_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Allegro_CategoryEntegre_Allegro_AttributeAttributeValue")

  @@index([Entegre_Allegro_AttributeId], map: "IX_FK_Entegre_Allegro_AttributeEntegre_Allegro_AttributeAttributeValue")
  @@index([Entegre_Allegro_AttributeValueId], map: "IX_FK_Entegre_Allegro_AttributeValueEntegre_Allegro_AttributeAttributeValue")
  @@index([Entegre_Allegro_CategoryId], map: "IX_FK_Entegre_Allegro_CategoryEntegre_Allegro_AttributeAttributeValue")
}

model Entegre_Allegro_Attributes {
  Id                                       String                                     @id(map: "PK_Entegre_Allegro_Attributes") @db.NVarChar(50)
  Name                                     String                                     @db.NVarChar(100)
  Type                                     String                                     @db.NVarChar(10)
  Entegre_Allegro_AttributeAttributeValues Entegre_Allegro_AttributeAttributeValues[]
  Entegre_Allegro_CategoryAttributes       Entegre_Allegro_CategoryAttributes[]
}

model Entegre_Allegro_AttributeValues {
  Id                                       String                                     @id(map: "PK_Entegre_Allegro_AttributeValues") @db.NVarChar(50)
  Name                                     String                                     @db.NVarChar(200)
  Entegre_Allegro_AttributeAttributeValues Entegre_Allegro_AttributeAttributeValues[]
}

model Entegre_Allegro_Categories {
  Id                                       String                                     @id(map: "PK_Entegre_Allegro_Categories") @db.NVarChar(50)
  Name                                     String                                     @db.NVarChar(100)
  Deepest                                  Boolean
  BreadCrumb                               String                                     @db.NVarChar(600)
  ParentId                                 String?                                    @db.NVarChar(Max)
  Entegre_Allegro_AttributeAttributeValues Entegre_Allegro_AttributeAttributeValues[]
  Entegre_Allegro_CategoryAttributes       Entegre_Allegro_CategoryAttributes[]
}

model Entegre_Allegro_CategoryAttributes {
  Id                          BigInt                     @id(map: "PK_Entegre_Allegro_CategoryAttributes") @default(autoincrement())
  Required                    Boolean
  Varianter                   Boolean
  Entegre_Allegro_CategoryId  String                     @db.NVarChar(50)
  Entegre_Allegro_AttributeId String                     @db.NVarChar(50)
  Entegre_Allegro_Attributes  Entegre_Allegro_Attributes @relation(fields: [Entegre_Allegro_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Allegro_AttributeEntegre_Allegro_CategoryAttribute")
  Entegre_Allegro_Categories  Entegre_Allegro_Categories @relation(fields: [Entegre_Allegro_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Allegro_CategoryEntegre_Allegro_CategoryAttribute")

  @@index([Entegre_Allegro_AttributeId], map: "IX_FK_Entegre_Allegro_AttributeEntegre_Allegro_CategoryAttribute")
  @@index([Entegre_Allegro_CategoryId], map: "IX_FK_Entegre_Allegro_CategoryEntegre_Allegro_CategoryAttribute")
}

model Entegre_Allegro_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_Allegro_CustomerDefaultSettings") @default(autoincrement())
  ShippingRateId                   String                             @db.NVarChar(50)
  ImpliedWarrantyId                String                             @db.NVarChar(50)
  ReturnPolicyId                   String                             @db.NVarChar(50)
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_AMZ_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_AMZ_CustomerDefaultSettings") @default(autoincrement())
  ShipmentTemplateName             String?                            @db.NVarChar(100)
  ShippingDays                     Int?                               @db.TinyInt
  ShipmentCompanyId                BigInt?
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
  ShipmentCompanies                ShipmentCompanies?                 @relation(fields: [ShipmentCompanyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ShipmentCompanyEntegre_AMZ_CustomerDefaultSetting")
}

model Entegre_BD_Attributes {
  Id                            BigInt                          @id(map: "PK_Entegre_BD_Attributes") @default(autoincrement())
  Name                          String                          @db.NVarChar(100)
  Entegre_BD_AttributeValues    Entegre_BD_AttributeValues[]
  Entegre_BD_CategoryAttributes Entegre_BD_CategoryAttributes[]
}

model Entegre_BD_AttributeValues {
  Id                     BigInt                @id(map: "PK_Entegre_BD_AttributeValues") @default(autoincrement())
  Name                   String                @db.NVarChar(100)
  Entegre_BD_AttributeId BigInt
  Entegre_BD_Attributes  Entegre_BD_Attributes @relation(fields: [Entegre_BD_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_BD_AttributeValueEntegre_BD_Attribute")

  @@index([Entegre_BD_AttributeId], map: "IX_FK_Entegre_BD_AttributeValueEntegre_BD_Attribute")
}

model Entegre_BD_Categories {
  Id                            BigInt                          @id(map: "PK_Entegre_BD_Categories")
  Name                          String                          @db.NVarChar(100)
  ParentId                      BigInt?
  Deepest                       Boolean
  BreadCrumb                    String                          @db.NVarChar(500)
  Entegre_BD_CategoryAttributes Entegre_BD_CategoryAttributes[]
}

model Entegre_BD_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_BD_CategoryAttributes") @default(autoincrement())
  Entegre_BD_CategoryId  BigInt
  Entegre_BD_AttributeId BigInt
  Entegre_BD_Attributes  Entegre_BD_Attributes @relation(fields: [Entegre_BD_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_BD_CategoryAttributeEntegre_BD_Attribute")
  Entegre_BD_Categories  Entegre_BD_Categories @relation(fields: [Entegre_BD_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_BD_CategoryAttributeEntegre_BD_Category")

  @@index([Entegre_BD_AttributeId], map: "IX_FK_Entegre_BD_CategoryAttributeEntegre_BD_Attribute")
  @@index([Entegre_BD_CategoryId], map: "IX_FK_Entegre_BD_CategoryAttributeEntegre_BD_Category")
}

model Entegre_CS_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_CS_AttributeAttributeValues") @default(autoincrement())
  Entegre_CS_AttributeValueId BigInt
  Entegre_CS_AttributeId      BigInt
  Entegre_CS_Attributes       Entegre_CS_Attributes      @relation(fields: [Entegre_CS_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_CS_AttributeEntegre_CS_AttributeAttributeValue")
  Entegre_CS_AttributeValues  Entegre_CS_AttributeValues @relation(fields: [Entegre_CS_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_CS_AttributeValueEntegre_CS_AttributeAttributeValue")

  @@index([Entegre_CS_AttributeId], map: "IX_Entegre_CS_AttributeAttributeValues_Entegre_CS_AttributeId")
  @@index([Entegre_CS_AttributeId], map: "IX_FK_Entegre_CS_AttributeEntegre_CS_AttributeAttributeValue")
  @@index([Entegre_CS_AttributeValueId], map: "IX_FK_Entegre_CS_AttributeValueEntegre_CS_AttributeAttributeValue")
}

model Entegre_CS_Attributes {
  Id                                  BigInt                                @id(map: "PK_Entegre_CS_Attributes")
  Name                                String                                @db.NVarChar(100)
  Entegre_CS_AttributeAttributeValues Entegre_CS_AttributeAttributeValues[]
  Entegre_CS_CategoryAttributes       Entegre_CS_CategoryAttributes[]
}

model Entegre_CS_AttributeValues {
  Id                                  BigInt                                @id(map: "PK_Entegre_CS_AttributeValues")
  Name                                String                                @db.NVarChar(100)
  Entegre_CS_AttributeAttributeValues Entegre_CS_AttributeAttributeValues[]

  @@index([Name], map: "IX_Entegre_CS_AttributeValues_Name")
}

model Entegre_CS_Categories {
  Id                            BigInt                          @id(map: "PK_Entegre_CS_Categories")
  Name                          String                          @db.NVarChar(100)
  Deepest                       Boolean
  BreadCrumb                    String                          @db.NVarChar(500)
  ParentId                      BigInt?
  Entegre_CS_CategoryAttributes Entegre_CS_CategoryAttributes[]

  @@index([Name], map: "IX_Entegre_CS_Categories_Name")
  @@index([ParentId], map: "IX_Entegre_CS_Categories_ParentId")
}

model Entegre_CS_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_CS_CategoryAttributes") @default(autoincrement())
  Varianter              Boolean
  Required               Boolean
  Entegre_CS_AttributeId BigInt
  Entegre_CS_CategoryId  BigInt
  IsDynamic              Boolean               @default(false, map: "DF__Entegre_C__IsDyn__3B95D2F1")
  Entegre_CS_Attributes  Entegre_CS_Attributes @relation(fields: [Entegre_CS_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_CS_CategoryAttributeEntegre_CS_Attribute")
  Entegre_CS_Categories  Entegre_CS_Categories @relation(fields: [Entegre_CS_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_CS_CategoryAttributeEntegre_CS_Category")

  @@index([Entegre_CS_AttributeId], map: "IX_FK_Entegre_CS_CategoryAttributeEntegre_CS_Attribute")
  @@index([Entegre_CS_CategoryId], map: "IX_FK_Entegre_CS_CategoryAttributeEntegre_CS_Category")
}

model Entegre_CS_Questions {
  Id                     BigInt                @id(map: "PK_Entegre_CS_Questions") @default(autoincrement())
  QuestionDate           DateTime              @db.DateTime
  QuestionId             String                @db.NVarChar(50)
  Question               String                @db.NVarChar(2000)
  EntegreProductName     String                @db.NVarChar(100)
  AnswerDate             DateTime?             @db.DateTime
  Answer                 String?               @db.NVarChar(4000)
  QuestionExposed        Boolean
  ProductWebUrl          String?               @db.NVarChar(250)
  ProductImageUrl        String?               @db.NVarChar(250)
  CustomerId             BigInt
  CustomerECommerceKeyId BigInt
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_CS_QuestionCustomer")
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_CS_QuestionCustomerECommerceKey")

  @@index([CustomerId], map: "IX_FK_Entegre_CS_QuestionCustomer")
  @@index([CustomerECommerceKeyId], map: "IX_FK_Entegre_CS_QuestionCustomerECommerceKey")
}

model Entegre_Ebay_AttributeAttributeValues {
  Id                            BigInt                       @id(map: "PK_Entegre_Ebay_AttributeAttributeValues") @default(autoincrement())
  Entegre_Ebay_AttributeId      BigInt
  Entegre_Ebay_AttributeValueId BigInt
  Entegre_Ebay_CategoryId       BigInt
  Entegre_Ebay_Attributes       Entegre_Ebay_Attributes      @relation(fields: [Entegre_Ebay_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ebay_AttributeAttributeValueEntegre_Ebay_Attribute")
  Entegre_Ebay_AttributeValues  Entegre_Ebay_AttributeValues @relation(fields: [Entegre_Ebay_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ebay_AttributeAttributeValueEntegre_Ebay_AttributeValue")
  Entegre_Ebay_Categories       Entegre_Ebay_Categories      @relation(fields: [Entegre_Ebay_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ebay_AttributeAttributeValueEntegre_Ebay_Category")

  @@index([Entegre_Ebay_AttributeId], map: "IX_FK_Entegre_Ebay_AttributeAttributeValueEntegre_Ebay_Attribute")
  @@index([Entegre_Ebay_AttributeValueId], map: "IX_FK_Entegre_Ebay_AttributeAttributeValueEntegre_Ebay_AttributeValue")
  @@index([Entegre_Ebay_CategoryId], map: "IX_FK_Entegre_Ebay_AttributeAttributeValueEntegre_Ebay_Category")
}

model Entegre_Ebay_Attributes {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Ebay_Attributes") @default(autoincrement())
  Name                                  String                                  @db.NVarChar(100)
  Entegre_Ebay_AttributeAttributeValues Entegre_Ebay_AttributeAttributeValues[]
  Entegre_Ebay_CategoryAttributes       Entegre_Ebay_CategoryAttributes[]
}

model Entegre_Ebay_AttributeValues {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Ebay_AttributeValues") @default(autoincrement())
  Name                                  String                                  @db.NVarChar(100)
  Entegre_Ebay_AttributeAttributeValues Entegre_Ebay_AttributeAttributeValues[]

  @@index([Name], map: "IX_Entegre_Ebay_AttributeValues_Name")
}

model Entegre_Ebay_Categories {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Ebay_Categories")
  Name                                  String                                  @db.NVarChar(100)
  Deepest                               Boolean
  BreadCrumb                            String                                  @db.NVarChar(500)
  ParentId                              BigInt?
  Entegre_Ebay_AttributeAttributeValues Entegre_Ebay_AttributeAttributeValues[]
  Entegre_Ebay_CategoryAttributes       Entegre_Ebay_CategoryAttributes[]
}

model Entegre_Ebay_CategoryAttributes {
  Id                       BigInt                  @id(map: "PK_Entegre_Ebay_CategoryAttributes") @default(autoincrement())
  Varianter                Boolean
  Required                 Boolean
  Entegre_Ebay_CategoryId  BigInt
  Entegre_Ebay_AttributeId BigInt
  Entegre_Ebay_Attributes  Entegre_Ebay_Attributes @relation(fields: [Entegre_Ebay_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ebay_CategoryAttributeEntegre_Ebay_Attribute")
  Entegre_Ebay_Categories  Entegre_Ebay_Categories @relation(fields: [Entegre_Ebay_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ebay_CategoryAttributeEntegre_Ebay_Category")

  @@index([Entegre_Ebay_AttributeId], map: "IX_FK_Entegre_Ebay_CategoryAttributeEntegre_Ebay_Attribute")
  @@index([Entegre_Ebay_CategoryId], map: "IX_FK_Entegre_Ebay_CategoryAttributeEntegre_Ebay_Category")
}

model Entegre_Ebay_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_Ebay_CustomerDefaultSettings") @default(autoincrement())
  ProductFormatType                String                             @db.NVarChar(100)
  ShippingWhereType                String                             @db.NVarChar(100)
  FulfillmentPolicyId              String                             @db.NVarChar(100)
  PaymentPolicyId                  String                             @db.NVarChar(100)
  ReturnPolicyId                   String                             @db.NVarChar(100)
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_EPttAvm_Categories {
  Id                               Int                          @id(map: "PK_Entegre_EPttAvm_Categories")
  Name                             String                       @db.NVarChar(100)
  Deepest                          Boolean
  ParentId                         Int?
  BreadCrumb                       String?                      @db.NVarChar(500)
  Entegre_EPttAvm_Categories       Entegre_EPttAvm_Categories?  @relation("Entegre_EPttAvm_CategoriesToEntegre_EPttAvm_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_EPttAvm_CategoryEntegre_EPttAvm_Category")
  other_Entegre_EPttAvm_Categories Entegre_EPttAvm_Categories[] @relation("Entegre_EPttAvm_CategoriesToEntegre_EPttAvm_Categories")

  @@index([ParentId], map: "IX_Entegre_EPttAvm_Categories_ParentId")
}

model Entegre_Etsy_AttributeAttributeScales {
  Id                            BigInt                       @id(map: "PK_Entegre_Etsy_AttributeAttributeScales") @default(autoincrement())
  Entegre_Etsy_AttributeId      BigInt
  Entegre_Etsy_AttributeScaleId BigInt
  Entegre_Etsy_Attributes       Entegre_Etsy_Attributes      @relation(fields: [Entegre_Etsy_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_AttributeAttributeScaleEntegre_Etsy_Attribute")
  Entegre_Etsy_AttributeScales  Entegre_Etsy_AttributeScales @relation(fields: [Entegre_Etsy_AttributeScaleId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_AttributeAttributeScaleEntegre_Etsy_AttributeScale")

  @@index([Entegre_Etsy_AttributeId], map: "IX_FK_Entegre_Etsy_AttributeAttributeScaleEntegre_Etsy_Attribute")
  @@index([Entegre_Etsy_AttributeScaleId], map: "IX_FK_Entegre_Etsy_AttributeAttributeScaleEntegre_Etsy_AttributeScale")
}

model Entegre_Etsy_AttributeAttributeValues {
  Id                            BigInt                       @id(map: "PK_Entegre_Etsy_AttributeAttributeValues") @default(autoincrement())
  Entegre_Etsy_AttributeId      BigInt
  Entegre_Etsy_AttributeValueId BigInt
  Entegre_Etsy_CategoryId       BigInt
  Entegre_Etsy_Attributes       Entegre_Etsy_Attributes      @relation(fields: [Entegre_Etsy_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_AttributeAttributeValueEntegre_Etsy_Attribute")
  Entegre_Etsy_Categories       Entegre_Etsy_Categories      @relation(fields: [Entegre_Etsy_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_AttributeAttributeValueEntegre_Etsy_Category")
  Entegre_Etsy_AttributeValues  Entegre_Etsy_AttributeValues @relation(fields: [Entegre_Etsy_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_AttributeValueEntegre_Etsy_AttributeAttributeValue")

  @@index([Entegre_Etsy_AttributeId, Entegre_Etsy_AttributeValueId, Entegre_Etsy_CategoryId], map: "IX_Entegre_Etsy_AttributeAttributeValues_Entegre_Etsy_AttributeId_Entegre_Etsy_AttributeValueId_Entegre_Etsy_CategoryId")
  @@index([Entegre_Etsy_AttributeId, Entegre_Etsy_CategoryId], map: "IX_Entegre_Etsy_AttributeAttributeValues_Entegre_Etsy_AttributeId_Entegre_Etsy_CategoryId")
  @@index([Entegre_Etsy_AttributeId], map: "IX_FK_Entegre_Etsy_AttributeAttributeValueEntegre_Etsy_Attribute")
}

model Entegre_Etsy_Attributes {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Etsy_Attributes")
  Name                                  String                                  @db.NVarChar(100)
  Entegre_Etsy_AttributeAttributeScales Entegre_Etsy_AttributeAttributeScales[]
  Entegre_Etsy_AttributeAttributeValues Entegre_Etsy_AttributeAttributeValues[]
  Entegre_Etsy_CategoryAttributes       Entegre_Etsy_CategoryAttributes[]
}

model Entegre_Etsy_AttributeScales {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Etsy_AttributeScales")
  Name                                  String                                  @db.NVarChar(80)
  Entegre_Etsy_AttributeAttributeScales Entegre_Etsy_AttributeAttributeScales[]
}

model Entegre_Etsy_AttributeValues {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Etsy_AttributeValues")
  AttributeValue                        String                                  @db.NVarChar(120)
  Entegre_Etsy_AttributeAttributeValues Entegre_Etsy_AttributeAttributeValues[]
}

model Entegre_Etsy_Categories {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Etsy_Categories")
  Name                                  String                                  @db.NVarChar(100)
  Deepest                               Boolean
  BreadCrumb                            String                                  @db.NVarChar(500)
  ParentId                              BigInt?
  Entegre_Etsy_AttributeAttributeValues Entegre_Etsy_AttributeAttributeValues[]
  Entegre_Etsy_Categories               Entegre_Etsy_Categories?                @relation("Entegre_Etsy_CategoriesToEntegre_Etsy_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Etsy_CategoryEntegre_Etsy_Category")
  other_Entegre_Etsy_Categories         Entegre_Etsy_Categories[]               @relation("Entegre_Etsy_CategoriesToEntegre_Etsy_Categories")
  Entegre_Etsy_CategoryAttributes       Entegre_Etsy_CategoryAttributes[]

  @@index([ParentId], map: "IX_FK_Entegre_Etsy_CategoryEntegre_Etsy_Category")
}

model Entegre_Etsy_CategoryAttributes {
  Id                       BigInt                  @id(map: "PK_Entegre_Etsy_CategoryAttributes") @default(autoincrement())
  Entegre_Etsy_CategoryId  BigInt
  Entegre_Etsy_AttributeId BigInt
  Varianter                Boolean
  IsAttribute              Boolean
  Required                 Boolean
  Entegre_Etsy_Attributes  Entegre_Etsy_Attributes @relation(fields: [Entegre_Etsy_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_CategoryAttributeEntegre_Etsy_Attribute")
  Entegre_Etsy_Categories  Entegre_Etsy_Categories @relation(fields: [Entegre_Etsy_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Etsy_CategoryAttributeEntegre_Etsy_Category")

  @@index([Entegre_Etsy_AttributeId], map: "IX_FK_Entegre_Etsy_CategoryAttributeEntegre_Etsy_Attribute")
  @@index([Entegre_Etsy_CategoryId], map: "IX_FK_Entegre_Etsy_CategoryAttributeEntegre_Etsy_Category")
}

model Entegre_Etsy_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_Etsy_CustomerDefaultSettings") @default(autoincrement())
  WhoMade                          String                             @db.NVarChar(20)
  IsSupply                         String                             @db.NVarChar(10)
  WhenMade                         String                             @db.NVarChar(20)
  ShipmentTemplateId               BigInt?
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_Flo_AttributeAttributeValues {
  Id                           BigInt                      @id(map: "PK_Entegre_Flo_AttributeAttributeValues") @default(autoincrement())
  Entegre_Flo_AttributeId      BigInt
  Entegre_Flo_AttributeValueId BigInt
  Entegre_Flo_CategoryId       BigInt
  Entegre_Flo_Attributes       Entegre_Flo_Attributes      @relation(fields: [Entegre_Flo_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Flo_AttributeEntegre_Flo_AttributeAttributeValue")
  Entegre_Flo_AttributeValues  Entegre_Flo_AttributeValues @relation(fields: [Entegre_Flo_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Flo_AttributeValueEntegre_Flo_AttributeAttributeValue")
  Entegre_Flo_Categories       Entegre_Flo_Categories      @relation(fields: [Entegre_Flo_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Flo_CategoryEntegre_Flo_AttributeAttributeValue")

  @@index([Entegre_Flo_AttributeId, Entegre_Flo_CategoryId], map: "IX_Entegre_Flo_AttributeAttributeValues_Entegre_Flo_AttributeId_Entegre_Flo_CategoryId")
  @@index([Entegre_Flo_AttributeId], map: "IX_FK_Entegre_Flo_AttributeEntegre_Flo_AttributeAttributeValue")
  @@index([Entegre_Flo_AttributeValueId], map: "IX_FK_Entegre_Flo_AttributeValueEntegre_Flo_AttributeAttributeValue")
}

model Entegre_Flo_Attributes {
  Id                                   BigInt                                 @id(map: "PK_Entegre_Flo_Attributes")
  Name                                 String                                 @db.NVarChar(100)
  Entegre_Flo_AttributeAttributeValues Entegre_Flo_AttributeAttributeValues[]
  Entegre_Flo_CategoryAttributes       Entegre_Flo_CategoryAttributes[]
}

model Entegre_Flo_AttributeValues {
  Id                                   BigInt                                 @id(map: "PK_Entegre_Flo_AttributeValues")
  Name                                 String                                 @db.NVarChar(120)
  Entegre_Flo_AttributeAttributeValues Entegre_Flo_AttributeAttributeValues[]
}

model Entegre_Flo_Brands {
  Id   BigInt @id(map: "PK_Entegre_Flo_Brands")
  Name String @db.NVarChar(100)
}

model Entegre_Flo_Categories {
  Id                                   BigInt                                 @id(map: "PK_Entegre_Flo_Categories")
  Name                                 String                                 @db.NVarChar(100)
  Deepest                              Boolean
  BreadCrumb                           String?                                @db.NVarChar(500)
  ParentId                             BigInt?
  Entegre_Flo_AttributeAttributeValues Entegre_Flo_AttributeAttributeValues[]
  Entegre_Flo_CategoryAttributes       Entegre_Flo_CategoryAttributes[]
}

model Entegre_Flo_CategoryAttributes {
  Id                      BigInt                 @id(map: "PK_Entegre_Flo_CategoryAttributes") @default(autoincrement())
  Entegre_Flo_CategoryId  BigInt
  Required                Boolean
  AllowCustom             Boolean
  Varianter               Boolean
  Entegre_Flo_AttributeId BigInt
  Entegre_Flo_Attributes  Entegre_Flo_Attributes @relation(fields: [Entegre_Flo_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Flo_AttributeEntegre_Flo_CategoryAttribute")
  Entegre_Flo_Categories  Entegre_Flo_Categories @relation(fields: [Entegre_Flo_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Flo_CategoryAttributeEntegre_Flo_Category")

  @@index([Entegre_Flo_AttributeId], map: "IX_FK_Entegre_Flo_AttributeEntegre_Flo_CategoryAttribute")
  @@index([Entegre_Flo_CategoryId], map: "IX_FK_Entegre_Flo_CategoryAttributeEntegre_Flo_Category")
}

model Entegre_Fruugo_Categories {
  Id                              BigInt                      @id(map: "PK_Entegre_Fruugo_Categories")
  Name                            String                      @db.NVarChar(100)
  Deepest                         Boolean
  BreadCrumb                      String                      @db.NVarChar(600)
  ParentId                        BigInt?
  Entegre_Fruugo_Categories       Entegre_Fruugo_Categories?  @relation("Entegre_Fruugo_CategoriesToEntegre_Fruugo_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Fruugo_CategoryEntegre_Fruugo_Category")
  other_Entegre_Fruugo_Categories Entegre_Fruugo_Categories[] @relation("Entegre_Fruugo_CategoriesToEntegre_Fruugo_Categories")

  @@index([ParentId], map: "IX_FK_Entegre_Fruugo_CategoryEntegre_Fruugo_Category")
}

model Entegre_Getir_AccessTokens {
  Id                    BigInt   @id(map: "PK_Entegre_Getir_AccessTokens") @default(autoincrement())
  UserName              String   @db.NVarChar(50)
  Password              String   @db.NVarChar(50)
  PasswordExpiryDate    DateTime @db.DateTime
  AccessToken           String   @db.NVarChar(350)
  AccessTokenExpiryDate DateTime @db.DateTime
}

model Entegre_GG_Categories {
  Code                        String                        @id(map: "PK_Entegre_GG_Categories") @db.NVarChar(10)
  Name                        String                        @db.NVarChar(150)
  Deepest                     Boolean
  HasCatalog                  Boolean
  BreadCrumb                  String                        @db.NVarChar(800)
  Entegre_GG_CategorySpecs    Entegre_GG_CategorySpecs[]
  Entegre_GG_CategoryVariants Entegre_GG_CategoryVariants[]
}

model Entegre_GG_CategorySpecs {
  Id                      Int                   @id(map: "PK_Entegre_GG_CategorySpecs") @default(autoincrement())
  Entegre_GG_CategoryCode String                @db.NVarChar(10)
  Required                Boolean
  Entegre_GG_SpecId       Int
  Entegre_GG_Categories   Entegre_GG_Categories @relation(fields: [Entegre_GG_CategoryCode], references: [Code], onUpdate: NoAction, map: "FK_Entegre_GG_CategoryEntegre_GG_CategorySpec")
  Entegre_GG_Specs        Entegre_GG_Specs      @relation(fields: [Entegre_GG_SpecId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_GG_SpecEntegre_GG_CategorySpec")

  @@index([Entegre_GG_CategoryCode], map: "IX_Entegre_GG_CategorySpecs_CategoryCode_SpecId")
}

model Entegre_GG_CategoryVariants {
  Id                      BigInt                @id(map: "PK_Entegre_GG_CategoryVariants") @default(autoincrement())
  Base                    Boolean
  OrderNumber             Int
  Entegre_GG_CategoryCode String                @db.NVarChar(10)
  Entegre_GG_VariantId    BigInt
  Entegre_GG_Categories   Entegre_GG_Categories @relation(fields: [Entegre_GG_CategoryCode], references: [Code], onUpdate: NoAction, map: "FK_Entegre_GG_CategoryEntegre_GG_CategoryVariant")
  Entegre_GG_Variants     Entegre_GG_Variants   @relation(fields: [Entegre_GG_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_GG_VariantEntegre_GG_CategoryVariant")

  @@index([Entegre_GG_CategoryCode], map: "IX_FK_Entegre_GG_CategoryEntegre_GG_CategoryVariant")
  @@index([Entegre_GG_VariantId], map: "IX_FK_Entegre_GG_VariantEntegre_GG_CategoryVariant")
}

model Entegre_GG_Cities {
  TrCode   Int    @id(map: "PK_Entegre_GG_Cities")
  CityName String @db.NVarChar(100)
}

model Entegre_GG_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_GG_CustomerDefaultSettings") @default(autoincrement())
  PageTemplateId                   Int?                               @db.TinyInt
  ProductFormatType                String?                            @db.NVarChar(1)
  ListingDays                      Int?
  ShippingWhereType                String?                            @db.NVarChar(10)
  ShippingPaymentType              String?                            @db.NVarChar(1)
  CargoCompanies                   String?                            @db.NVarChar(50)
  CargoDescription                 String?                            @db.NVarChar(500)
  AffiliateOption                  Boolean
  BoldOption                       Boolean
  CatalogOption                    Boolean
  VitrineOption                    Boolean
  ShippingCity                     Int?
  ShippingPrice                    Decimal?                           @db.Decimal(5, 2)
  ShippingDays                     String?                            @db.NVarChar(10)
  ShippingSameDayTime              DateTime?                          @db.Time
  AutoMergeOrders                  Boolean                            @default(false, map: "DF__Entegre_G__AutoM__3C89F72A")
  PayInBasket                      Boolean?
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_GG_Messages {
  Id                     BigInt                @id(map: "PK_Entegre_GG_Messages") @default(autoincrement())
  MessageType            Int                   @db.TinyInt
  Title                  String                @db.NVarChar(300)
  MessageContent         String                @db.NVarChar(Max)
  MessageDate            DateTime              @db.DateTime
  FromUser               String                @db.NVarChar(50)
  ToUser                 String                @db.NVarChar(50)
  IsRead                 Boolean
  CustomerId             BigInt
  MessageId              Int
  CustomerECommerceKeyId BigInt
  OrderNumber            String?               @db.NVarChar(50)
  EntegreProductId       String?               @db.NVarChar(50)
  ConversationId         String                @db.NVarChar(40)
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyEntegre_GG_Message")
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerEntegre_GG_Message")

  @@index([CustomerId, CustomerECommerceKeyId, ConversationId], map: "IX_Entegre_GG_Messages_CustomerId_CustomerECommerceKeyId_ConversationId")
  @@index([MessageId], map: "IX_Entegre_GG_Messages_MessageId")
  @@index([MessageType, CustomerId, IsRead], map: "IX_Entegre_GG_Messages_MessageType_CustomerId_IsRead")
}

model Entegre_GG_Specs {
  Id                        Int                         @id(map: "PK_Entegre_GG_Specs")
  Name                      String                      @db.NVarChar(200)
  SpecType                  String                      @db.NVarChar(50)
  ChildSpecId               Int?
  Entegre_GG_CategorySpecs  Entegre_GG_CategorySpecs[]
  Entegre_GG_SpecSpecValues Entegre_GG_SpecSpecValues[]
}

model Entegre_GG_SpecSpecValues {
  Id                     Int                   @id(map: "PK_Entegre_GG_SpecSpecValues") @default(autoincrement())
  Entegre_GG_SpecId      Int
  Entegre_GG_SpecValueId Int
  Entegre_GG_Specs       Entegre_GG_Specs      @relation(fields: [Entegre_GG_SpecId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_GG_SpecEntegre_GG_SpecSpecValue")
  Entegre_GG_SpecValues  Entegre_GG_SpecValues @relation(fields: [Entegre_GG_SpecValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_GG_SpecValueEntegre_GG_SpecSpecValue")

  @@index([Entegre_GG_SpecId, Entegre_GG_SpecValueId], map: "IX_Entegre_GG_SpecSpecValues_Entegre_GG_SpecId_Entegre_GG_SpecValueId")
  @@index([Entegre_GG_SpecId], map: "IX_Entegre_GG_SpecSpecValues_SpecId_SpecValueId")
}

model Entegre_GG_SpecValues {
  Id                        Int                         @id(map: "PK_Entegre_GG_SpecValues")
  SpecValue                 String                      @db.NVarChar(300)
  ParentSpecValueId         Int?
  Entegre_GG_SpecSpecValues Entegre_GG_SpecSpecValues[]
}

model Entegre_GG_Variants {
  Id                              BigInt                            @id(map: "PK_Entegre_GG_Variants")
  Name                            String                            @db.NVarChar(200)
  VariantType                     String                            @db.NVarChar(50)
  Entegre_GG_CategoryVariants     Entegre_GG_CategoryVariants[]
  Entegre_GG_VariantVariantValues Entegre_GG_VariantVariantValues[]
}

model Entegre_GG_VariantValues {
  Id                              BigInt                            @id(map: "PK_Entegre_GG_VariantValues")
  VariantValue                    String                            @db.NVarChar(200)
  OrderNumber                     Int
  Entegre_GG_VariantVariantValues Entegre_GG_VariantVariantValues[]

  @@index([VariantValue], map: "IX_Entegre_GG_VariantValues_VariantValue")
}

model Entegre_GG_VariantVariantValues {
  Id                        BigInt                   @id(map: "PK_Entegre_GG_VariantVariantValues") @default(autoincrement())
  Entegre_GG_VariantId      BigInt
  Entegre_GG_VariantValueId BigInt
  Entegre_GG_Variants       Entegre_GG_Variants      @relation(fields: [Entegre_GG_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_GG_VariantEntegre_GG_VariantVariantValue")
  Entegre_GG_VariantValues  Entegre_GG_VariantValues @relation(fields: [Entegre_GG_VariantValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_GG_VariantValueEntegre_GG_VariantVariantValue")

  @@index([Entegre_GG_VariantId], map: "IX_Entegre_GG_VariantVariantValues_VariantId_VariantValueId")
}

model Entegre_Google_Categories {
  Id                              BigInt                      @id(map: "PK_Entegre_Google_Categories")
  Name                            String                      @db.NVarChar(100)
  Deepest                         Boolean
  BreadCrumb                      String?                     @db.NVarChar(600)
  ParentId                        BigInt?
  Entegre_Google_Categories       Entegre_Google_Categories?  @relation("Entegre_Google_CategoriesToEntegre_Google_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Google_CategoryEntegre_Google_Category")
  other_Entegre_Google_Categories Entegre_Google_Categories[] @relation("Entegre_Google_CategoriesToEntegre_Google_Categories")

  @@index([ParentId], map: "IX_FK_Entegre_Google_CategoryEntegre_Google_Category")
}

model Entegre_HB_AccessTokens {
  Id                    BigInt    @id(map: "PK_Entegre_HB_AccessTokens") @default(autoincrement())
  AccessTokenExpiryDate DateTime? @db.DateTime
  AccessToken           String?   @db.NVarChar(500)
}

model Entegre_HB_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_HB_AttributeAttributeValues") @default(autoincrement())
  Entegre_HB_AttributeId      String                     @db.NVarChar(100)
  Entegre_HB_AttributeValueId String                     @db.NVarChar(100)
  Entegre_HB_Attributes       Entegre_HB_Attributes      @relation(fields: [Entegre_HB_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_AttributeEntegre_HB_AttributeAttributeValue")
  Entegre_HB_AttributeValues  Entegre_HB_AttributeValues @relation(fields: [Entegre_HB_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_AttributeValueEntegre_HB_AttributeAttributeValue")

  @@index([Entegre_HB_AttributeId], map: "IX_FK_Entegre_HB_AttributeEntegre_HB_AttributeAttributeValue")
}

model Entegre_HB_Attributes {
  Id                                  String                                @id(map: "PK_Entegre_HB_Attributes") @db.NVarChar(100)
  Name                                String                                @db.NVarChar(100)
  Entegre_HB_AttributeAttributeValues Entegre_HB_AttributeAttributeValues[]
  Entegre_HB_CategoryAttributes       Entegre_HB_CategoryAttributes[]
}

model Entegre_HB_AttributeValues {
  Id                                  String                                @id(map: "PK_Entegre_HB_AttributeValues") @db.NVarChar(100)
  Name                                String                                @db.NVarChar(300)
  Entegre_HB_AttributeAttributeValues Entegre_HB_AttributeAttributeValues[]
}

model Entegre_HB_Categories {
  Id                            BigInt                          @id(map: "PK_Entegre_HB_Categories")
  Name                          String                          @db.NVarChar(150)
  Deepest                       Boolean
  BreadCrumb                    String                          @db.NVarChar(800)
  IsActive                      Boolean
  ParentId                      BigInt?
  Entegre_HB_CategoryAttributes Entegre_HB_CategoryAttributes[]
  Entegre_HB_CategoryVariants   Entegre_HB_CategoryVariants[]

  @@index([ParentId], map: "IX_FK_Entegre_HB_CategoryEntegre_HB_Category")
}

model Entegre_HB_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_HB_CategoryAttributes") @default(autoincrement())
  AttributeType          String                @db.NVarChar(50)
  Required               Boolean
  MultiValue             Boolean
  Entegre_HB_CategoryId  BigInt
  Entegre_HB_AttributeId String                @db.NVarChar(100)
  Entegre_HB_Attributes  Entegre_HB_Attributes @relation(fields: [Entegre_HB_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_AttributeEntegre_HB_CategoryAttribute")
  Entegre_HB_Categories  Entegre_HB_Categories @relation(fields: [Entegre_HB_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_CategoryEntegre_HB_CategoryAttribute")

  @@index([Entegre_HB_CategoryId], map: "IX_Entegre_HB_CategoryAttributes_CategoryId_AttributeId")
}

model Entegre_HB_CategoryVariants {
  Id                    BigInt                @id(map: "PK_Entegre_HB_CategoryVariants") @default(autoincrement())
  AttributeType         String                @db.NVarChar(50)
  Required              Boolean
  MultiValue            Boolean
  Entegre_HB_VariantId  String                @db.NVarChar(100)
  Entegre_HB_CategoryId BigInt
  Entegre_HB_Categories Entegre_HB_Categories @relation(fields: [Entegre_HB_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_CategoryEntegre_HB_CategoryVariant")
  Entegre_HB_Variants   Entegre_HB_Variants   @relation(fields: [Entegre_HB_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_VariantEntegre_HB_CategoryVariant")

  @@index([Entegre_HB_CategoryId], map: "IX_Entegre_HB_CategoryVariants_CategoryId_VariantId")
}

model Entegre_HB_Question_Conversations {
  Id                    BigInt               @id(map: "PK_Entegre_HB_Question_Conversations") @default(autoincrement())
  MessageDate           DateTime             @db.DateTime
  Message               String               @db.NVarChar(2000)
  MessageType           String               @db.NVarChar(1)
  Entegre_HB_QuestionId BigInt
  EntegreMessageId      String               @db.NVarChar(50)
  Entegre_HB_Questions  Entegre_HB_Questions @relation(fields: [Entegre_HB_QuestionId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_Question_ConversationEntegre_HB_Question")

  @@index([Entegre_HB_QuestionId], map: "IX_FK_Entegre_HB_Question_ConversationEntegre_HB_Question")
}

model Entegre_HB_Questions {
  Id                                BigInt                              @id(map: "PK_Entegre_HB_Questions") @default(autoincrement())
  QuestionDate                      DateTime                            @db.DateTime
  Status                            Int                                 @db.TinyInt
  EntegreProductName                String                              @db.NVarChar(150)
  ProductHepsiBuradaSku             String                              @db.NVarChar(50)
  QuestionCustomerId                String                              @db.NVarChar(50)
  ProductImageUrl                   String                              @db.NVarChar(200)
  CustomerId                        BigInt
  CustomerECommerceKeyId            BigInt
  IssueNumber                       BigInt
  Subject                           String                              @db.NVarChar(100)
  OrderNumber                       String?                             @db.NVarChar(50)
  Entegre_HB_Question_Conversations Entegre_HB_Question_Conversations[]
  Customers                         Customers                           @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_QuestionCustomer")
  CustomerECommerceKeys             CustomerECommerceKeys               @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_QuestionCustomerECommerceKey")

  @@index([CustomerId, CustomerECommerceKeyId, IssueNumber], map: "IX_Entegre_HB_Questions_CustomerId_CustomerECommerceKeyId_IssueNumber")
  @@index([Status, CustomerId], map: "IX_Entegre_HB_Questions_Status_CustomerId")
  @@index([CustomerId], map: "IX_FK_Entegre_HB_QuestionCustomer")
  @@index([CustomerECommerceKeyId], map: "IX_FK_Entegre_HB_QuestionCustomerECommerceKey")
}

model Entegre_HB_Variants {
  Id                              String                            @id(map: "PK_Entegre_HB_Variants") @db.NVarChar(100)
  Name                            String                            @db.NVarChar(100)
  Entegre_HB_CategoryVariants     Entegre_HB_CategoryVariants[]
  Entegre_HB_VariantVariantValues Entegre_HB_VariantVariantValues[]
}

model Entegre_HB_VariantValues {
  Id                              String                            @id(map: "PK_Entegre_HB_VariantValues") @db.NVarChar(100)
  Name                            String                            @db.NVarChar(300)
  Entegre_HB_VariantVariantValues Entegre_HB_VariantVariantValues[]
}

model Entegre_HB_VariantVariantValues {
  Id                        BigInt                   @id(map: "PK_Entegre_HB_VariantVariantValues") @default(autoincrement())
  Entegre_HB_VariantId      String                   @db.NVarChar(100)
  Entegre_HB_VariantValueId String                   @db.NVarChar(100)
  Entegre_HB_Variants       Entegre_HB_Variants      @relation(fields: [Entegre_HB_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_VariantEntegre_HB_VariantVariantValue")
  Entegre_HB_VariantValues  Entegre_HB_VariantValues @relation(fields: [Entegre_HB_VariantValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_HB_VariantValueEntegre_HB_VariantVariantValue")

  @@index([Entegre_HB_VariantId], map: "IX_FK_Entegre_HB_VariantEntegre_HB_VariantVariantValue")
  @@index([Entegre_HB_VariantValueId], map: "IX_FK_Entegre_HB_VariantValueEntegre_HB_VariantVariantValue")
}

model Entegre_HG_Attributes {
  Id                            BigInt                          @id(map: "PK_Entegre_HG_Attributes")
  Name                          String                          @db.NVarChar(Max)
  Entegre_HG_CategoryAttributes Entegre_HG_CategoryAttributes[]
}

model Entegre_HG_Categories {
  Id                            BigInt                          @id(map: "PK_Entegre_HG_Categories")
  Name                          String                          @db.NVarChar(150)
  Deepest                       Boolean
  BreadCrumb                    String                          @db.NVarChar(850)
  ParentId                      BigInt?
  Entegre_HG_Categories         Entegre_HG_Categories?          @relation("Entegre_HG_CategoriesToEntegre_HG_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_HG_CategoryEntegre_HG_Category")
  other_Entegre_HG_Categories   Entegre_HG_Categories[]         @relation("Entegre_HG_CategoriesToEntegre_HG_Categories")
  Entegre_HG_CategoryAttributes Entegre_HG_CategoryAttributes[]

  @@index([ParentId], map: "IX_FK_Entegre_HG_CategoryEntegre_HG_Category")
}

model Entegre_HG_CategoryAttributes {
  Id                     BigInt                 @id(map: "PK_Entegre_HG_CategoryAttributes") @default(autoincrement())
  Required               Boolean
  IsVariant              Boolean
  Entegre_HG_CategoryId  BigInt?
  Entegre_HG_AttributeId BigInt?
  Entegre_HG_Attributes  Entegre_HG_Attributes? @relation(fields: [Entegre_HG_AttributeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_HG_AttributeEntegre_HG_CategoryAttribute")
  Entegre_HG_Categories  Entegre_HG_Categories? @relation(fields: [Entegre_HG_CategoryId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_HG_CategoryEntegre_HG_CategoryAttribute")

  @@index([Entegre_HG_AttributeId], map: "IX_FK_Entegre_HG_AttributeEntegre_HG_CategoryAttribute")
  @@index([Entegre_HG_CategoryId], map: "IX_FK_Entegre_HG_CategoryEntegre_HG_CategoryAttribute")
}

model Entegre_IC_AccessTokens {
  ServerCode            String    @id(map: "PK_Entegre_IC_AccessTokens") @db.NVarChar(20)
  ApiKey                String?   @db.NVarChar(200)
  ApiSecret             String?   @db.NVarChar(200)
  AccessTokenExpiryDate DateTime? @db.DateTime
  AccessToken           String?   @db.NVarChar(500)
}

model Entegre_IC_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_IC_AttributeAttributeValues") @default(autoincrement())
  Entegre_IC_AttributeId      String                     @db.NVarChar(50)
  Entegre_IC_AttributeValueId String                     @db.NVarChar(50)
  Entegre_IC_Attributes       Entegre_IC_Attributes      @relation(fields: [Entegre_IC_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_AttributeEntegre_IC_AttributeAttributeValue")
  Entegre_IC_AttributeValues  Entegre_IC_AttributeValues @relation(fields: [Entegre_IC_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_AttributeValueEntegre_IC_AttributeAttributeValue")

  @@index([Entegre_IC_AttributeId], map: "IX_Entegre_IC_AttributeAttributeValues_Entegre_IC_AttributeId")
  @@index([Entegre_IC_AttributeId, Entegre_IC_AttributeValueId], map: "IX_Entegre_IC_AttributeAttributeValues_Entegre_IC_AttributeId_Entegre_IC_AttributeValueId")
}

model Entegre_IC_Attributes {
  Id                                  String                                @id(map: "PK_Entegre_IC_Attributes") @db.NVarChar(50)
  Name                                String                                @db.NVarChar(150)
  Entegre_IC_AttributeAttributeValues Entegre_IC_AttributeAttributeValues[]
  Entegre_IC_CategoryAttributes       Entegre_IC_CategoryAttributes[]
}

model Entegre_IC_AttributeValues {
  Id                                  String                                @id(map: "PK_Entegre_IC_AttributeValues") @db.NVarChar(50)
  Name                                String                                @db.NVarChar(150)
  Entegre_IC_AttributeAttributeValues Entegre_IC_AttributeAttributeValues[]
}

model Entegre_IC_BrandBrandModels {
  Id                      BigInt                 @id(map: "PK_Entegre_IC_BrandBrandModels") @default(autoincrement())
  Entegre_IC_BrandId      String                 @db.NVarChar(50)
  Entegre_IC_BrandModelId String                 @db.NVarChar(50)
  Entegre_IC_Brands       Entegre_IC_Brands      @relation(fields: [Entegre_IC_BrandId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_BrandEntegre_IC_BrandBrandModels")
  Entegre_IC_BrandModels  Entegre_IC_BrandModels @relation(fields: [Entegre_IC_BrandModelId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_BrandModelEntegre_IC_BrandBrandModels")

  @@index([Entegre_IC_BrandId], map: "IX_FK_Entegre_IC_BrandEntegre_IC_BrandBrandModels")
  @@index([Entegre_IC_BrandModelId], map: "IX_FK_Entegre_IC_BrandModelEntegre_IC_BrandBrandModels")
}

model Entegre_IC_BrandModels {
  Id                          String                        @id(map: "PK_Entegre_IC_BrandModels") @db.NVarChar(50)
  Name                        String                        @db.NVarChar(150)
  Entegre_IC_BrandBrandModels Entegre_IC_BrandBrandModels[]
}

model Entegre_IC_Brands {
  Id                          String                        @id(map: "PK_Entegre_IC_Brands") @db.NVarChar(50)
  Name                        String                        @db.NVarChar(150)
  Entegre_IC_BrandBrandModels Entegre_IC_BrandBrandModels[]
  Entegre_IC_CategoryBrands   Entegre_IC_CategoryBrands[]
}

model Entegre_IC_Categories {
  Id                            String                          @id(map: "PK_Entegre_IC_Categories") @db.NVarChar(50)
  Name                          String                          @db.NVarChar(150)
  Deepest                       Boolean
  BreadCrumb                    String                          @db.NVarChar(500)
  ParentId                      String?                         @db.NVarChar(50)
  Entegre_IC_CategoryAttributes Entegre_IC_CategoryAttributes[]
  Entegre_IC_CategoryBrands     Entegre_IC_CategoryBrands[]
}

model Entegre_IC_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_IC_CategoryAttributes") @default(autoincrement())
  Entegre_IC_CategoryId  String                @db.NVarChar(50)
  Entegre_IC_AttributeId String                @db.NVarChar(50)
  Entegre_IC_Attributes  Entegre_IC_Attributes @relation(fields: [Entegre_IC_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_AttributeEntegre_IC_CategoryAttribute")
  Entegre_IC_Categories  Entegre_IC_Categories @relation(fields: [Entegre_IC_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_CategoryEntegre_IC_CategoryAttribute")

  @@index([Entegre_IC_AttributeId], map: "IX_FK_Entegre_IC_AttributeEntegre_IC_CategoryAttribute")
  @@index([Entegre_IC_CategoryId], map: "IX_FK_Entegre_IC_CategoryEntegre_IC_CategoryAttribute")
}

model Entegre_IC_CategoryBrands {
  Id                    BigInt                @id(map: "PK_Entegre_IC_CategoryBrands") @default(autoincrement())
  Entegre_IC_BrandId    String                @db.NVarChar(50)
  Entegre_IC_CategoryId String                @db.NVarChar(50)
  Entegre_IC_Brands     Entegre_IC_Brands     @relation(fields: [Entegre_IC_BrandId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_BrandEntegre_IC_CategoryBrand")
  Entegre_IC_Categories Entegre_IC_Categories @relation(fields: [Entegre_IC_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_IC_CategoryEntegre_IC_CategoryBrand")

  @@index([Entegre_IC_BrandId], map: "IX_FK_Entegre_IC_BrandEntegre_IC_CategoryBrand")
  @@index([Entegre_IC_CategoryId], map: "IX_FK_Entegre_IC_CategoryEntegre_IC_CategoryBrand")
}

model Entegre_IC_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_IC_CustomerDefaultSettings") @default(autoincrement())
  ShippingTemplateId               String?                            @db.NVarChar(50)
  WarrantyType                     Int?                               @db.TinyInt
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_Idefix_AttributeAttributeValues {
  Id                              BigInt                         @id(map: "PK_Entegre_Idefix_AttributeAttributeValues") @default(autoincrement())
  Entegre_Idefix_CategoryId       BigInt
  Entegre_Idefix_AttributeId      BigInt
  Entegre_Idefix_AttributeValueId BigInt
  Entegre_Idefix_Attributes       Entegre_Idefix_Attributes      @relation(fields: [Entegre_Idefix_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Idefix_AttributeEntegre_Idefix_AttributeAttributeValue")
  Entegre_Idefix_AttributeValues  Entegre_Idefix_AttributeValues @relation(fields: [Entegre_Idefix_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Idefix_AttributeValueEntegre_Idefix_AttributeAttributeValue")
  Entegre_Idefix_Categories       Entegre_Idefix_Categories      @relation(fields: [Entegre_Idefix_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Idefix_CategoryEntegre_Idefix_AttributeAttributeValue")

  @@index([Entegre_Idefix_AttributeId], map: "IX_FK_Entegre_Idefix_AttributeEntegre_Idefix_AttributeAttributeValue")
  @@index([Entegre_Idefix_AttributeValueId], map: "IX_FK_Entegre_Idefix_AttributeValueEntegre_Idefix_AttributeAttributeValue")
  @@index([Entegre_Idefix_CategoryId], map: "IX_FK_Entegre_Idefix_CategoryEntegre_Idefix_AttributeAttributeValue")
}

model Entegre_Idefix_Attributes {
  Id                                      BigInt                                    @id(map: "PK_Entegre_Idefix_Attributes")
  Name                                    String                                    @db.NVarChar(100)
  Entegre_Idefix_AttributeAttributeValues Entegre_Idefix_AttributeAttributeValues[]
  Entegre_Idefix_CategoryAttributes       Entegre_Idefix_CategoryAttributes[]
}

model Entegre_Idefix_AttributeValues {
  Id                                      BigInt                                    @id(map: "PK_Entegre_Idefix_AttributeValues")
  AttributeValue                          String                                    @db.NVarChar(120)
  Entegre_Idefix_AttributeAttributeValues Entegre_Idefix_AttributeAttributeValues[]
}

model Entegre_Idefix_Brands {
  Id   BigInt @id(map: "PK_Entegre_Idefix_Brands")
  Name String @db.NVarChar(150)
}

model Entegre_Idefix_Categories {
  Id                                      BigInt                                    @id(map: "PK_Entegre_Idefix_Categories")
  Name                                    String                                    @db.NVarChar(100)
  Deepest                                 Boolean
  BreadCrumb                              String?                                   @db.NVarChar(500)
  ParentId                                BigInt?
  Entegre_Idefix_AttributeAttributeValues Entegre_Idefix_AttributeAttributeValues[]
  Entegre_Idefix_Categories               Entegre_Idefix_Categories?                @relation("Entegre_Idefix_CategoriesToEntegre_Idefix_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Idefix_CategoryEntegre_Idefix_Category")
  other_Entegre_Idefix_Categories         Entegre_Idefix_Categories[]               @relation("Entegre_Idefix_CategoriesToEntegre_Idefix_Categories")
  Entegre_Idefix_CategoryAttributes       Entegre_Idefix_CategoryAttributes[]

  @@index([ParentId], map: "IX_FK_Entegre_Idefix_CategoryEntegre_Idefix_Category")
}

model Entegre_Idefix_CategoryAttributes {
  Id                         BigInt                    @id(map: "PK_Entegre_Idefix_CategoryAttributes") @default(autoincrement())
  Required                   Boolean
  AllowCustom                Boolean
  Varianter                  Boolean
  Entegre_Idefix_CategoryId  BigInt
  Entegre_Idefix_AttributeId BigInt
  Entegre_Idefix_Attributes  Entegre_Idefix_Attributes @relation(fields: [Entegre_Idefix_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Idefix_AttributeEntegre_Idefix_CategoryAttribute")
  Entegre_Idefix_Categories  Entegre_Idefix_Categories @relation(fields: [Entegre_Idefix_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Idefix_CategoryEntegre_Idefix_CategoryAttribute")

  @@index([Entegre_Idefix_AttributeId], map: "IX_FK_Entegre_Idefix_AttributeEntegre_Idefix_CategoryAttribute")
  @@index([Entegre_Idefix_CategoryId], map: "IX_FK_Entegre_Idefix_CategoryEntegre_Idefix_CategoryAttribute")
}

model Entegre_Joom_Categories {
  Id         String  @id(map: "PK_Entegre_Joom_Categories") @db.NVarChar(50)
  Name       String  @db.NVarChar(100)
  Deepest    Boolean
  ParentId   String? @db.NVarChar(50)
  BreadCrumb String  @db.NVarChar(500)

  @@index([ParentId], map: "IX_Entegre_Joom_Categories_ParentId")
}

model Entegre_LB_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_LB_AttributeAttributeValues") @default(autoincrement())
  Entegre_LB_AttributeId      BigInt
  Entegre_LB_AttributeValueId BigInt
  Entegre_LB_Attributes       Entegre_LB_Attributes      @relation(fields: [Entegre_LB_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_LB_AttributeAttributeValueEntegre_LB_Attribute")
  Entegre_LB_AttributeValues  Entegre_LB_AttributeValues @relation(fields: [Entegre_LB_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_LB_AttributeAttributeValueEntegre_LB_AttributeValue")

  @@index([Entegre_LB_AttributeId], map: "IX_FK_Entegre_LB_AttributeAttributeValueEntegre_LB_Attribute")
}

model Entegre_LB_Attributes {
  Id                                  BigInt                                @id(map: "PK_Entegre_LB_Attributes")
  Name                                String                                @db.NVarChar(100)
  Entegre_LB_AttributeAttributeValues Entegre_LB_AttributeAttributeValues[]
  Entegre_LB_CategoryAttributes       Entegre_LB_CategoryAttributes[]
}

model Entegre_LB_AttributeValues {
  Id                                  BigInt                                @id(map: "PK_Entegre_LB_AttributeValues")
  Name                                String                                @db.NVarChar(100)
  Entegre_LB_AttributeAttributeValues Entegre_LB_AttributeAttributeValues[]
}

model Entegre_LB_Categories {
  Id                            BigInt                          @id(map: "PK_Entegre_LB_Categories")
  Name                          String                          @db.NVarChar(100)
  Deepest                       Boolean
  BreadCrumb                    String                          @db.NVarChar(500)
  ParentId                      BigInt?
  Entegre_LB_CategoryAttributes Entegre_LB_CategoryAttributes[]
}

model Entegre_LB_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_LB_CategoryAttributes") @default(autoincrement())
  Entegre_LB_AttributeId BigInt
  Entegre_LB_CategoryId  BigInt
  Entegre_LB_Attributes  Entegre_LB_Attributes @relation(fields: [Entegre_LB_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_LB_CategoryAttributeEntegre_LB_Attribute")
  Entegre_LB_Categories  Entegre_LB_Categories @relation(fields: [Entegre_LB_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_LB_CategoryAttributeEntegre_LB_Category")

  @@index([Entegre_LB_CategoryId], map: "IX_Entegre_LB_CategoryAttributes_Entegre_LB_CategoryId")
  @@index([Entegre_LB_AttributeId], map: "IX_FK_Entegre_LB_CategoryAttributeEntegre_LB_Attribute")
}

model Entegre_MoNi_AttributeAttributeValues {
  Id                            BigInt                       @id(map: "PK_Entegre_MoNi_AttributeAttributeValues") @default(autoincrement())
  Entegre_MoNi_AttributeId      BigInt
  Entegre_MoNi_AttributeValueId BigInt
  Entegre_MoNi_CategoryId       BigInt
  Entegre_MoNi_Attributes       Entegre_MoNi_Attributes      @relation(fields: [Entegre_MoNi_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_AttributeEntegre_MoNi_AttributeAttributeValue")
  Entegre_MoNi_AttributeValues  Entegre_MoNi_AttributeValues @relation(fields: [Entegre_MoNi_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_AttributeValueEntegre_MoNi_AttributeAttributeValue")
  Entegre_MoNi_Categories       Entegre_MoNi_Categories      @relation(fields: [Entegre_MoNi_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_CategoryEntegre_MoNi_AttributeAttributeValue")

  @@index([Entegre_MoNi_AttributeId, Entegre_MoNi_CategoryId], map: "IX_Entegre_MoNi_AttributeAttributeValues_Entegre_MoNi_AttributeId_Entegre_MoNi_CategoryId")
  @@index([Entegre_MoNi_AttributeId], map: "IX_FK_Entegre_MoNi_AttributeEntegre_MoNi_AttributeAttributeValue")
  @@index([Entegre_MoNi_AttributeValueId], map: "IX_FK_Entegre_MoNi_AttributeValueEntegre_MoNi_AttributeAttributeValue")
  @@index([Entegre_MoNi_CategoryId], map: "IX_FK_Entegre_MoNi_CategoryEntegre_MoNi_AttributeAttributeValue")
}

model Entegre_MoNi_Attributes {
  Id                                    BigInt                                  @id(map: "PK_Entegre_MoNi_Attributes")
  Name                                  String                                  @db.NVarChar(100)
  Entegre_MoNi_AttributeAttributeValues Entegre_MoNi_AttributeAttributeValues[]
  Entegre_MoNi_CategoryAttributes       Entegre_MoNi_CategoryAttributes[]
}

model Entegre_MoNi_AttributeValues {
  Id                                    BigInt                                  @id(map: "PK_Entegre_MoNi_AttributeValues")
  Name                                  String                                  @db.NVarChar(300)
  Entegre_MoNi_AttributeAttributeValues Entegre_MoNi_AttributeAttributeValues[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model Entegre_MoNi_Brands {
  Id   BigInt
  Name String @db.NVarChar(150)

  @@ignore
}

model Entegre_MoNi_Categories {
  Id                                    BigInt                                  @id(map: "PK_Entegre_MoNi_Categories")
  Name                                  String                                  @db.NVarChar(100)
  Deepest                               Boolean
  BreadCrumb                            String                                  @db.NVarChar(500)
  ParentId                              BigInt?
  FabricRequired                        Boolean
  Entegre_MoNi_AttributeAttributeValues Entegre_MoNi_AttributeAttributeValues[]
  Entegre_MoNi_CategoryAttributes       Entegre_MoNi_CategoryAttributes[]
  Entegre_MoNi_CategoryVariants         Entegre_MoNi_CategoryVariants[]
  Entegre_MoNi_VariantVariantValues     Entegre_MoNi_VariantVariantValues[]
}

model Entegre_MoNi_CategoryAttributes {
  Id                       BigInt                  @id(map: "PK_Entegre_MoNi_CategoryAttributes") @default(autoincrement())
  Required                 Boolean
  Entegre_MoNi_AttributeId BigInt
  Entegre_MoNi_CategoryId  BigInt
  Entegre_MoNi_Attributes  Entegre_MoNi_Attributes @relation(fields: [Entegre_MoNi_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_AttributeEntegre_MoNi_CategoryAttribute")
  Entegre_MoNi_Categories  Entegre_MoNi_Categories @relation(fields: [Entegre_MoNi_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_CategoryEntegre_MoNi_CategoryAttribute")

  @@index([Entegre_MoNi_AttributeId], map: "IX_FK_Entegre_MoNi_AttributeEntegre_MoNi_CategoryAttribute")
  @@index([Entegre_MoNi_CategoryId], map: "IX_FK_Entegre_MoNi_CategoryEntegre_MoNi_CategoryAttribute")
}

model Entegre_MoNi_CategoryVariants {
  Id                      BigInt                  @id(map: "PK_Entegre_MoNi_CategoryVariants") @default(autoincrement())
  Required                Boolean
  Entegre_MoNi_VariantId  BigInt
  Entegre_MoNi_CategoryId BigInt
  Entegre_MoNi_Categories Entegre_MoNi_Categories @relation(fields: [Entegre_MoNi_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_CategoryEntegre_MoNi_CategoryVariant")
  Entegre_MoNi_Variants   Entegre_MoNi_Variants   @relation(fields: [Entegre_MoNi_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_VariantEntegre_MoNi_CategoryVariant")

  @@index([Entegre_MoNi_CategoryId], map: "IX_FK_Entegre_MoNi_CategoryEntegre_MoNi_CategoryVariant")
  @@index([Entegre_MoNi_VariantId], map: "IX_FK_Entegre_MoNi_VariantEntegre_MoNi_CategoryVariant")
}

model Entegre_MoNi_Variants {
  Id                                BigInt                              @id(map: "PK_Entegre_MoNi_Variants")
  Name                              String                              @db.NVarChar(100)
  Entegre_MoNi_CategoryVariants     Entegre_MoNi_CategoryVariants[]
  Entegre_MoNi_VariantVariantValues Entegre_MoNi_VariantVariantValues[]
}

model Entegre_MoNi_VariantValues {
  Id                                BigInt                              @id(map: "PK_Entegre_MoNi_VariantValues")
  Name                              String                              @db.NVarChar(300)
  Entegre_MoNi_VariantVariantValues Entegre_MoNi_VariantVariantValues[]
}

model Entegre_MoNi_VariantVariantValues {
  Id                          BigInt                     @id(map: "PK_Entegre_MoNi_VariantVariantValues") @default(autoincrement())
  Entegre_MoNi_VariantId      BigInt
  Entegre_MoNi_VariantValueId BigInt
  Entegre_MoNi_CategoryId     BigInt
  Entegre_MoNi_Categories     Entegre_MoNi_Categories    @relation(fields: [Entegre_MoNi_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_CategoryEntegre_MoNi_VariantVariantValue")
  Entegre_MoNi_Variants       Entegre_MoNi_Variants      @relation(fields: [Entegre_MoNi_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_VariantEntegre_MoNi_VariantVariantValue")
  Entegre_MoNi_VariantValues  Entegre_MoNi_VariantValues @relation(fields: [Entegre_MoNi_VariantValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_MoNi_VariantValueEntegre_MoNi_VariantVariantValue")

  @@index([Entegre_MoNi_VariantId, Entegre_MoNi_CategoryId], map: "IX_Entegre_MoNi_VariantVariantValues_Entegre_MoNi_VariantId_Entegre_MoNi_CategoryId")
  @@index([Entegre_MoNi_CategoryId], map: "IX_FK_Entegre_MoNi_CategoryEntegre_MoNi_VariantVariantValue")
  @@index([Entegre_MoNi_VariantId], map: "IX_FK_Entegre_MoNi_VariantEntegre_MoNi_VariantVariantValue")
  @@index([Entegre_MoNi_VariantValueId], map: "IX_FK_Entegre_MoNi_VariantValueEntegre_MoNi_VariantVariantValue")
}

model Entegre_N11_Attributes {
  Id                             BigInt                           @id(map: "PK_Entegre_N11_Attributes")
  Name                           String?                          @db.NVarChar(150)
  Multiselect                    Boolean
  Entegre_N11_AttributeValues    Entegre_N11_AttributeValues[]
  Entegre_N11_CategoryAttributes Entegre_N11_CategoryAttributes[]
}

model Entegre_N11_AttributeValues {
  Entegre_N11_AttributeId BigInt
  AttributeValue          String?                @db.NVarChar(250)
  Id                      BigInt                 @id(map: "PK_Entegre_N11_AttributeValues") @default(autoincrement())
  AttributeValueId        BigInt?
  Entegre_N11_Attributes  Entegre_N11_Attributes @relation(fields: [Entegre_N11_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_N11_AttributeValueEntegre_N11_Attribute")

  @@index([AttributeValue], map: "IX_Entegre_N11_AttributeValues_AttributeValue")
  @@index([Entegre_N11_AttributeId], map: "IX_Entegre_N11_AttributeValues_Entegre_N11_AttributeId")
}

model Entegre_N11_Categories {
  Id                             BigInt                           @id(map: "PK_Entegre_N11_Categories")
  Name                           String                           @db.NVarChar(100)
  Deepest                        Boolean
  ParentId                       BigInt?
  BreadCrumb                     String?                          @db.NVarChar(500)
  Entegre_N11_Categories         Entegre_N11_Categories?          @relation("Entegre_N11_CategoriesToEntegre_N11_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_N11CategoryN11Category")
  other_Entegre_N11_Categories   Entegre_N11_Categories[]         @relation("Entegre_N11_CategoriesToEntegre_N11_Categories")
  Entegre_N11_CategoryAttributes Entegre_N11_CategoryAttributes[]

  @@index([Name], map: "IX_Entegre_N11_Categories_Name")
  @@index([ParentId], map: "IX_Entegre_N11_Categories_ParentId")
}

model Entegre_N11_CategoryAttributes {
  Id                      BigInt                 @id(map: "PK_Entegre_N11_CategoryAttributes") @default(autoincrement())
  Required                Boolean
  Entegre_N11_CategoryId  BigInt
  Entegre_N11_AttributeId BigInt
  Varianter               Boolean
  Entegre_N11_Attributes  Entegre_N11_Attributes @relation(fields: [Entegre_N11_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_N11_AttributeEntegre_N11_CategoryAttribute")
  Entegre_N11_Categories  Entegre_N11_Categories @relation(fields: [Entegre_N11_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_N11_CategoryEntegre_N11_CategoryAttribute")

  @@index([Entegre_N11_AttributeId], map: "IX_FK_Entegre_N11_AttributeEntegre_N11_CategoryAttribute")
  @@index([Entegre_N11_CategoryId], map: "IX_FK_Entegre_N11_CategoryEntegre_N11_CategoryAttribute")
}

model Entegre_N11_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_N11_CustomerDefaultSettings") @default(autoincrement())
  ShipmentTemplateName             String?                            @db.NVarChar(150)
  ProductPreparingDays             Int?                               @db.TinyInt
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_N11_Questions {
  Id                         BigInt                     @id(map: "PK_Entegre_N11_Questions") @default(autoincrement())
  BuyerEMail                 String                     @db.NVarChar(200)
  BuyerFullName              String?                    @db.NVarChar(300)
  EntegreProductName         String                     @db.NVarChar(150)
  EntegreProductId           String                     @db.NVarChar(50)
  QuestionId                 BigInt
  QuestionDate               DateTime                   @db.DateTime
  QuestionSubject            String                     @db.NVarChar(150)
  Question                   String
  QuestionExposed            Boolean
  AnswerDate                 DateTime?                  @db.DateTime
  Answer                     String?                    @db.NVarChar(4000)
  Entegre_ProductECommerceId BigInt?
  CustomerId                 BigInt
  CustomerECommerceKeyId     BigInt
  CustomerECommerceKeys      CustomerECommerceKeys      @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyEntegre_N11_Question")
  Customers                  Customers                  @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerEntegre_N11_Question")
  Entegre_ProductECommerces  Entegre_ProductECommerces? @relation(fields: [Entegre_ProductECommerceId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_N11_Question")

  @@index([AnswerDate, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_N11_Questions_AnswerDate_CustomerId_CustomerECommerceKeyId")
  @@index([CustomerECommerceKeyId], map: "IX_Entegre_N11_Questions_CustomerECommerceKeyId")
  @@index([CustomerId], map: "IX_Entegre_N11_Questions_CustomerId")
  @@index([EntegreProductId, CustomerId], map: "IX_Entegre_N11_Questions_EntegreProductId_CustomerId")
  @@index([QuestionId, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_N11_Questions_QuestionId_CustomerId_CustomerECommerceKeyId")
  @@index([Entegre_ProductECommerceId], map: "IX_FK_Entegre_ProductECommerceEntegre_N11_Question")
}

model Entegre_N11Pro_Attributes {
  Id                                BigInt                              @id(map: "PK_Entegre_N11Pro_Attributes")
  Name                              String                              @db.NVarChar(100)
  Entegre_N11Pro_CategoryAttributes Entegre_N11Pro_CategoryAttributes[]
}

model Entegre_N11Pro_Categories {
  Id                                BigInt                              @id(map: "PK_Entegre_N11Pro_Categories")
  Name                              String                              @db.NVarChar(100)
  ParentId                          BigInt?
  Deepest                           Boolean
  BreadCrumb                        String                              @db.NVarChar(500)
  Entegre_N11Pro_CategoryAttributes Entegre_N11Pro_CategoryAttributes[]
}

model Entegre_N11Pro_CategoryAttributes {
  Id                         Int                        @id(map: "PK_Entegre_N11Pro_CategoryAttributes") @default(autoincrement())
  Required                   Boolean
  Entegre_N11Pro_AttributeId BigInt?
  Entegre_N11Pro_CategoryId  BigInt?
  Entegre_N11Pro_Attributes  Entegre_N11Pro_Attributes? @relation(fields: [Entegre_N11Pro_AttributeId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_N11Pro_AttributeEntegre_N11Pro_CategoryAttribute")
  Entegre_N11Pro_Categories  Entegre_N11Pro_Categories? @relation(fields: [Entegre_N11Pro_CategoryId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_N11Pro_CategoryEntegre_N11Pro_CategoryAttribute")

  @@index([Entegre_N11Pro_AttributeId], map: "IX_FK_Entegre_N11Pro_AttributeEntegre_N11Pro_CategoryAttribute")
  @@index([Entegre_N11Pro_CategoryId], map: "IX_FK_Entegre_N11Pro_CategoryEntegre_N11Pro_CategoryAttribute")
}

model Entegre_N11Pro_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_N11Pro_CustomerDefaultSettings") @default(autoincrement())
  ShipmentTemplateId               String?                            @db.NVarChar(50)
  ProductPreparingDays             Int?
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_OnBuy_AttributeAttributeValues {
  Id                             BigInt                        @id(map: "PK_Entegre_OnBuy_AttributeAttributeValues") @default(autoincrement())
  Entegre_OnBuy_CategoryId       BigInt
  Entegre_OnBuy_AttributeId      BigInt
  Entegre_OnBuy_AttributeValueId BigInt
  Entegre_OnBuy_Attributes       Entegre_OnBuy_Attributes      @relation(fields: [Entegre_OnBuy_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_AttributeEntegre_OnBuy_AttributeAttributeValue")
  Entegre_OnBuy_AttributeValues  Entegre_OnBuy_AttributeValues @relation(fields: [Entegre_OnBuy_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_AttributeValueEntegre_OnBuy_AttributeAttributeValue")
  Entegre_OnBuy_Categories       Entegre_OnBuy_Categories      @relation(fields: [Entegre_OnBuy_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_CategoryEntegre_OnBuy_AttributeAttributeValue")

  @@index([Entegre_OnBuy_AttributeId], map: "IX_FK_Entegre_OnBuy_AttributeEntegre_OnBuy_AttributeAttributeValue")
  @@index([Entegre_OnBuy_AttributeValueId], map: "IX_FK_Entegre_OnBuy_AttributeValueEntegre_OnBuy_AttributeAttributeValue")
  @@index([Entegre_OnBuy_CategoryId], map: "IX_FK_Entegre_OnBuy_CategoryEntegre_OnBuy_AttributeAttributeValue")
}

model Entegre_OnBuy_Attributes {
  Id                                     BigInt                                   @id(map: "PK_Entegre_OnBuy_Attributes")
  Name                                   String                                   @db.NVarChar(100)
  Entegre_OnBuy_AttributeAttributeValues Entegre_OnBuy_AttributeAttributeValues[]
  Entegre_OnBuy_CategoryAttributes       Entegre_OnBuy_CategoryAttributes[]
}

model Entegre_OnBuy_AttributeValues {
  Id                                     BigInt                                   @id(map: "PK_Entegre_OnBuy_AttributeValues")
  AttributeValue                         String                                   @db.NVarChar(120)
  Entegre_OnBuy_AttributeAttributeValues Entegre_OnBuy_AttributeAttributeValues[]
}

model Entegre_OnBuy_Brands {
  Id   BigInt @id(map: "PK_Entegre_OnBuy_Brands")
  Name String @db.NVarChar(100)
}

model Entegre_OnBuy_Categories {
  Id                                     BigInt                                   @id(map: "PK_Entegre_OnBuy_Categories")
  Name                                   String                                   @db.NVarChar(100)
  Deepest                                Boolean
  BreadCrumb                             String?                                  @db.NVarChar(500)
  ParentId                               BigInt?
  Entegre_OnBuy_AttributeAttributeValues Entegre_OnBuy_AttributeAttributeValues[]
  Entegre_OnBuy_Categories               Entegre_OnBuy_Categories?                @relation("Entegre_OnBuy_CategoriesToEntegre_OnBuy_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_OnBuy_CategoryEntegre_OnBuy_Category")
  other_Entegre_OnBuy_Categories         Entegre_OnBuy_Categories[]               @relation("Entegre_OnBuy_CategoriesToEntegre_OnBuy_Categories")
  Entegre_OnBuy_CategoryAttributes       Entegre_OnBuy_CategoryAttributes[]
  Entegre_OnBuy_CategoryVariants         Entegre_OnBuy_CategoryVariants[]
  Entegre_OnBuy_VariantVariantValues     Entegre_OnBuy_VariantVariantValues[]

  @@index([ParentId], map: "IX_FK_Entegre_OnBuy_CategoryEntegre_OnBuy_Category")
}

model Entegre_OnBuy_CategoryAttributes {
  Id                        BigInt                   @id(map: "PK_Entegre_OnBuy_CategoryAttributes") @default(autoincrement())
  Required                  Boolean
  Entegre_OnBuy_CategoryId  BigInt
  Entegre_OnBuy_AttributeId BigInt
  Entegre_OnBuy_Attributes  Entegre_OnBuy_Attributes @relation(fields: [Entegre_OnBuy_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_AttributeEntegre_OnBuy_CategoryAttribute")
  Entegre_OnBuy_Categories  Entegre_OnBuy_Categories @relation(fields: [Entegre_OnBuy_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_CategoryEntegre_OnBuy_CategoryAttribute")

  @@index([Entegre_OnBuy_AttributeId], map: "IX_FK_Entegre_OnBuy_AttributeEntegre_OnBuy_CategoryAttribute")
  @@index([Entegre_OnBuy_CategoryId], map: "IX_FK_Entegre_OnBuy_CategoryEntegre_OnBuy_CategoryAttribute")
}

model Entegre_OnBuy_CategoryVariants {
  Id                       BigInt                   @id(map: "PK_Entegre_OnBuy_CategoryVariants") @default(autoincrement())
  Required                 Boolean
  Entegre_OnBuy_VariantId  BigInt
  Entegre_OnBuy_CategoryId BigInt
  Entegre_OnBuy_Categories Entegre_OnBuy_Categories @relation(fields: [Entegre_OnBuy_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_CategoryEntegre_OnBuy_CategoryVariant")
  Entegre_OnBuy_Variants   Entegre_OnBuy_Variants   @relation(fields: [Entegre_OnBuy_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_VariantEntegre_OnBuy_CategoryVariant")

  @@index([Entegre_OnBuy_CategoryId], map: "IX_FK_Entegre_OnBuy_CategoryEntegre_OnBuy_CategoryVariant")
  @@index([Entegre_OnBuy_VariantId], map: "IX_FK_Entegre_OnBuy_VariantEntegre_OnBuy_CategoryVariant")
}

model Entegre_OnBuy_Variants {
  Id                                 BigInt                               @id(map: "PK_Entegre_OnBuy_Variants")
  Name                               String                               @db.NVarChar(100)
  Entegre_OnBuy_CategoryVariants     Entegre_OnBuy_CategoryVariants[]
  Entegre_OnBuy_VariantVariantValues Entegre_OnBuy_VariantVariantValues[]
}

model Entegre_OnBuy_VariantValues {
  Id                                 BigInt                               @id(map: "PK_Entegre_OnBuy_VariantValues")
  Name                               String                               @db.NVarChar(300)
  Entegre_OnBuy_VariantVariantValues Entegre_OnBuy_VariantVariantValues[]
}

model Entegre_OnBuy_VariantVariantValues {
  Id                           BigInt                      @id(map: "PK_Entegre_OnBuy_VariantVariantValues") @default(autoincrement())
  Entegre_OnBuy_VariantId      BigInt
  Entegre_OnBuy_VariantValueId BigInt
  Entegre_OnBuy_CategoryId     BigInt
  Entegre_OnBuy_Categories     Entegre_OnBuy_Categories    @relation(fields: [Entegre_OnBuy_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_CategoryEntegre_OnBuy_VariantVariantValue")
  Entegre_OnBuy_Variants       Entegre_OnBuy_Variants      @relation(fields: [Entegre_OnBuy_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_VariantEntegre_OnBuy_VariantVariantValue")
  Entegre_OnBuy_VariantValues  Entegre_OnBuy_VariantValues @relation(fields: [Entegre_OnBuy_VariantValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_OnBuy_VariantValueEntegre_OnBuy_VariantVariantValue")

  @@index([Entegre_OnBuy_CategoryId], map: "IX_FK_Entegre_OnBuy_CategoryEntegre_OnBuy_VariantVariantValue")
  @@index([Entegre_OnBuy_VariantId], map: "IX_FK_Entegre_OnBuy_VariantEntegre_OnBuy_VariantVariantValue")
  @@index([Entegre_OnBuy_VariantValueId], map: "IX_FK_Entegre_OnBuy_VariantValueEntegre_OnBuy_VariantVariantValue")
}

model Entegre_Ozon_AttributeAttributeValues {
  Id                            BigInt                       @id(map: "PK_Entegre_Ozon_AttributeAttributeValues") @default(autoincrement())
  Entegre_Ozon_CategoryId       BigInt
  Entegre_Ozon_AttributeId      BigInt
  Entegre_Ozon_AttributeValueId BigInt
  Entegre_Ozon_Attributes       Entegre_Ozon_Attributes      @relation(fields: [Entegre_Ozon_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ozon_AttributeEntegre_Ozon_AttributeAttributeValue")
  Entegre_Ozon_AttributeValues  Entegre_Ozon_AttributeValues @relation(fields: [Entegre_Ozon_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ozon_AttributeValueEntegre_Ozon_AttributeAttributeValue")
  Entegre_Ozon_Categories       Entegre_Ozon_Categories      @relation(fields: [Entegre_Ozon_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ozon_CategoryEntegre_Ozon_AttributeAttributeValue")

  @@index([Entegre_Ozon_AttributeId], map: "IX_FK_Entegre_Ozon_AttributeEntegre_Ozon_AttributeAttributeValue")
  @@index([Entegre_Ozon_AttributeValueId], map: "IX_FK_Entegre_Ozon_AttributeValueEntegre_Ozon_AttributeAttributeValue")
  @@index([Entegre_Ozon_CategoryId], map: "IX_FK_Entegre_Ozon_CategoryEntegre_Ozon_AttributeAttributeValue")
}

model Entegre_Ozon_Attributes {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Ozon_Attributes")
  Name                                  String                                  @db.NVarChar(100)
  Type                                  String                                  @db.NVarChar(50)
  Entegre_Ozon_AttributeAttributeValues Entegre_Ozon_AttributeAttributeValues[]
  Entegre_Ozon_CategoryAttributes       Entegre_Ozon_CategoryAttributes[]
}

model Entegre_Ozon_AttributeValues {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Ozon_AttributeValues")
  Name                                  String                                  @db.NVarChar(100)
  Entegre_Ozon_AttributeAttributeValues Entegre_Ozon_AttributeAttributeValues[]
}

model Entegre_Ozon_Categories {
  Id                                    BigInt                                  @id(map: "PK_Entegre_Ozon_Categories")
  Name                                  String                                  @db.NVarChar(100)
  ParentId                              BigInt?
  Deepest                               Boolean
  BreadCrumb                            String                                  @db.NVarChar(2000)
  Entegre_Ozon_AttributeAttributeValues Entegre_Ozon_AttributeAttributeValues[]
  Entegre_Ozon_CategoryAttributes       Entegre_Ozon_CategoryAttributes[]

  @@index([ParentId], map: "IX_Entegre_Ozon_Categories_ParentId")
}

model Entegre_Ozon_CategoryAttributes {
  Id                       BigInt                  @id(map: "PK_Entegre_Ozon_CategoryAttributes") @default(autoincrement())
  Required                 Boolean
  IsCollection             Boolean
  Entegre_Ozon_CategoryId  BigInt
  Entegre_Ozon_AttributeId BigInt
  Entegre_Ozon_Attributes  Entegre_Ozon_Attributes @relation(fields: [Entegre_Ozon_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ozon_AttributeEntegre_Ozon_CategoryAttribute")
  Entegre_Ozon_Categories  Entegre_Ozon_Categories @relation(fields: [Entegre_Ozon_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Ozon_CategoryEntegre_Ozon_CategoryAttribute")

  @@index([Entegre_Ozon_AttributeId], map: "IX_FK_Entegre_Ozon_AttributeEntegre_Ozon_CategoryAttribute")
  @@index([Entegre_Ozon_CategoryId], map: "IX_FK_Entegre_Ozon_CategoryEntegre_Ozon_CategoryAttribute")
}

model Entegre_Ozon_Messages {
  Id                     BigInt                @id(map: "PK_Entegre_Ozon_Messages") @default(autoincrement())
  ChatId                 String                @db.NVarChar(50)
  MessageType            Int                   @db.TinyInt
  MessageContent         String                @db.NVarChar(Max)
  MessageDate            DateTime              @db.DateTime
  MessageId              BigInt
  ChatStatus             Int                   @db.TinyInt
  IsRead                 Boolean
  FromUser               String                @db.NVarChar(50)
  ToUser                 String?               @db.NVarChar(50)
  OrderNumber            String?               @db.NVarChar(100)
  OzonProductSku         String                @db.NVarChar(100)
  CustomerId             BigInt
  CustomerECommerceKeyId BigInt
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyEntegre_Ozon_Message")
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerEntegre_Ozon_Message")

  @@index([MessageId, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_Ozon_Messages_MessageId_CustomerId_CustomerECommerceKeyId")
  @@index([MessageType, CustomerId, IsRead], map: "IX_Entegre_Ozon_Messages_MessageType_CustomerId_IsRead")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyEntegre_Ozon_Message")
  @@index([CustomerId], map: "IX_FK_CustomerEntegre_Ozon_Message")
}

model Entegre_Pazarama_AttributeAttributeValues {
  Id                                BigInt                           @id(map: "PK_Entegre_Pazarama_AttributeAttributeValues") @default(autoincrement())
  Entegre_Pazarama_CategoryId       String                           @db.NVarChar(40)
  Entegre_Pazarama_AttributeValueId String                           @db.NVarChar(40)
  Entegre_Pazarama_AttributeId      String                           @db.NVarChar(40)
  Entegre_Pazarama_Attributes       Entegre_Pazarama_Attributes      @relation(fields: [Entegre_Pazarama_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Pazarama_AttributeAttributeValueEntegre_Pazarama_Attribute")
  Entegre_Pazarama_AttributeValues  Entegre_Pazarama_AttributeValues @relation(fields: [Entegre_Pazarama_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Pazarama_AttributeAttributeValueEntegre_Pazarama_AttributeValue")
  Entegre_Pazarama_Categories       Entegre_Pazarama_Categories      @relation(fields: [Entegre_Pazarama_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Pazarama_CategoryEntegre_Pazarama_AttributeAttributeValue")

  @@index([Entegre_Pazarama_CategoryId, Entegre_Pazarama_AttributeId], map: "IX_Entegre_Pazarama_AttributeAttributeValues_Entegre_Pazarama_CategoryId_Entegre_Pazarama_AttributeId")
  @@index([Entegre_Pazarama_AttributeId], map: "IX_FK_Entegre_Pazarama_AttributeAttributeValueEntegre_Pazarama_Attribute")
  @@index([Entegre_Pazarama_AttributeValueId], map: "IX_FK_Entegre_Pazarama_AttributeAttributeValueEntegre_Pazarama_AttributeValue")
  @@index([Entegre_Pazarama_CategoryId], map: "IX_FK_Entegre_Pazarama_CategoryEntegre_Pazarama_AttributeAttributeValue")
}

model Entegre_Pazarama_Attributes {
  Id                                        String                                      @id(map: "PK_Entegre_Pazarama_Attributes") @db.NVarChar(40)
  Name                                      String                                      @db.NVarChar(100)
  Entegre_Pazarama_AttributeAttributeValues Entegre_Pazarama_AttributeAttributeValues[]
  Entegre_Pazarama_CategoryAttributes       Entegre_Pazarama_CategoryAttributes[]
}

model Entegre_Pazarama_AttributeValues {
  Id                                        String                                      @id(map: "PK_Entegre_Pazarama_AttributeValues") @db.NVarChar(40)
  AttributeValue                            String                                      @db.NVarChar(120)
  Entegre_Pazarama_AttributeAttributeValues Entegre_Pazarama_AttributeAttributeValues[]
}

model Entegre_Pazarama_Brands {
  Id   String @id(map: "PK_Entegre_Pazarama_Brands") @db.NVarChar(40)
  Name String @db.NVarChar(100)
}

model Entegre_Pazarama_Categories {
  Id                                        String                                      @id(map: "PK_Entegre_Pazarama_Categories") @db.NVarChar(40)
  Name                                      String                                      @db.NVarChar(100)
  Deepest                                   Boolean
  BreadCrumb                                String?                                     @db.NVarChar(500)
  ParentId                                  String?                                     @db.NVarChar(40)
  Entegre_Pazarama_AttributeAttributeValues Entegre_Pazarama_AttributeAttributeValues[]
  Entegre_Pazarama_Categories               Entegre_Pazarama_Categories?                @relation("Entegre_Pazarama_CategoriesToEntegre_Pazarama_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_Pazarama_CategoryEntegre_Pazarama_Category")
  other_Entegre_Pazarama_Categories         Entegre_Pazarama_Categories[]               @relation("Entegre_Pazarama_CategoriesToEntegre_Pazarama_Categories")
  Entegre_Pazarama_CategoryAttributes       Entegre_Pazarama_CategoryAttributes[]

  @@index([ParentId], map: "IX_FK_Entegre_Pazarama_CategoryEntegre_Pazarama_Category")
}

model Entegre_Pazarama_CategoryAttributes {
  Id                           BigInt                      @id(map: "PK_Entegre_Pazarama_CategoryAttributes") @default(autoincrement())
  Required                     Boolean
  AllowCustom                  Boolean
  Varianter                    Boolean
  Entegre_Pazarama_CategoryId  String                      @db.NVarChar(40)
  Entegre_Pazarama_AttributeId String                      @db.NVarChar(40)
  Entegre_Pazarama_Attributes  Entegre_Pazarama_Attributes @relation(fields: [Entegre_Pazarama_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Pazarama_CategoryAttributeEntegre_Pazarama_Attribute")
  Entegre_Pazarama_Categories  Entegre_Pazarama_Categories @relation(fields: [Entegre_Pazarama_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_Pazarama_CategoryAttributeEntegre_Pazarama_Category")

  @@index([Entegre_Pazarama_AttributeId], map: "IX_FK_Entegre_Pazarama_CategoryAttributeEntegre_Pazarama_Attribute")
  @@index([Entegre_Pazarama_CategoryId], map: "IX_FK_Entegre_Pazarama_CategoryAttributeEntegre_Pazarama_Category")
}

model Entegre_PraStore_Categories {
  Id                     BigInt                @id(map: "PK_Entegre_PraStore_Categories") @default(autoincrement())
  Name                   String                @db.NVarChar(150)
  CustomerECommerceKeyId BigInt
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_PraStore_CategoryCustomerECommerceKey")
}

model Entegre_ProductECommerce_Attributes {
  Id                         BigInt                    @id(map: "PK_Entegre_ProductECommerce_Attributes") @default(autoincrement())
  AttributeName              String                    @db.NVarChar(100)
  AttributeId                BigInt?
  AttributeValue             String                    @db.NVarChar(120)
  AttributeValueId           BigInt?
  Entegre_ProductECommerceId BigInt
  DynamicTextLength          Int?
  Entegre_ProductECommerces  Entegre_ProductECommerces @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_Attribute")

  @@index([Entegre_ProductECommerceId], map: "IX_FK_Entegre_ProductECommerceEntegre_ProductECommerce_Attribute")
}

model Entegre_ProductECommerce_CompetitionAnalyses {
  Id                         BigInt                    @id(map: "PK_Entegre_ProductECommerce_CompetitionAnalyses") @default(autoincrement())
  MinPriceInclusiveVat       Decimal                   @db.Decimal(10, 2)
  MaxPriceInclusiveVat       Decimal?                  @db.Decimal(10, 2)
  PriceStep                  Decimal                   @db.Decimal(5, 2)
  Entegre_ProductECommerceId BigInt
  CustomerId                 BigInt
  MinStorePoint              Int?                      @db.TinyInt
  Active                     Boolean                   @default(true, map: "DF__Entegre_P__Activ__3D7E1B63")
  IgnoreStoreIds             String?                   @db.NVarChar(200)
  UseBuybox                  Boolean?
  BuyboxPriceStepSetting     Boolean?
  Customers                  Customers                 @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerEntegre_ProductECommerce_CompetitionAnalysis")
  Entegre_ProductECommerces  Entegre_ProductECommerces @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_CompetitionAnalysis")

  @@index([Active], map: "IX_Entegre_ProductECommerce_CompetitionAnalyses_Active")
  @@index([CustomerId], map: "IX_Entegre_ProductECommerce_CompetitionAnalyses_CustomerId")
  @@index([CustomerId], map: "IX_FK_CustomerEntegre_ProductECommerce_CompetitionAnalysis")
  @@index([Entegre_ProductECommerceId], map: "IX_FK_Entegre_ProductECommerceEntegre_ProductECommerce_CompetitionAnalysis")
}

model Entegre_ProductECommerce_DescriptionTemplates {
  Id                         BigInt                    @id(map: "PK_Entegre_ProductECommerce_DescriptionTemplates") @default(autoincrement())
  SortOrder                  Int                       @db.TinyInt
  DescriptionTemplateId      BigInt
  Entegre_ProductECommerceId BigInt
  DescriptionTemplates       DescriptionTemplates      @relation(fields: [DescriptionTemplateId], references: [Id], onUpdate: NoAction, map: "FK_DescriptionTemplateEntegre_ProductECommerce_DescriptionTemplate")
  Entegre_ProductECommerces  Entegre_ProductECommerces @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_DescriptionTemplate")

  @@index([Entegre_ProductECommerceId], map: "IX_FK_Entegre_ProductECommerceEntegre_ProductECommerce_DescriptionTemplate")
}

model Entegre_ProductECommerce_Histories {
  Id                      BigInt               @id(map: "PK_Entegre_ProductECommerce_Histories") @default(autoincrement())
  EntegreProductId        BigInt
  ProductId               BigInt
  IntegratedECommerceCode String               @db.NVarChar(10)
  IntegratedECommerces    IntegratedECommerces @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceEntegre_ProductECommerce_History")
  Products                Products             @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductEntegre_ProductECommerce_History")

  @@index([ProductId], map: "IX_FK_ProductEntegre_ProductECommerce_History")
}

model Entegre_ProductECommerce_Images {
  Id                         BigInt                    @id(map: "PK_Entegre_ProductECommerce_Images") @default(autoincrement())
  SortOrder                  Int                       @db.TinyInt
  ProductImageId             BigInt
  Entegre_ProductECommerceId BigInt
  Entegre_ProductECommerces  Entegre_ProductECommerces @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_Image")
  ProductImages              ProductImages             @relation(fields: [ProductImageId], references: [Id], onUpdate: NoAction, map: "FK_ProductImageEntegre_ProductECommerce_Image")

  @@index([Entegre_ProductECommerceId], map: "IX_Entegre_ProductECommerce_Images_Entegre_ProductECommerceId")
  @@index([ProductImageId], map: "IX_FK_ProductImageEntegre_ProductECommerce_Image")
}

model Entegre_ProductECommerce_Jobs {
  Id                         BigInt                    @id(map: "PK_Entegre_ProductECommerce_Jobs") @default(autoincrement())
  CreatedOn                  DateTime                  @db.DateTime
  JobType                    Int                       @db.TinyInt
  Entegre_ProductECommerceId BigInt
  IntegratedECommerceCode    String                    @db.NVarChar(10)
  CustomerId                 BigInt
  Customers                  Customers                 @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerEntegre_ProductECommerce_Job")
  Entegre_ProductECommerces  Entegre_ProductECommerces @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_Job")
  IntegratedECommerces       IntegratedECommerces      @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceEntegre_ProductECommerce_Job")

  @@index([CustomerId, CreatedOn, JobType], map: "IX_Entegre_ProductECommerce_Jobs_CustomerId_CreatedOn_JobType")
  @@index([IntegratedECommerceCode, CustomerId, CreatedOn, JobType], map: "IX_Entegre_ProductECommerce_Jobs_IntegratedECommerceCode_CustomerId_CreatedOn_JobType")
  @@index([JobType, CreatedOn], map: "IX_Entegre_ProductECommerce_Jobs_JobType_CreatedOn")
  @@index([Entegre_ProductECommerceId, JobType], map: "IX_FK_Entegre_ProductECommerceEntegre_ProductECommerce_Job")
}

model Entegre_ProductECommerce_ShipmentCompanies {
  Id                         BigInt                    @id(map: "PK_Entegre_ProductECommerce_ShipmentCompanies") @default(autoincrement())
  ShipmentCompanyId          BigInt
  Entegre_ProductECommerceId BigInt
  SortOrder                  Int                       @default(1, map: "DF__Entegre_P__SortO__3E723F9C") @db.TinyInt
  Entegre_ProductECommerces  Entegre_ProductECommerces @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_ShipmentCompany")
  ShipmentCompanies          ShipmentCompanies         @relation(fields: [ShipmentCompanyId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCompanyEntegre_ProductECommerce_ShipmentCompany")

  @@index([Entegre_ProductECommerceId], map: "IX_FK_Entegre_ProductECommerceEntegre_ProductECommerce_ShipmentCompany")
}

model Entegre_ProductECommerce_Variant_Details {
  Id                                 BigInt                            @id(map: "PK_Entegre_ProductECommerce_Variant_Details") @default(autoincrement())
  VariantName                        String                            @db.NVarChar(100)
  VariantId                          BigInt?
  VariantValue                       String                            @db.NVarChar(120)
  VariantValueId                     BigInt?
  Entegre_ProductECommerce_VariantId BigInt
  Entegre_ProductECommerce_Variants  Entegre_ProductECommerce_Variants @relation(fields: [Entegre_ProductECommerce_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerce_VariantEntegre_ProductECommerce_Variant_Detail")

  @@index([Entegre_ProductECommerce_VariantId], map: "IX_FK_Entegre_ProductECommerce_VariantEntegre_ProductECommerce_Variant_Detail")
}

model Entegre_ProductECommerce_Variant_Images {
  Id                                 BigInt                            @id(map: "PK_Entegre_ProductECommerce_Variant_Images") @default(autoincrement())
  SortOrder                          Int                               @db.TinyInt
  Entegre_ProductECommerce_VariantId BigInt
  ProductImageId                     BigInt
  Entegre_ProductECommerce_Variants  Entegre_ProductECommerce_Variants @relation(fields: [Entegre_ProductECommerce_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerce_VariantEntegre_ProductECommerce_Variant_Image")
  ProductImages                      ProductImages                     @relation(fields: [ProductImageId], references: [Id], onUpdate: NoAction, map: "FK_ProductImageEntegre_ProductECommerce_Variant_Image")

  @@index([Entegre_ProductECommerce_VariantId], map: "IX_FK_Entegre_ProductECommerce_VariantEntegre_ProductECommerce_Variant_Image")
  @@index([ProductImageId], map: "IX_FK_ProductImageEntegre_ProductECommerce_Variant_Image")
}

model Entegre_ProductECommerce_Variants {
  Id                                       BigInt                                     @id(map: "PK_Entegre_ProductECommerce_Variants") @default(autoincrement())
  StockCode                                String                                     @db.NVarChar(50)
  PriceInclusiveVat                        Decimal?                                   @db.Decimal(20, 8)
  VariantStockItemId                       String?                                    @db.NVarChar(50)
  StockItemVersion                         BigInt?
  Entegre_ProductECommerceId               BigInt
  ProductVariantGroupId                    BigInt?
  VariantStockItemCode                     String?                                    @db.NVarChar(50)
  SourcePriceInclusiveVat                  Decimal?                                   @db.Decimal(20, 8)
  Entegre_ProductECommerce_Variant_Details Entegre_ProductECommerce_Variant_Details[]
  Entegre_ProductECommerce_Variant_Images  Entegre_ProductECommerce_Variant_Images[]
  Entegre_ProductECommerces                Entegre_ProductECommerces                  @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerceEntegre_ProductECommerce_Variant")
  ProductVariantGroups                     ProductVariantGroups?                      @relation(fields: [ProductVariantGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductVariantGroupEntegre_ProductECommerce_Variant")
  Entegre_ProductECommerces_CampaignStocks Entegre_ProductECommerces_CampaignStocks[]

  @@index([Entegre_ProductECommerceId], map: "IX_Entegre_ProductECommerce_Variants_Entegre_ProductECommerceId")
  @@index([ProductVariantGroupId], map: "IX_Entegre_ProductECommerce_Variants_ProductVariantGroupId")
  @@index([VariantStockItemCode], map: "IX_Entegre_ProductECommerce_Variants_VariantStockItemCode")
  @@index([VariantStockItemId], map: "IX_Entegre_ProductECommerce_Variants_VariantStockItemId")
}

model Entegre_ProductECommerces {
  Id                                                                BigInt                                          @id(map: "PK_Entegre_ProductECommerces") @default(autoincrement())
  Code                                                              String?                                         @db.NVarChar(50)
  Name                                                              String?                                         @db.NVarChar(150)
  SubHeader                                                         String?                                         @db.NVarChar(100)
  PriceInclusiveVat                                                 Decimal?                                        @db.Decimal(20, 8)
  MarketPriceInclusiveVat                                           Decimal?                                        @db.Decimal(20, 8)
  DiscountType                                                      Int                                             @db.TinyInt
  StockAmount                                                       Decimal?                                        @db.Decimal(20, 8)
  EntegreCategoryId                                                 String?                                         @db.NVarChar(50)
  EntegreStoreCategoryId                                            BigInt?
  EntegreStockItemVersion                                           BigInt?
  EntegreProductId                                                  String?                                         @db.NVarChar(50)
  EntegreProductCode                                                String?                                         @db.NVarChar(50)
  EntegreStockItemId                                                String?                                         @db.NVarChar(50)
  ProductId                                                         BigInt
  IntegratedECommerceCode                                           String                                          @db.NVarChar(10)
  ProductECommerceStatus                                            Int                                             @db.TinyInt
  UpdateDateTime                                                    DateTime?                                       @db.DateTime
  SaleEndDate                                                       DateTime?                                       @db.DateTime
  ShippingPaymentType                                               Int                                             @db.TinyInt
  PaymentRequiredForECommerce                                       Boolean
  CurrencyId                                                        Int
  SoldCount                                                         Int?
  EntegreDispatchTime                                               String?                                         @db.NVarChar(10)
  EntegreMaximumPurchasableQuantity                                 Int?
  CustomerId                                                        BigInt                                          @default(1, map: "DF__Entegre_P__Custo__3F6663D5")
  ShippingTemplateName                                              String?                                         @db.NVarChar(100)
  CustomerECommerceKeyId                                            BigInt
  EntegreProductSlug                                                String?                                         @db.NVarChar(250)
  ShipmentPrice                                                     Decimal?                                        @db.Decimal(6, 2)
  ShipmentAddressIdCode                                             String?                                         @db.NVarChar(50)
  InvoiceAddressIdCode                                              String?                                         @db.NVarChar(50)
  ReturningAddressIdCode                                            String?                                         @db.NVarChar(50)
  BatchId                                                           String?                                         @db.NVarChar(80)
  EntegreBrandId                                                    String?                                         @db.NVarChar(40)
  StockMultiplier                                                   Decimal                                         @default(1, map: "DF_EP_StockMultplier") @db.Decimal(16, 8)
  ProductDescriptionId                                              BigInt?
  CreatedOn                                                         DateTime                                        @default(now(), map: "DF__Entegre_P__Creat__414EAC47") @db.DateTime
  LanguageCode                                                      String?                                         @db.NVarChar(5)
  IsWareHouseListing                                                Boolean                                         @default(false, map: "DF__Entegre_P__IsWar__4242D080")
  SourceCurrencyId                                                  Int?
  SourcePriceInclusiveVat                                           Decimal?                                        @db.Decimal(20, 8)
  PriceFormula                                                      String?                                         @db.NVarChar(200)
  BulkOperationLines                                                BulkOperationLines[]
  Entegre_N11_Questions                                             Entegre_N11_Questions[]
  Entegre_ProductECommerce_Attributes                               Entegre_ProductECommerce_Attributes[]
  Entegre_ProductECommerce_CompetitionAnalyses                      Entegre_ProductECommerce_CompetitionAnalyses[]
  Entegre_ProductECommerce_DescriptionTemplates                     Entegre_ProductECommerce_DescriptionTemplates[]
  Entegre_ProductECommerce_Images                                   Entegre_ProductECommerce_Images[]
  Entegre_ProductECommerce_Jobs                                     Entegre_ProductECommerce_Jobs[]
  Entegre_ProductECommerce_ShipmentCompanies                        Entegre_ProductECommerce_ShipmentCompanies[]
  Entegre_ProductECommerce_Variants                                 Entegre_ProductECommerce_Variants[]
  Currencies_Entegre_ProductECommerces_CurrencyIdToCurrencies       Currencies                                      @relation("Entegre_ProductECommerces_CurrencyIdToCurrencies", fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CurrencyEntegre_ProductECommerce")
  CustomerECommerceKeys                                             CustomerECommerceKeys                           @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_CustomerECommerceKeyEntegre_ProductECommerce")
  Customers                                                         Customers                                       @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerEntegre_ProductECommerce")
  Currencies_Entegre_ProductECommerces_SourceCurrencyIdToCurrencies Currencies?                                     @relation("Entegre_ProductECommerces_SourceCurrencyIdToCurrencies", fields: [SourceCurrencyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_ProductECommerceCurrency")
  IntegratedECommerces                                              IntegratedECommerces                            @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceEntegre_ProductECommerce")
  ProductDescriptions                                               ProductDescriptions?                            @relation(fields: [ProductDescriptionId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductDescriptionEntegre_ProductECommerce")
  Products                                                          Products                                        @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductEntegre_ProductECommerce")
  Entegre_ProductECommerces_CampaignStocks                          Entegre_ProductECommerces_CampaignStocks[]

  @@index([CustomerId, CustomerECommerceKeyId, EntegreProductSlug], map: "IX_Entegre_ProductECommerces_CustomerId_CustomerECommerceKeyId_EntegreProductSlug")
  @@index([CustomerId, ProductId], map: "IX_Entegre_ProductECommerces_CustomerId_ProductId")
  @@index([EntegreProductCode, IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_ProductECommerces_EntegreProductCode_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId")
  @@index([EntegreProductId, CustomerECommerceKeyId], map: "IX_Entegre_ProductECommerces_EntegreProductId_CustomerECommerceKeyId")
  @@index([EntegreStockItemId, IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_ProductECommerces_EntegreStockItemId_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId")
  @@index([IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_ProductECommerces_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId")
  @@index([IntegratedECommerceCode, ProductECommerceStatus, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_ProductECommerces_IntegratedECommerceCode_ProductECommerceStatus_CustomerId_CustomerECommerceKeyId")
  @@index([ProductECommerceStatus, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_ProductECommerces_ProductECommerceStatus_CustomerId_CustomerECommerceKeyId")
  @@index([ProductId], map: "IX_Entegre_ProductECommerces_ProductId")
  @@index([CurrencyId], map: "IX_FK_CurrencyEntegre_ProductECommerce")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyId")
  @@index([SourceCurrencyId], map: "IX_FK_Entegre_ProductECommerceCurrency")
}

model Entegre_ProductECommerces_CampaignStocks {
  Id                                 BigInt                             @id(map: "PK_Entegre_ProductECommerces_CampaignStocks") @default(autoincrement())
  Entegre_ProductECommerceId         BigInt
  Entegre_ProductECommerce_VariantId BigInt?
  StockAmount                        Decimal                            @db.Decimal(10, 2)
  CampaignStartDate                  DateTime                           @db.DateTime
  CampaignEndDate                    DateTime?                          @db.DateTime
  SoldCount                          Decimal                            @db.Decimal(10, 2)
  Entegre_ProductECommerces          Entegre_ProductECommerces          @relation(fields: [Entegre_ProductECommerceId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_ProductECommerces_CampaignStockEntegre_ProductECommerce")
  Entegre_ProductECommerce_Variants  Entegre_ProductECommerce_Variants? @relation(fields: [Entegre_ProductECommerce_VariantId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_ProductECommerces_CampaignStockEntegre_ProductECommerce_Variant")

  @@index([Entegre_ProductECommerceId], map: "IX_FK_Entegre_ProductECommerces_CampaignStockEntegre_ProductECommerce")
  @@index([Entegre_ProductECommerce_VariantId], map: "IX_FK_Entegre_ProductECommerces_CampaignStockEntegre_ProductECommerce_Variant")
}

model Entegre_ShipmentCompanies {
  Id                         BigInt               @id(map: "PK_Entegre_ShipmentCompanies") @default(autoincrement())
  EntegreShipmentCompanyCode String?              @db.NVarChar(50)
  IntegratedECommerceCode    String               @db.NVarChar(10)
  ShipmentCompanyId          BigInt
  EntegreShipmentCompanyId   String?              @db.NVarChar(30)
  IntegratedECommerces       IntegratedECommerces @relation(fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceEntegre_ShipmentCompany")
  ShipmentCompanies          ShipmentCompanies    @relation(fields: [ShipmentCompanyId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCompanyEntegre_ShipmentCompany")

  @@index([IntegratedECommerceCode], map: "IX_FK_IntegratedECommerceEntegre_ShipmentCompany")
}

model Entegre_SP_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_SP_AttributeAttributeValues") @default(autoincrement())
  Entegre_SP_AttributeId      BigInt
  Entegre_SP_AttributeValueId BigInt
  Entegre_SP_Attributes       Entegre_SP_Attributes      @relation(fields: [Entegre_SP_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_AttributeEntegre_SP_AttributeAttributeValue")
  Entegre_SP_AttributeValues  Entegre_SP_AttributeValues @relation(fields: [Entegre_SP_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_AttributeValueEntegre_SP_AttributeAttributeValue")

  @@index([Entegre_SP_AttributeId], map: "IX_FK_Entegre_SP_AttributeEntegre_SP_AttributeAttributeValue")
  @@index([Entegre_SP_AttributeValueId], map: "IX_FK_Entegre_SP_AttributeValueEntegre_SP_AttributeAttributeValue")
}

model Entegre_SP_Attributes {
  Id                                  BigInt                                @id(map: "PK_Entegre_SP_Attributes")
  Name                                String                                @db.NVarChar(100)
  Entegre_SP_AttributeAttributeValues Entegre_SP_AttributeAttributeValues[]
  Entegre_SP_CategoryAttributes       Entegre_SP_CategoryAttributes[]
}

model Entegre_SP_AttributeValues {
  Id                                  BigInt                                @id(map: "PK_Entegre_SP_AttributeValues")
  AttributeValue                      String                                @db.NVarChar(120)
  Entegre_SP_AttributeAttributeValues Entegre_SP_AttributeAttributeValues[]
}

model Entegre_SP_Categories {
  Id                            BigInt                          @id(map: "PK_Entegre_SP_Categories")
  Name                          String                          @db.NVarChar(100)
  Deepest                       Boolean
  ParentId                      BigInt?
  BreadCrumb                    String?                         @db.NVarChar(500)
  Entegre_SP_Categories         Entegre_SP_Categories?          @relation("Entegre_SP_CategoriesToEntegre_SP_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_SP_CategoryEntegre_SP_Category")
  other_Entegre_SP_Categories   Entegre_SP_Categories[]         @relation("Entegre_SP_CategoriesToEntegre_SP_Categories")
  Entegre_SP_CategoryAttributes Entegre_SP_CategoryAttributes[]
  Entegre_SP_CategoryVariants   Entegre_SP_CategoryVariants[]

  @@index([ParentId], map: "IX_FK_Entegre_SP_CategoryEntegre_SP_Category")
}

model Entegre_SP_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_SP_CategoryAttributes") @default(autoincrement())
  Required               Boolean
  Entegre_SP_CategoryId  BigInt
  Entegre_SP_AttributeId BigInt
  Entegre_SP_Attributes  Entegre_SP_Attributes @relation(fields: [Entegre_SP_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_AttributeEntegre_SP_CategoryAttribute")
  Entegre_SP_Categories  Entegre_SP_Categories @relation(fields: [Entegre_SP_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_CategoryEntegre_SP_CategoryAttribute")

  @@index([Entegre_SP_AttributeId], map: "IX_FK_Entegre_SP_AttributeEntegre_SP_CategoryAttribute")
  @@index([Entegre_SP_CategoryId], map: "IX_FK_Entegre_SP_CategoryEntegre_SP_CategoryAttribute")
}

model Entegre_SP_CategoryVariants {
  Id                    BigInt                @id(map: "PK_Entegre_SP_CategoryVariants") @default(autoincrement())
  Entegre_SP_CategoryId BigInt
  Entegre_SP_VariantId  BigInt
  Entegre_SP_Categories Entegre_SP_Categories @relation(fields: [Entegre_SP_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_CategoryEntegre_SP_CategoryVariant")
  Entegre_SP_Variants   Entegre_SP_Variants   @relation(fields: [Entegre_SP_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_VariantEntegre_SP_CategoryVariant")

  @@index([Entegre_SP_CategoryId], map: "IX_FK_Entegre_SP_CategoryEntegre_SP_CategoryVariant")
  @@index([Entegre_SP_VariantId], map: "IX_FK_Entegre_SP_VariantEntegre_SP_CategoryVariant")
}

model Entegre_SP_CustomerDefaultSettings {
  Id                               BigInt                             @id(map: "PK_Entegre_SP_CustomerDefaultSettings") @default(autoincrement())
  ListingDays                      Int?
  ShippingCity                     Int?
  BoldOption                       Boolean
  CargoCompanies                   String?                            @db.NVarChar(50)
  ShippingPaymentType              String?                            @db.NVarChar(6)
  ShippingDays                     Int?                               @db.TinyInt
  CustomerECommerceDefaultSettings CustomerECommerceDefaultSettings[]
}

model Entegre_SP_Variants {
  Id                              BigInt                            @id(map: "PK_Entegre_SP_Variants")
  Name                            String                            @db.NVarChar(50)
  Entegre_SP_CategoryVariants     Entegre_SP_CategoryVariants[]
  Entegre_SP_VariantVariantValues Entegre_SP_VariantVariantValues[]
}

model Entegre_SP_VariantValues {
  Id                              BigInt                            @id(map: "PK_Entegre_SP_VariantValues")
  VariantValue                    String                            @db.NVarChar(80)
  Entegre_SP_VariantVariantValues Entegre_SP_VariantVariantValues[]
}

model Entegre_SP_VariantVariantValues {
  Id                        BigInt                   @id(map: "PK_Entegre_SP_VariantVariantValues") @default(autoincrement())
  Entegre_SP_VariantId      BigInt
  Entegre_SP_VariantValueId BigInt
  Entegre_SP_Variants       Entegre_SP_Variants      @relation(fields: [Entegre_SP_VariantId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_VariantEntegre_SP_VariantVariantValue")
  Entegre_SP_VariantValues  Entegre_SP_VariantValues @relation(fields: [Entegre_SP_VariantValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_SP_VariantValueEntegre_SP_VariantVariantValue")

  @@index([Entegre_SP_VariantId], map: "IX_FK_Entegre_SP_VariantEntegre_SP_VariantVariantValue")
  @@index([Entegre_SP_VariantValueId], map: "IX_FK_Entegre_SP_VariantValueEntegre_SP_VariantVariantValue")
}

model Entegre_Teknosa_Categories {
  Id         String  @id(map: "PK_Entegre_Teknosa_Categories") @db.NVarChar(50)
  Name       String  @db.NVarChar(100)
  Deepest    Boolean
  BreadCrumb String  @db.NVarChar(500)
  ParentId   String? @db.NVarChar(50)
}

model Entegre_TO_AttributeAttributeValues {
  Id                          BigInt                     @id(map: "PK_Entegre_TO_AttributeAttributeValues") @default(autoincrement())
  Entegre_TO_AttributeId      BigInt
  Entegre_TO_AttributeValueId BigInt
  Entegre_TO_CategoryId       BigInt
  Entegre_TO_Attributes       Entegre_TO_Attributes      @relation(fields: [Entegre_TO_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_AttributeEntegre_TO_AttributeAttributeValue")
  Entegre_TO_AttributeValues  Entegre_TO_AttributeValues @relation(fields: [Entegre_TO_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_AttributeValueEntegre_TO_AttributeAttributeValue")
  Entegre_TO_Categories       Entegre_TO_Categories      @relation(fields: [Entegre_TO_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_CategoryEntegre_TO_AttributeAttributeValue")

  @@index([Entegre_TO_AttributeId, Entegre_TO_AttributeValueId, Entegre_TO_CategoryId], map: "IX_Entegre_TO_AttributeAttributeValues_Entegre_TO_AttributeId_Entegre_TO_AttributeValueId_Entegre_TO_CategoryId")
  @@index([Entegre_TO_AttributeId, Entegre_TO_CategoryId], map: "IX_Entegre_TO_AttributeAttributeValues_Entegre_TO_AttributeId_Entegre_TO_CategoryId")
}

model Entegre_TO_Attributes {
  Id                                  BigInt                                @id(map: "PK_Entegre_TO_Attributes")
  Name                                String                                @db.NVarChar(100)
  Entegre_TO_AttributeAttributeValues Entegre_TO_AttributeAttributeValues[]
  Entegre_TO_CategoryAttributes       Entegre_TO_CategoryAttributes[]
}

model Entegre_TO_AttributeValues {
  Id                                  BigInt                                @id(map: "PK_Entegre_TO_AttributeValues")
  AttributeValue                      String                                @db.NVarChar(120)
  Entegre_TO_AttributeAttributeValues Entegre_TO_AttributeAttributeValues[]

  @@index([AttributeValue], map: "IX_Entegre_TO_AttributeValues_AttributeValue")
}

model Entegre_TO_Brands {
  Id   BigInt @id(map: "PK_Entegre_TO_Brands")
  Name String @db.NVarChar(100)
}

model Entegre_TO_Categories {
  Id                                  BigInt                                @id(map: "PK_Entegre_TO_Categories")
  Code                                String?                               @db.NVarChar(10)
  Name                                String                                @db.NVarChar(100)
  Deepest                             Boolean
  BreadCrumb                          String?                               @db.NVarChar(500)
  ParentId                            BigInt?
  Entegre_TO_AttributeAttributeValues Entegre_TO_AttributeAttributeValues[]
  Entegre_TO_Categories               Entegre_TO_Categories?                @relation("Entegre_TO_CategoriesToEntegre_TO_Categories", fields: [ParentId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Entegre_TO_CategoryEntegre_TO_Category")
  other_Entegre_TO_Categories         Entegre_TO_Categories[]               @relation("Entegre_TO_CategoriesToEntegre_TO_Categories")
  Entegre_TO_CategoryAttributes       Entegre_TO_CategoryAttributes[]

  @@index([Name], map: "IX_Entegre_TO_Categories_Name")
  @@index([ParentId], map: "IX_FK_Entegre_TO_CategoryEntegre_TO_Category")
}

model Entegre_TO_CategoryAttributes {
  Id                     BigInt                @id(map: "PK_Entegre_TO_CategoryAttributes") @default(autoincrement())
  Required               Boolean
  AllowCustom            Boolean
  Varianter              Boolean
  Entegre_TO_AttributeId BigInt
  Entegre_TO_CategoryId  BigInt
  Entegre_TO_Attributes  Entegre_TO_Attributes @relation(fields: [Entegre_TO_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_AttributeEntegre_TO_CategoryAttribute")
  Entegre_TO_Categories  Entegre_TO_Categories @relation(fields: [Entegre_TO_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_CategoryEntegre_TO_CategoryAttribute")

  @@index([Entegre_TO_CategoryId], map: "IX_Entegre_TO_CategoryAttributes_Entegre_TO_Category_Entegre_TO_CategoryAttribute")
}

model Entegre_TO_Questions {
  Id                     BigInt                @id(map: "PK_Entegre_TO_Questions") @default(autoincrement())
  QuestionDate           DateTime              @db.DateTime
  Status                 Int                   @db.TinyInt
  BuyerFullName          String?               @db.NVarChar(300)
  QuestionId             BigInt
  Question               String                @db.NVarChar(2000)
  EntegreProductName     String                @db.NVarChar(100)
  AnswerDate             DateTime?             @db.DateTime
  Answer                 String?               @db.NVarChar(4000)
  MessageCustomerId      BigInt
  CustomerId             BigInt
  CustomerECommerceKeyId BigInt
  QuestionExposed        Boolean
  ProductWebUrl          String?               @db.NVarChar(250)
  ProductImageUrl        String?               @db.NVarChar(250)
  Customers              Customers             @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_QuestionCustomer")
  CustomerECommerceKeys  CustomerECommerceKeys @relation(fields: [CustomerECommerceKeyId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_TO_QuestionCustomerECommerceKey")

  @@index([CustomerId], map: "IX_Entegre_TO_Questions_CustomerId")
  @@index([AnswerDate, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_TO_Questions_CustomerId_CustomerECommerceKeyId_AnswerDate")
  @@index([MessageCustomerId, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_TO_Questions_MessageCustomerId_CustomerId_CustomerECommerceKeyId")
  @@index([QuestionId, CustomerId, CustomerECommerceKeyId], map: "IX_Entegre_TO_Questions_QuestionId_CustomerId_CustomerECommerceKeyId")
}

model Entegre_VFM_AttributeAttributeValues {
  Id                           BigInt                      @id(map: "PK_Entegre_VFM_AttributeAttributeValues") @default(autoincrement())
  Entegre_VFM_AttributeId      String                      @db.NVarChar(50)
  Entegre_VFM_AttributeValueId BigInt
  Entegre_VFM_CategoryId       String                      @db.NVarChar(50)
  Entegre_VFM_Attributes       Entegre_VFM_Attributes      @relation(fields: [Entegre_VFM_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_VFM_AttributeEntegre_VFM_AttributeAttributeValue")
  Entegre_VFM_AttributeValues  Entegre_VFM_AttributeValues @relation(fields: [Entegre_VFM_AttributeValueId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_VFM_AttributeValueEntegre_VFM_AttributeAttributeValue")
  Entegre_VFM_Categories       Entegre_VFM_Categories      @relation(fields: [Entegre_VFM_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_VFM_CategoryEntegre_VFM_AttributeAttributeValue")

  @@index([Entegre_VFM_AttributeId, Entegre_VFM_AttributeValueId], map: "IX_Entegre_VFM_AttributeAttributeValues_Entegre_VFM_AttributeId_Entegre_VFM_AttributeValueId")
  @@index([Entegre_VFM_AttributeId, Entegre_VFM_CategoryId], map: "IX_Entegre_VFM_AttributeAttributeValues_Entegre_VFM_AttributeId_Entegre_VFM_CategoryId")
  @@index([Entegre_VFM_AttributeId], map: "IX_FK_Entegre_VFM_AttributeEntegre_VFM_AttributeAttributeValue")
  @@index([Entegre_VFM_AttributeValueId], map: "IX_FK_Entegre_VFM_AttributeValueEntegre_VFM_AttributeAttributeValue")
  @@index([Entegre_VFM_CategoryId], map: "IX_FK_Entegre_VFM_CategoryEntegre_VFM_AttributeAttributeValue")
}

model Entegre_VFM_Attributes {
  Id                                   String                                 @id(map: "PK_Entegre_VFM_Attributes") @db.NVarChar(50)
  Name                                 String                                 @db.NVarChar(100)
  Entegre_VFM_AttributeAttributeValues Entegre_VFM_AttributeAttributeValues[]
  Entegre_VFM_CategoryAttributes       Entegre_VFM_CategoryAttributes[]
}

model Entegre_VFM_AttributeValues {
  Id                                   BigInt                                 @id(map: "PK_Entegre_VFM_AttributeValues") @default(autoincrement())
  Name                                 String                                 @db.NVarChar(100)
  Entegre_VFM_AttributeAttributeValues Entegre_VFM_AttributeAttributeValues[]

  @@index([Name], map: "IX_Entegre_VFM_AttributeValues_Name")
}

model Entegre_VFM_Brands {
  Id   String @id(map: "PK_Entegre_VFM_Brands") @db.NVarChar(50)
  Name String @db.NVarChar(100)
}

model Entegre_VFM_Categories {
  Id                                   String                                 @id(map: "PK_Entegre_VFM_Categories") @db.NVarChar(50)
  Name                                 String                                 @db.NVarChar(100)
  ParentId                             String?                                @db.NVarChar(50)
  Deepest                              Boolean
  BreadCrumb                           String                                 @db.NVarChar(500)
  Entegre_VFM_AttributeAttributeValues Entegre_VFM_AttributeAttributeValues[]
  Entegre_VFM_CategoryAttributes       Entegre_VFM_CategoryAttributes[]

  @@index([ParentId], map: "IX_Entegre_VFM_Categories_ParentId")
}

model Entegre_VFM_CategoryAttributes {
  Id                      BigInt                 @id(map: "PK_Entegre_VFM_CategoryAttributes") @default(autoincrement())
  Required                Boolean
  AllowCustom             Boolean
  Varianter               Boolean
  Entegre_VFM_CategoryId  String                 @db.NVarChar(50)
  Entegre_VFM_AttributeId String                 @db.NVarChar(50)
  Entegre_VFM_Attributes  Entegre_VFM_Attributes @relation(fields: [Entegre_VFM_AttributeId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_VFM_AttributeEntegre_VFM_CategoryAttribute")
  Entegre_VFM_Categories  Entegre_VFM_Categories @relation(fields: [Entegre_VFM_CategoryId], references: [Id], onUpdate: NoAction, map: "FK_Entegre_VFM_CategoryEntegre_VFM_CategoryAttribute")

  @@index([Entegre_VFM_AttributeId], map: "IX_FK_Entegre_VFM_AttributeEntegre_VFM_CategoryAttribute")
  @@index([Entegre_VFM_CategoryId], map: "IX_FK_Entegre_VFM_CategoryEntegre_VFM_CategoryAttribute")
}

model Entegre_WOO_Cities {
  TrCode   String @id(map: "PK_Entegre_WOO_Cities") @db.NVarChar(10)
  CityName String @db.NVarChar(100)
}

model FedExCities {
  Id               BigInt         @id(map: "PK_FedExCities") @default(autoincrement())
  Name             String         @db.NVarChar(100)
  Code             String         @db.NVarChar(2)
  FedExCountryCode String         @db.NVarChar(2)
  FedExCountries   FedExCountries @relation(fields: [FedExCountryCode], references: [Code], onUpdate: NoAction, map: "FK_FedExCountryFedExCity")

  @@index([FedExCountryCode], map: "IX_FK_FedExCountryFedExCity")
}

model FedExCountries {
  Code        String        @id(map: "PK_FedExCountries") @db.NVarChar(2)
  Name        String        @db.NVarChar(100)
  FedExCities FedExCities[]
}

model IntegratedECommerces {
  Code                                                                   String                               @id(map: "PK_IntegratedECommerces") @unique(map: "UNQ_IntegratedECommerces_Code") @db.NVarChar(10)
  Name                                                                   String                               @db.NVarChar(100)
  SortOrder                                                              Int                                  @db.TinyInt
  IntegratedECommerceType                                                Int                                  @default(1, map: "DF__Integrate__Integ__4336F4B9") @db.TinyInt
  CustomerCreditTransactions                                             CustomerCreditTransactions[]
  CustomerECommerceDefaultSettings                                       CustomerECommerceDefaultSettings[]
  CustomerECommerceKeys                                                  CustomerECommerceKeys[]
  CustomerNotifications                                                  CustomerNotifications[]              @ignore
  ECommerceProductBatches                                                ECommerceProductBatches[]
  ECommerceSynchronizations                                              ECommerceSynchronizations[]
  eInvoices                                                              eInvoices[]
  Entegre_ProductECommerce_Histories                                     Entegre_ProductECommerce_Histories[]
  Entegre_ProductECommerce_Jobs                                          Entegre_ProductECommerce_Jobs[]
  Entegre_ProductECommerces                                              Entegre_ProductECommerces[]
  Entegre_ShipmentCompanies                                              Entegre_ShipmentCompanies[]
  Orders_Orders_IntegratedAccountingECommerceCodeToIntegratedECommerces  Orders[]                             @relation("Orders_IntegratedAccountingECommerceCodeToIntegratedECommerces")
  Orders_Orders_IntegratedCargoECommerceCodeToIntegratedECommerces       Orders[]                             @relation("Orders_IntegratedCargoECommerceCodeToIntegratedECommerces")
  Orders_Orders_IntegratedECommerceCodeToIntegratedECommerces            Orders[]                             @relation("Orders_IntegratedECommerceCodeToIntegratedECommerces")
  Orders_Orders_IntegratedFulFillmentECommerceCodeToIntegratedECommerces Orders[]                             @relation("Orders_IntegratedFulFillmentECommerceCodeToIntegratedECommerces")
}

model InvoiceAddresses {
  Id                    BigInt    @id(map: "PK_InvoiceAddresses") @default(autoincrement())
  CustomerName          String    @db.NVarChar(300)
  AdressLine            String    @db.NVarChar(800)
  City                  String    @db.NVarChar(100)
  District              String?   @db.NVarChar(100)
  Neighborhood          String?   @db.NVarChar(200)
  ZipCode               String?   @db.NVarChar(15)
  CustomerTaxNumber     String?   @db.NVarChar(20)
  CustomerTaxOffice     String?   @db.NVarChar(50)
  CustomerCitizenShipId String?   @db.NVarChar(20)
  CustomerGsm           String?   @db.NVarChar(15)
  CustomerPhone         String?   @db.NVarChar(15)
  CountryIso2           String    @default("TR", map: "DF__InvoiceAd__Count__442B18F2") @db.NVarChar(2)
  Countries             Countries @relation(fields: [CountryIso2], references: [Iso2], onUpdate: NoAction, map: "FK_InvoiceAddressCountry")
  Orders                Orders[]
}

model Languages {
  Id                                BigInt                              @id(map: "PK_Languages") @default(autoincrement())
  Name                              String                              @db.NVarChar(100)
  ShortName                         String                              @db.NVarChar(10)
  Code                              String                              @db.NVarChar(10)
  AuthActionForCustomerDescriptions AuthActionForCustomerDescriptions[]
  AuthActionForUserDescriptions     AuthActionForUserDescriptions[]
  NotificationTypeDescriptions      NotificationTypeDescriptions[]
  Users                             Users[]
}

model MainAnnouncements {
  Id               BigInt   @id(map: "PK_MainAnnouncements") @default(autoincrement())
  CreatedAt        DateTime @db.DateTime
  Title            String   @db.NVarChar(100)
  Description      String   @db.NVarChar(Max)
  ViewType         Int      @db.TinyInt
  AnnouncementType Int      @db.TinyInt

  @@index([CreatedAt], map: "IX_MainAnnouncements_CreatedAt")
}

model NotificationTypeDescriptions {
  Id                 BigInt            @id(map: "PK_NotificationTypeDescriptions") @default(autoincrement())
  NotificationTypeId Int
  LanguageId         BigInt
  Description        String            @db.NVarChar(500)
  Languages          Languages         @relation(fields: [LanguageId], references: [Id], onUpdate: NoAction, map: "FK_NotificationTypeDescriptionLanguage")
  NotificationTypes  NotificationTypes @relation(fields: [NotificationTypeId], references: [Id], onUpdate: NoAction, map: "FK_NotificationTypeDescriptionNotificationType")

  @@index([LanguageId], map: "IX_FK_NotificationTypeDescriptionLanguage")
  @@index([NotificationTypeId], map: "IX_FK_NotificationTypeDescriptionNotificationType")
}

model NotificationTypes {
  Id                            Int                             @id(map: "PK_NotificationTypes") @default(autoincrement())
  Code                          String                          @db.NVarChar(50)
  CustomerUserNotificationTypes CustomerUserNotificationTypes[]
  NotificationTypeDescriptions  NotificationTypeDescriptions[]
}

model OrderLineCustomTextOptions {
  Id          BigInt     @id(map: "PK_OrderLineCustomTextOptions") @default(autoincrement())
  OptionName  String     @db.NVarChar(200)
  OptionValue String     @db.NVarChar(350)
  OrderLineId BigInt
  OrderLines  OrderLines @relation(fields: [OrderLineId], references: [Id], onUpdate: NoAction, map: "FK_OrderLineOrderLineCustomTextOption")

  @@index([OrderLineId], map: "IX_FK_OrderLineOrderLineCustomTextOption")
}

model OrderLineKeyValues {
  Id          BigInt     @id(map: "PK_OrderLineKeyValues") @default(autoincrement())
  Name        String     @db.NVarChar(20)
  Value       String     @db.NVarChar(50)
  OrderLineId BigInt
  OrderLines  OrderLines @relation(fields: [OrderLineId], references: [Id], onUpdate: NoAction, map: "FK_OrderLineKeyValueOrderLine")

  @@index([OrderLineId], map: "IX_FK_OrderLineKeyValueOrderLine")
}

model OrderLinePhantomLines {
  Id                     BigInt                @id(map: "PK_OrderLinePhantomLines") @default(autoincrement())
  OrderLineId            BigInt
  StockCode              String?               @db.NVarChar(50)
  ProductName            String                @db.NVarChar(250)
  UnitPrice              Decimal               @db.Decimal(12, 3)
  UnitMallDiscountAmount Decimal               @db.Decimal(12, 2)
  Quantity               Decimal               @db.Decimal(20, 8)
  VatRateId              Int
  ProductId              BigInt?
  ProductVariantGroupId  BigInt?
  CurrencyId             Int
  UnitTypeId             Int
  Currencies             Currencies            @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_OrderLinePhantomLineCurrency")
  OrderLines             OrderLines            @relation(fields: [OrderLineId], references: [Id], onUpdate: NoAction, map: "FK_OrderLinePhantomLineOrderLine")
  Products               Products?             @relation(fields: [ProductId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderLinePhantomLineProduct")
  ProductVariantGroups   ProductVariantGroups? @relation(fields: [ProductVariantGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderLinePhantomLineProductVariantGroup")
  UnitTypes              UnitTypes             @relation(fields: [UnitTypeId], references: [Id], onUpdate: NoAction, map: "FK_OrderLinePhantomLineUnitType")
  VatRates               VatRates              @relation(fields: [VatRateId], references: [Id], onUpdate: NoAction, map: "FK_OrderLinePhantomLineVatRate")

  @@index([OrderLineId], map: "IX_FK_OrderLinePhantomLineOrderLine")
  @@index([ProductId], map: "IX_OrderLinePhantomLines_ProductId")
  @@index([ProductVariantGroupId], map: "IX_OrderLinePhantomLines_ProductVariantGroupId")
}

model OrderLines {
  Id                                                   BigInt                       @id(map: "PK_OrderLines") @default(autoincrement())
  OrderId                                              BigInt
  ProductId                                            BigInt?
  ProductStockCode                                     String?                      @db.NVarChar(50)
  EntegreProductId                                     String?                      @db.NVarChar(50)
  EntegreLineItemId                                    String?                      @db.NVarChar(50)
  ProductName                                          String                       @db.NVarChar(250)
  Quantity                                             Decimal                      @db.Decimal(20, 8)
  VatRateId                                            Int
  CurrencyId                                           Int
  UnitTypeId                                           Int
  Status                                               Int                          @db.TinyInt
  UnitPrice                                            Decimal                      @db.Decimal(12, 2)
  UnitDiscountAmount                                   Decimal                      @db.Decimal(12, 2)
  ComissionAmount                                      Decimal                      @db.Decimal(12, 2)
  InstallmentChargeWithVat                             Decimal                      @db.Decimal(12, 2)
  ShipmentPaymentType                                  Int                          @db.TinyInt
  ShipmentCompanyCampaignNumber                        String?                      @db.NVarChar(80)
  ShipmentCompanyECommerceCodeId                       String?                      @db.NVarChar(80)
  ShipmentPrice                                        Decimal?                     @db.Decimal(12, 3)
  EntegreProductSlug                                   String?                      @db.NVarChar(250)
  UnitMallDiscountAmount                               Decimal                      @default(0, map: "DF__OrderLine__UnitM__451F3D2B") @db.Decimal(12, 2)
  RequestedDeliveryDate                                DateTime?                    @db.DateTime
  PackageNumber                                        String?                      @db.VarChar(50)
  StockMultiplier                                      Decimal                      @default(1, map: "DF_OL_StockMultplier") @db.Decimal(16, 8)
  ProductVariantGroupId                                BigInt?
  ProductUnitCostPrice                                 Decimal?                     @db.Decimal(12, 4)
  ProductCurrencyRate                                  Decimal?                     @db.Decimal(12, 5)
  CurrencyRate                                         Decimal                      @default(1, map: "DF__OrderLine__Curre__4707859D") @db.Decimal(12, 5)
  ProductCurrencyId                                    Int?
  ShipmentCurrencyRate                                 Decimal?                     @db.Decimal(12, 5)
  ShipmentCurrencyId                                   Int?
  OrderLineCustomTextOptions                           OrderLineCustomTextOptions[]
  OrderLineKeyValues                                   OrderLineKeyValues[]
  OrderLinePhantomLines                                OrderLinePhantomLines[]
  Currencies_OrderLines_CurrencyIdToCurrencies         Currencies                   @relation("OrderLines_CurrencyIdToCurrencies", fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CurrencyOrderLine")
  Currencies_OrderLines_ShipmentCurrencyIdToCurrencies Currencies?                  @relation("OrderLines_ShipmentCurrencyIdToCurrencies", fields: [ShipmentCurrencyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderLineCurrency")
  ProductVariantGroups                                 ProductVariantGroups?        @relation(fields: [ProductVariantGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderLineProductVariantGroup")
  Orders                                               Orders                       @relation(fields: [OrderId], references: [Id], onUpdate: NoAction, map: "FK_OrderOrderLine")
  Currencies_OrderLines_ProductCurrencyIdToCurrencies  Currencies?                  @relation("OrderLines_ProductCurrencyIdToCurrencies", fields: [ProductCurrencyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductCurrency")
  Products                                             Products?                    @relation(fields: [ProductId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductOrderLine")
  UnitTypes                                            UnitTypes                    @relation(fields: [UnitTypeId], references: [Id], onUpdate: NoAction, map: "FK_UnitTypeOrderLine")
  VatRates                                             VatRates                     @relation(fields: [VatRateId], references: [Id], onUpdate: NoAction, map: "FK_VatRateOrderLine")
  OrderLineVariants                                    OrderLineVariants[]
  ShipmentLines                                        ShipmentLines[]

  @@index([OrderId(sort: Desc)], map: "IX_FK_OrderOrderLine")
  @@index([EntegreProductId, ProductStockCode], map: "IX_OrderLines_EntegreProductId_ProductStockCode")
  @@index([EntegreProductId, Status], map: "IX_OrderLines_EntegreProductId_Status")
  @@index([ProductId], map: "IX_OrderLines_ProductId")
  @@index([ProductStockCode, Status], map: "IX_OrderLines_ProductStockCode_Status")
  @@index([ProductVariantGroupId], map: "IX_OrderLines_ProductVariantGroupId")
  @@index([Status], map: "IX_OrderLines_Status")
  @@index([Status, OrderId], map: "IX_OrderLines_Status_OrderId")
}

model OrderLineVariants {
  Id           BigInt     @id(map: "PK_OrderLineVariants") @default(autoincrement())
  VariantName  String     @db.NVarChar(100)
  VariantValue String     @db.NVarChar(120)
  OrderLineId  BigInt
  OrderLines   OrderLines @relation(fields: [OrderLineId], references: [Id], onUpdate: NoAction, map: "FK_OrderLineOrderLineVariant")

  @@index([OrderLineId], map: "IX_FK_OrderLineOrderLineVariant")
}

model Orders {
  Id                                                                                    BigInt                       @id(map: "PK_Orders") @default(autoincrement())
  OrderDate                                                                             DateTime                     @db.DateTime
  ECommerceOrderNumber                                                                  String                       @db.NVarChar(50)
  ECommerceOrderId                                                                      String?                      @db.NVarChar(50)
  OrderCustomerFullName                                                                 String                       @db.NVarChar(300)
  OrderCustomerEMail                                                                    String?                      @db.NVarChar(200)
  OrderCustomerUserNameId                                                               String?                      @db.NVarChar(80)
  OrderCustomerTaxNumber                                                                String?                      @db.NVarChar(20)
  OrderCustomerTaxOffice                                                                String?                      @db.NVarChar(50)
  OrderCustomerCitizenShipId                                                            String?                      @db.NVarChar(20)
  OrderCustomerGsm                                                                      String?                      @db.NVarChar(15)
  OrderCustomerPhone                                                                    String?                      @db.NVarChar(15)
  IntegratedECommerceCode                                                               String                       @db.NVarChar(10)
  Status                                                                                Int                          @db.TinyInt
  ShippingAddressId                                                                     BigInt
  InvoiceAddressId                                                                      BigInt?
  CustomerId                                                                            BigInt
  AccountingOrderNumber                                                                 String?                      @db.NVarChar(120)
  InvoiceType                                                                           Int?                         @db.TinyInt
  PackageBarCode                                                                        String?                      @db.NVarChar(100)
  PackageNumber                                                                         String?                      @db.NVarChar(700)
  ShipmentBarCodePrinted                                                                Boolean                      @default(false, map: "DF__Orders__Shipment__47FBA9D6")
  FastShippingRequired                                                                  Boolean                      @default(false, map: "DF__Orders__FastShip__48EFCE0F")
  CustomerECommerceKeyId                                                                BigInt?
  InvoicePrinted                                                                        Boolean                      @default(false, map: "DF__Orders__InvoiceP__49E3F248")
  CargoKey                                                                              String?                      @db.NVarChar(50)
  IntegratedCargoECommerceCode                                                          String?                      @db.NVarChar(10)
  CustomerECommerceCargoKeyId                                                           BigInt?
  OrderECommercePaymentMethod                                                           String?                      @db.NVarChar(80)
  InvoiceNumber                                                                         String?                      @db.NVarChar(50)
  CustomerNote                                                                          String?                      @db.NVarChar(500)
  PickingNotification                                                                   Boolean?
  IsOrderNotePrinted                                                                    Boolean                      @default(false, map: "DF__Orders__IsOrderN__4AD81681")
  OrderECommercePaymentType                                                             Int                          @default(1, map: "DF__Orders__OrderECo__4BCC3ABA") @db.TinyInt
  AccountingInvoiceIdCode                                                               String?                      @db.NVarChar(50)
  IntegratedAccountingECommerceCode                                                     String?                      @db.NVarChar(10)
  CustomerECommerceAccountingKeyId                                                      BigInt?
  CargoSessionKey                                                                       String?                      @db.NVarChar(150)
  eInvoiceId                                                                            BigInt?
  WarehouseOrder                                                                        Boolean?
  CreatedOn                                                                             DateTime                     @default(now(), map: "DF__Orders__CreatedO__4CC05EF3") @db.DateTime
  MustBeSentWithMerchantCargo                                                           Boolean?
  IsEInvoicePrinted                                                                     Boolean                      @default(false, map: "DF__Orders__IsEInvoi__4DB4832C")
  CustomerECommerceFulFillmentKeyId                                                     BigInt?
  IntegratedFulFillmentECommerceCode                                                    String?                      @db.NVarChar(10)
  EntegreFulFillmentCode                                                                String?                      @db.NVarChar(50)
  InvoicePostedToECommerce                                                              Boolean                      @default(false, map: "DF__Orders__InvoiceP__4EA8A765")
  PackageUserId                                                                         BigInt?
  AssignedUserId                                                                        BigInt?
  PackedUserId                                                                          BigInt?
  PackageAssignDate                                                                     DateTime?                    @db.DateTime
  PackedDate                                                                            DateTime?                    @db.DateTime
  ColorTag                                                                              Int?                         @db.SmallInt
  CustomerCreditTransactions                                                            CustomerCreditTransactions[]
  OrderLines                                                                            OrderLines[]
  CustomerECommerceKeys_Orders_CustomerECommerceAccountingKeyIdToCustomerECommerceKeys  CustomerECommerceKeys?       @relation("Orders_CustomerECommerceAccountingKeyIdToCustomerECommerceKeys", fields: [CustomerECommerceAccountingKeyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceAccountingKeyId")
  CustomerECommerceKeys_Orders_CustomerECommerceCargoKeyIdToCustomerECommerceKeys       CustomerECommerceKeys?       @relation("Orders_CustomerECommerceCargoKeyIdToCustomerECommerceKeys", fields: [CustomerECommerceCargoKeyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceCargoKeyOrder")
  CustomerECommerceKeys_Orders_CustomerECommerceFulFillmentKeyIdToCustomerECommerceKeys CustomerECommerceKeys?       @relation("Orders_CustomerECommerceFulFillmentKeyIdToCustomerECommerceKeys", fields: [CustomerECommerceFulFillmentKeyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceFulFillmentKeyOrder")
  CustomerECommerceKeys_Orders_CustomerECommerceKeyIdToCustomerECommerceKeys            CustomerECommerceKeys?       @relation("Orders_CustomerECommerceKeyIdToCustomerECommerceKeys", fields: [CustomerECommerceKeyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerECommerceKeyOrder")
  Customers                                                                             Customers                    @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerOrder")
  IntegratedECommerces_Orders_IntegratedAccountingECommerceCodeToIntegratedECommerces   IntegratedECommerces?        @relation("Orders_IntegratedAccountingECommerceCodeToIntegratedECommerces", fields: [IntegratedAccountingECommerceCode], references: [Code], onDelete: NoAction, onUpdate: NoAction, map: "FK_IntegratedAccountingECommerceCode")
  IntegratedECommerces_Orders_IntegratedCargoECommerceCodeToIntegratedECommerces        IntegratedECommerces?        @relation("Orders_IntegratedCargoECommerceCodeToIntegratedECommerces", fields: [IntegratedCargoECommerceCode], references: [Code], onDelete: NoAction, onUpdate: NoAction, map: "FK_IntegratedECommerceCargoOrder")
  IntegratedECommerces_Orders_IntegratedECommerceCodeToIntegratedECommerces             IntegratedECommerces         @relation("Orders_IntegratedECommerceCodeToIntegratedECommerces", fields: [IntegratedECommerceCode], references: [Code], onUpdate: NoAction, map: "FK_IntegratedECommerceOrder")
  IntegratedECommerces_Orders_IntegratedFulFillmentECommerceCodeToIntegratedECommerces  IntegratedECommerces?        @relation("Orders_IntegratedFulFillmentECommerceCodeToIntegratedECommerces", fields: [IntegratedFulFillmentECommerceCode], references: [Code], onDelete: NoAction, onUpdate: NoAction, map: "FK_IntegratedFulFillmentECommerce")
  InvoiceAddresses                                                                      InvoiceAddresses?            @relation(fields: [InvoiceAddressId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_InvoiceAddressOrder")
  eInvoices                                                                             eInvoices?                   @relation(fields: [eInvoiceId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrdereInvoice")
  Users_Orders_AssignedUserIdToUsers                                                    Users?                       @relation("Orders_AssignedUserIdToUsers", fields: [AssignedUserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderUser1")
  Users_Orders_PackedUserIdToUsers                                                      Users?                       @relation("Orders_PackedUserIdToUsers", fields: [PackedUserId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_OrderUser2")
  ShippingAddresses                                                                     ShippingAddresses            @relation(fields: [ShippingAddressId], references: [Id], onUpdate: NoAction, map: "FK_ShippingAddressOrder")
  OrderServiceItems                                                                     OrderServiceItems[]
  ShipmentOrders                                                                        ShipmentOrders[]

  @@index([CustomerECommerceAccountingKeyId], map: "IX_FK_CustomerECommerceAccountingKeyId")
  @@index([CustomerECommerceCargoKeyId], map: "IX_FK_CustomerECommerceCargoKeyOrder")
  @@index([CustomerECommerceFulFillmentKeyId], map: "IX_FK_CustomerECommerceFulFillmentKeyOrder")
  @@index([CustomerECommerceKeyId], map: "IX_FK_CustomerECommerceKeyId")
  @@index([eInvoiceId], map: "IX_FK_eInvoiceId")
  @@index([IntegratedFulFillmentECommerceCode], map: "IX_FK_IntegratedFulFillmentECommerce")
  @@index([InvoiceAddressId], map: "IX_FK_InvoiceAddressId")
  @@index([PackageUserId], map: "IX_FK_OrderUser")
  @@index([AssignedUserId], map: "IX_FK_OrderUser1")
  @@index([PackedUserId], map: "IX_FK_OrderUser2")
  @@index([ShippingAddressId], map: "IX_FK_ShippingAddressId")
  @@index([CustomerId, CustomerECommerceKeyId, OrderDate, Status, eInvoiceId], map: "IX_Orders_CustomerId_CustomerECommerceKeyId_OrderDate_Status_eInvoiceId")
  @@index([CustomerId, OrderDate], map: "IX_Orders_CustomerId_OrderDate")
  @@index([CustomerId, OrderDate, Status, CargoKey], map: "IX_Orders_CustomerId_OrderDate_Status_CargoKey")
  @@index([CustomerId, PackageNumber, CustomerECommerceKeyId], map: "IX_Orders_CustomerId_PackageNumber_CustomerECommerceKeyId")
  @@index([ECommerceOrderId, CustomerId, CustomerECommerceKeyId, IntegratedECommerceCode, Status, OrderDate], map: "IX_Orders_ECommerceOrderId_CustomerId_CustomerECommerceKeyId_IntegratedECommerceCode_Status_OrderDate")
  @@index([ECommerceOrderNumber, CustomerId, CustomerECommerceKeyId, IntegratedECommerceCode, Status, OrderDate], map: "IX_Orders_ECommerceOrderNumber_CustomerId_CustomerECommerceKeyId_IntegratedECommerceCode_Status_OrderDate")
  @@index([eInvoiceId], map: "IX_Orders_eInvoiceId")
  @@index([IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId, OrderDate, Status], map: "IX_Orders_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId_OrderDate_Status")
  @@index([IntegratedECommerceCode, CustomerId, CustomerECommerceKeyId, Status], map: "IX_Orders_IntegratedECommerceCode_CustomerId_CustomerECommerceKeyId_Status")
  @@index([OrderDate, Status], map: "IX_Orders_OrderDate_Status")
  @@index([Status, CustomerId, OrderDate], map: "IX_Orders_Status_CustomerId_OrderDate")
  @@index([Status, CustomerId, ShipmentBarCodePrinted, OrderDate, CustomerECommerceKeyId], map: "IX_Orders_Status_CustomerId_ShipmentBarCodePrinted_OrderDate_CustomerECommerceKeyId")
}

model OrderServiceItems {
  Id                       BigInt     @id(map: "PK_OrderServiceItems") @default(autoincrement())
  Code                     String?    @db.NVarChar(50)
  Name                     String?    @db.NVarChar(100)
  Quantity                 Decimal    @db.Decimal(20, 8)
  UnitPrice                Decimal    @db.Decimal(12, 2)
  OrderId                  BigInt
  CurrencyId               Int
  VatRateId                Int
  InstallmentChargeWithVat Decimal    @default(0, map: "DF__OrderServ__Insta__4F9CCB9E") @db.Decimal(12, 2)
  Currencies               Currencies @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CurrencyOrderServiceItem")
  Orders                   Orders     @relation(fields: [OrderId], references: [Id], onUpdate: NoAction, map: "FK_OrderOrderServiceItem")
  VatRates                 VatRates   @relation(fields: [VatRateId], references: [Id], onUpdate: NoAction, map: "FK_VatRateOrderServiceItem")

  @@index([OrderId], map: "IX_FK_OrderOrderServiceItem")
  @@index([VatRateId, OrderId], map: "IX_OrderServiceItems_VatRateId_OrderId")
}

model PackageExtras {
  Id                      BigInt                 @id(map: "PK_PackageExtras") @default(autoincrement())
  Price                   Decimal                @db.Decimal(12, 2)
  PackagesId              BigInt
  AuthActionForCustomerId BigInt
  AuthActionForCustomers  AuthActionForCustomers @relation(fields: [AuthActionForCustomerId], references: [Id], onUpdate: NoAction, map: "FK_AuthActionForCustomerPackageExtras")
  Packages                Packages               @relation(fields: [PackagesId], references: [Id], onUpdate: NoAction, map: "FK_PackagesPackageExtras")
}

model Packages {
  Id                              BigInt                          @id(map: "PK_Packages") @default(autoincrement())
  Name                            String                          @db.NVarChar(100)
  Price                           Decimal                         @db.Decimal(12, 2)
  DefaultSubUserCount             Int                             @db.SmallInt
  DefaultStoreCount               Int                             @db.SmallInt
  SubscriptionType                Int                             @db.TinyInt
  DailyNewECommerceProductLimit   Int?
  DefaultCompetitionAnalysisCount Int                             @default(0, map: "DF__Packages__Defaul__5090EFD7")
  MinimumMonthlyCreditUsageAmount Decimal?                        @db.Decimal(12, 2)
  StartDate                       DateTime                        @default(now(), map: "DF__Packages__StartD__51851410") @db.DateTime
  EndDate                         DateTime?                       @db.DateTime
  DefaultErpCount                 Int                             @default(0, map: "DF__Packages__Defaul__52793849") @db.SmallInt
  MaximumPurchasableQuantity      Int?                            @db.SmallInt
  IsPrivate                       Boolean                         @default(false, map: "DF__Packages__IsPriv__536D5C82")
  MaxProductLimit                 Int?
  MaxOrderLimit                   Int?
  CampaignCustomers               CampaignCustomers[]
  CouponAllowedPackages           CouponAllowedPackages[]
  CouponGiftPackages              CouponGiftPackages[]
  CustomerAuthActionForPackages   CustomerAuthActionForPackages[]
  CustomerSubscriptions           CustomerSubscriptions[]
  PackageExtras                   PackageExtras[]
}

model Point_Cities {
  Id              BigInt            @id(map: "PK_Point_Cities")
  Name            String            @db.NVarChar(50)
  Point_Districts Point_Districts[]
}

model Point_Districts {
  Id           BigInt       @id(map: "PK_Point_Districts")
  Name         String       @db.NVarChar(Max)
  Point_CityId BigInt
  Point_Cities Point_Cities @relation(fields: [Point_CityId], references: [Id], onUpdate: NoAction, map: "FK_Point_DistrictPoint_City")

  @@index([Point_CityId], map: "IX_FK_Point_DistrictPoint_City")
}

model ProductDescriptions {
  Id                        BigInt                      @id(map: "PK_ProductDescriptions") @default(autoincrement())
  Name                      String                      @db.NVarChar(50)
  Description               String                      @db.NVarChar(Max)
  ProductId                 BigInt
  DescriptionType           Int                         @default(1, map: "DF__ProductDe__Descr__546180BB") @db.TinyInt
  Entegre_ProductECommerces Entegre_ProductECommerces[]
  Products                  Products                    @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductDescriptionProduct")

  @@index([ProductId], map: "IX_FK_ProductDescriptionProduct")
}

model ProductImages {
  Id                                      BigInt                                    @id(map: "PK_ProductImages") @default(autoincrement())
  FileName                                String                                    @db.NVarChar(80)
  SortOrder                               Int                                       @db.TinyInt
  ProductId                               BigInt
  ImageUrl                                String?                                   @db.NVarChar(2048)
  Entegre_ProductECommerce_Images         Entegre_ProductECommerce_Images[]
  Entegre_ProductECommerce_Variant_Images Entegre_ProductECommerce_Variant_Images[]
  Products                                Products                                  @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductProductImage")
  ProductVariantGroupImages               ProductVariantGroupImages[]

  @@index([ProductId], map: "IX_ProductImages_ProductId")
}

model ProductPhantomLines {
  Id                                                      BigInt                @id(map: "PK_ProductPhantomLines") @default(autoincrement())
  QuantityUsed                                            Decimal               @db.Decimal(16, 8)
  PricePercentage                                         Decimal               @db.Decimal(4, 1)
  ProductId                                               BigInt
  PhantomProductId                                        BigInt
  PhantomProductVariantGroupId                            BigInt?
  Products_ProductPhantomLines_ProductIdToProducts        Products              @relation("ProductPhantomLines_ProductIdToProducts", fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductPhantomLineProduct")
  Products_ProductPhantomLines_PhantomProductIdToProducts Products              @relation("ProductPhantomLines_PhantomProductIdToProducts", fields: [PhantomProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductPhantomLineProduct1")
  ProductVariantGroups                                    ProductVariantGroups? @relation(fields: [PhantomProductVariantGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductPhantomLineProductVariantGroup")

  @@index([ProductId], map: "IX_FK_ProductPhantomLineProduct")
  @@index([PhantomProductId], map: "IX_FK_ProductPhantomLineProduct1")
  @@index([PhantomProductVariantGroupId], map: "IX_FK_ProductPhantomLineProductVariantGroup")
}

model Products {
  Id                                                                 BigInt                               @id(map: "PK_Products") @default(autoincrement())
  PublicId                                                           String                               @unique @default(nanoid())
  Code                                                               String?                              @db.NVarChar(50)
  Name                                                               String                               @db.NVarChar(150)
  SubHeader                                                          String?                              @db.NVarChar(100)
  Description                                                        String?                              @db.NVarChar(Max)
  Width                                                              Decimal?                             @db.Decimal(18, 7)
  Length                                                             Decimal?                             @db.Decimal(18, 7)
  Height                                                             Decimal?                             @db.Decimal(18, 7)
  Weight                                                             Decimal?                             @db.Decimal(18, 7)
  VolumetricWeight                                                   Decimal?                             @db.Decimal(18, 7)
  Gtin                                                               String?                              @db.NVarChar(15)
  Mpn                                                                String?                              @db.NVarChar(50)
  CustomerId                                                         BigInt
  CategoryId                                                         BigInt?
  UnitTypeId                                                         Int
  VatRateId                                                          Int?
  CurrencyId                                                         Int
  PriceExclusiveVat                                                  Decimal                              @db.Decimal(20, 8)
  StockAmount                                                        Decimal?                             @db.Decimal(20, 8)
  ProductStatus                                                      Int                                  @db.TinyInt
  ProductType                                                        Int                                  @db.TinyInt
  CustomerBrandId                                                    BigInt?
  InvoiceName                                                        String?                              @db.NVarChar(150)
  Rack                                                               String?                              @db.NVarChar(50)
  WarrantyMonths                                                     Int?                                 @db.TinyInt
  Tags                                                               String?                              @db.NVarChar(200)
  CreatedOn                                                          DateTime                             @default(now(), map: "DF__Products__Create__5555A4F4") @db.DateTime
  CriticalInventoryAmount                                            Decimal?                             @db.Decimal(20, 8)
  SoldCount                                                          Int                                  @default(0, map: "DF__Products__SoldCo__5649C92D")
  MinSalePrice                                                       Decimal?                             @db.Decimal(14, 2)
  MinSalePriceCurrencyId                                             Int?
  VirtualStockAmount                                                 Decimal?                             @db.Decimal(20, 8)
  Gtip                                                               String?                              @db.NVarChar(50)
  BulkOperationLines                                                 BulkOperationLines[]
  BulkOperations                                                     BulkOperations[]
  Entegre_ProductECommerce_Histories                                 Entegre_ProductECommerce_Histories[]
  Entegre_ProductECommerces                                          Entegre_ProductECommerces[]
  OrderLinePhantomLines                                              OrderLinePhantomLines[]
  OrderLines                                                         OrderLines[]
  ProductDescriptions                                                ProductDescriptions[]
  ProductImages                                                      ProductImages[]
  ProductPhantomLines_ProductPhantomLines_ProductIdToProducts        ProductPhantomLines[]                @relation("ProductPhantomLines_ProductIdToProducts")
  ProductPhantomLines_ProductPhantomLines_PhantomProductIdToProducts ProductPhantomLines[]                @relation("ProductPhantomLines_PhantomProductIdToProducts")
  Categories                                                         Categories?                          @relation(fields: [CategoryId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CategoryProduct")
  Currencies_Products_CurrencyIdToCurrencies                         Currencies                           @relation("Products_CurrencyIdToCurrencies", fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CurrencyProduct")
  Customers                                                          Customers                            @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerProduct")
  Currencies_Products_MinSalePriceCurrencyIdToCurrencies             Currencies?                          @relation("Products_MinSalePriceCurrencyIdToCurrencies", fields: [MinSalePriceCurrencyId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductCurrency1")
  UnitTypes                                                          UnitTypes                            @relation(fields: [UnitTypeId], references: [Id], onUpdate: NoAction, map: "FK_UnitTypeProduct")
  VatRates                                                           VatRates?                            @relation(fields: [VatRateId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_VatRateProduct")
  ProductStockJobs                                                   ProductStockJobs[]
  ProductTags                                                        ProductTags[]
  ProductVariantGroupPhantomLines                                    ProductVariantGroupPhantomLines[]
  ProductVariantGroups                                               ProductVariantGroups[]

  @@index([CustomerId], map: "IX_FK_CustomerProduct")
  @@index([CategoryId], map: "IX_Products_CategoryId")
  @@index([Code, CustomerId, ProductType], map: "IX_Products_Code_CustomerId_ProductType")
  @@index([CustomerBrandId], map: "IX_Products_CustomerBrandId")
  @@index([CustomerId, CategoryId, ProductStatus], map: "IX_Products_CustomerId_CategoryId_ProductStatus")
  @@index([CustomerId, CreatedOn], map: "IX_Products_CustomerId_CreatedOn")
  @@index([CustomerId, Name], map: "IX_Products_CustomerId_Name")
  @@index([CustomerId, ProductStatus], map: "IX_Products_CustomerId_ProductStatus")
}

model ProductStockJobs {
  Id        BigInt   @id(map: "PK_ProductStockJobs") @default(autoincrement())
  ProductId BigInt
  Products  Products @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductStockJobProduct")

  @@index([ProductId], map: "IX_FK_ProductStockJobProduct")
}

model ProductTags {
  Id        BigInt   @id(map: "PK_ProductTags") @default(autoincrement())
  TagId     BigInt
  ProductId BigInt
  Products  Products @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductTagProduct")
  Tags      Tags     @relation(fields: [TagId], references: [Id], onUpdate: NoAction, map: "FK_ProductTagTag")

  @@index([ProductId], map: "IX_FK_ProductTagProduct")
  @@index([TagId], map: "IX_FK_ProductTagTag")
}

model ProductVariantGroupImages {
  Id                    BigInt               @id(map: "PK_ProductVariantGroupImages") @default(autoincrement())
  ProductVariantGroupId BigInt
  ProductImageId        BigInt
  SortOrder             Int                  @db.TinyInt
  ProductImages         ProductImages        @relation(fields: [ProductImageId], references: [Id], onUpdate: NoAction, map: "FK_ProductImageProductVariantGroupImage")
  ProductVariantGroups  ProductVariantGroups @relation(fields: [ProductVariantGroupId], references: [Id], onUpdate: NoAction, map: "FK_ProductVariantGroupProductVariantGroupImage")

  @@index([ProductImageId], map: "IX_FK_ProductImageProductVariantGroupImage")
  @@index([ProductVariantGroupId], map: "IX_FK_ProductVariantGroupProductVariantGroupImage")
}

model ProductVariantGroupPhantomLines {
  Id                                                                                                      BigInt                @id(map: "PK_ProductVariantGroupPhantomLines") @default(autoincrement())
  QuantityUsed                                                                                            Decimal               @db.Decimal(16, 8)
  PricePercentage                                                                                         Decimal               @db.Decimal(4, 1)
  ProductVariantGroupId                                                                                   BigInt
  PhantomProductId                                                                                        BigInt
  PhantomProductVariantGroupId                                                                            BigInt?
  Products                                                                                                Products              @relation(fields: [PhantomProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductVariantGroupPhantomLineProduct")
  ProductVariantGroups_ProductVariantGroupPhantomLines_ProductVariantGroupIdToProductVariantGroups        ProductVariantGroups  @relation("ProductVariantGroupPhantomLines_ProductVariantGroupIdToProductVariantGroups", fields: [ProductVariantGroupId], references: [Id], onUpdate: NoAction, map: "FK_ProductVariantGroupPhantomLineProductVariantGroup")
  ProductVariantGroups_ProductVariantGroupPhantomLines_PhantomProductVariantGroupIdToProductVariantGroups ProductVariantGroups? @relation("ProductVariantGroupPhantomLines_PhantomProductVariantGroupIdToProductVariantGroups", fields: [PhantomProductVariantGroupId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ProductVariantGroupPhantomLineProductVariantGroup1")

  @@index([PhantomProductId], map: "IX_FK_ProductVariantGroupPhantomLineProduct")
  @@index([ProductVariantGroupId], map: "IX_FK_ProductVariantGroupPhantomLineProductVariantGroup")
  @@index([PhantomProductVariantGroupId], map: "IX_FK_ProductVariantGroupPhantomLineProductVariantGroup1")
}

model ProductVariantGroups {
  Id                                                                                                                 BigInt                              @id(map: "PK_ProductVariantGroups") @default(autoincrement())
  StockCode                                                                                                          String                              @db.NVarChar(50)
  StockAmount                                                                                                        Decimal                             @db.Decimal(20, 8)
  ProductId                                                                                                          BigInt
  Gtin                                                                                                               String?                             @db.NVarChar(15)
  Mpn                                                                                                                String?                             @db.NVarChar(50)
  PriceExclusiveVat                                                                                                  Decimal                             @default(0, map: "DF__ProductVa__Price__573DED66") @db.Decimal(20, 8)
  CriticalInventoryAmount                                                                                            Decimal?                            @db.Decimal(20, 8)
  VirtualStockAmount                                                                                                 Decimal?                            @db.Decimal(20, 8)
  Entegre_ProductECommerce_Variants                                                                                  Entegre_ProductECommerce_Variants[]
  OrderLinePhantomLines                                                                                              OrderLinePhantomLines[]
  OrderLines                                                                                                         OrderLines[]
  ProductPhantomLines                                                                                                ProductPhantomLines[]
  ProductVariantGroupImages                                                                                          ProductVariantGroupImages[]
  ProductVariantGroupPhantomLines_ProductVariantGroupPhantomLines_ProductVariantGroupIdToProductVariantGroups        ProductVariantGroupPhantomLines[]   @relation("ProductVariantGroupPhantomLines_ProductVariantGroupIdToProductVariantGroups")
  ProductVariantGroupPhantomLines_ProductVariantGroupPhantomLines_PhantomProductVariantGroupIdToProductVariantGroups ProductVariantGroupPhantomLines[]   @relation("ProductVariantGroupPhantomLines_PhantomProductVariantGroupIdToProductVariantGroups")
  Products                                                                                                           Products                            @relation(fields: [ProductId], references: [Id], onUpdate: NoAction, map: "FK_ProductProductVariantGroup")
  ProductVariants                                                                                                    ProductVariants[]

  @@index([ProductId], map: "IX_ProductVariantGroups_ProductId")
  @@index([StockCode, ProductId], map: "IX_ProductVariantGroups_StockCode_ProductId")
}

model ProductVariants {
  Id                    BigInt               @id(map: "PK_ProductVariants") @default(autoincrement())
  ProductVariantGroupId BigInt
  VariantName           String               @db.NVarChar(100)
  VariantId             BigInt?
  VariantValue          String               @db.NVarChar(120)
  VariantValueId        BigInt?
  SortOrder             Int                  @db.TinyInt
  ProductVariantGroups  ProductVariantGroups @relation(fields: [ProductVariantGroupId], references: [Id], onUpdate: NoAction, map: "FK_ProductVariantGroupProductVariant")
  Variants              Variants?            @relation(fields: [VariantId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_VariantProductVariant")
  VariantValues         VariantValues?       @relation(fields: [VariantValueId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_VariantValueProductVariant")

  @@index([ProductVariantGroupId], map: "IX_FK_ProductVariantGroupProductVariant")
  @@index([VariantId], map: "IX_ProductVariants_VariantId")
  @@index([VariantValueId], map: "IX_ProductVariants_VariantValueId")
}

model SendeoCities {
  Id              BigInt            @id(map: "PK_SendeoCities")
  Name            String            @db.NVarChar(100)
  SendeoDistricts SendeoDistricts[]
}

model SendeoDistricts {
  Id           BigInt        @id(map: "PK_SendeoDistricts")
  Name         String        @db.NVarChar(100)
  SendeoCityId BigInt?
  SendeoCities SendeoCities? @relation(fields: [SendeoCityId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_SendeoCitySendeoDistrict")

  @@index([SendeoCityId], map: "IX_FK_SendeoCitySendeoDistrict")
}

model ShipmentCompanies {
  Id                                         BigInt                                       @id(map: "PK_ShipmentCompanies") @default(autoincrement())
  Name                                       String                                       @db.NVarChar(100)
  TrackingUrlTemplate                        String?                                      @db.NVarChar(250)
  CompanyName                                String?                                      @db.NVarChar(100)
  TaxOffice                                  String?                                      @db.NVarChar(50)
  TaxNumber                                  String?                                      @db.NVarChar(50)
  Entegre_AMZ_CustomerDefaultSettings        Entegre_AMZ_CustomerDefaultSettings[]
  Entegre_ProductECommerce_ShipmentCompanies Entegre_ProductECommerce_ShipmentCompanies[]
  Entegre_ShipmentCompanies                  Entegre_ShipmentCompanies[]
  Shipments                                  Shipments[]
}

model ShipmentLines {
  Id          BigInt     @id(map: "PK_ShipmentLines") @default(autoincrement())
  Quantity    Decimal    @db.Decimal(20, 8)
  UnitTypeId  Int
  ShipmentId  BigInt
  OrderLineId BigInt
  OrderLines  OrderLines @relation(fields: [OrderLineId], references: [Id], onUpdate: NoAction, map: "FK_OrderLineShipmentLine")
  Shipments   Shipments  @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentShipmentLine")
  UnitTypes   UnitTypes  @relation(fields: [UnitTypeId], references: [Id], onUpdate: NoAction, map: "FK_UnitTypeShipmentLine")

  @@index([OrderLineId], map: "IX_ShipmentLines_OrderLineId")
  @@index([ShipmentId], map: "IX_ShipmentLines_ShipmentId")
}

model ShipmentOrders {
  Id         BigInt    @id(map: "PK_ShipmentOrders") @default(autoincrement())
  OrderId    BigInt
  ShipmentId BigInt
  Orders     Orders    @relation(fields: [OrderId], references: [Id], onUpdate: NoAction, map: "FK_OrderShipmentOrder")
  Shipments  Shipments @relation(fields: [ShipmentId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentShipmentOrder")

  @@index([OrderId], map: "IX_FK_OrderShipmentOrder")
  @@index([ShipmentId], map: "IX_ShipmentOrders_ShipmentId")
}

model Shipments {
  Id                            BigInt            @id(map: "PK_Shipments") @default(autoincrement())
  ShipmentCode                  String            @db.NVarChar(50)
  ShipmentCompanyId             BigInt
  ShipmentFeeAmount             Decimal           @db.Decimal(12, 2)
  ShipmentDate                  DateTime          @db.DateTime
  CurrencyId                    Int
  ShipmentType                  Int               @db.TinyInt
  ShippingAddressId             BigInt
  ShipmentPaymentType           Int               @db.TinyInt
  CustomerId                    BigInt
  ShipmentBarCode               String?           @db.NVarChar(120)
  IsInternational               Boolean           @default(false, map: "DF__Shipments__IsInt__5832119F")
  InternationalCargoCompanyName String?           @db.NVarChar(50)
  InternationalCargoCode        String?           @db.NVarChar(50)
  ShipmentLines                 ShipmentLines[]
  ShipmentOrders                ShipmentOrders[]
  Currencies                    Currencies        @relation(fields: [CurrencyId], references: [Id], onUpdate: NoAction, map: "FK_CurrencyShipment")
  Customers                     Customers         @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerShipment")
  ShipmentCompanies             ShipmentCompanies @relation(fields: [ShipmentCompanyId], references: [Id], onUpdate: NoAction, map: "FK_ShipmentCompanyShipment")
  ShippingAddresses             ShippingAddresses @relation(fields: [ShippingAddressId], references: [Id], onUpdate: NoAction, map: "FK_ShippingAddressShipment")

  @@index([ShipmentCode], map: "IX_Shipments_ShipmentCode")
  @@index([ShippingAddressId], map: "IX_Shipments_ShippingAddressId")
}

model ShippingAddresses {
  Id                    BigInt      @id(map: "PK_ShippingAddresses") @default(autoincrement())
  CustomerName          String      @db.NVarChar(300)
  AdressLine            String      @db.NVarChar(800)
  City                  String      @db.NVarChar(100)
  District              String?     @db.NVarChar(100)
  Neighborhood          String?     @db.NVarChar(200)
  ZipCode               String?     @db.NVarChar(15)
  CustomerTaxNumber     String?     @db.NVarChar(20)
  CustomerTaxOffice     String?     @db.NVarChar(50)
  CustomerCitizenShipId String?     @db.NVarChar(20)
  CustomerGsm           String?     @db.NVarChar(15)
  CustomerPhone         String?     @db.NVarChar(15)
  CountryIso2           String      @default("TR", map: "DF__ShippingA__Count__592635D8") @db.NVarChar(2)
  Orders                Orders[]
  Shipments             Shipments[]
  Countries             Countries   @relation(fields: [CountryIso2], references: [Iso2], onUpdate: NoAction, map: "FK_ShippingAddressCountry")
}

model ShortMessagePackages {
  Id           BigInt  @id(map: "PK_ShortMessagePackages") @default(autoincrement())
  Name         String  @db.NVarChar(2000)
  PackagePrice Decimal @db.Decimal(12, 2)
  Credit       Decimal @db.Decimal(8, 2)
}

model Tags {
  Id          BigInt        @id(map: "PK_Tags") @default(autoincrement())
  Name        String        @db.NVarChar(50)
  CustomerId  BigInt
  ProductTags ProductTags[]
  Customers   Customers     @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_TagCustomer")

  @@index([CustomerId], map: "IX_FK_TagCustomer")
}

model UnitTypes {
  Id                    Int                     @id(map: "PK_UnitTypes") @default(autoincrement())
  Code                  String                  @db.NVarChar(10)
  Name                  String                  @db.NVarChar(20)
  OrderLinePhantomLines OrderLinePhantomLines[]
  OrderLines            OrderLines[]
  Products              Products[]
  ShipmentLines         ShipmentLines[]
}

model UpsAreas {
  Id        BigInt    @id(map: "PK_UpsAreas")
  Name      String    @db.NVarChar(200)
  UpsCityId BigInt
  UpsCities UpsCities @relation(fields: [UpsCityId], references: [Id], onUpdate: NoAction, map: "FK_UpsAreaUpsCity")

  @@index([UpsCityId], map: "IX_FK_UpsAreaUpsCity")
  @@index([UpsCityId], map: "IX_UpsAreas_UpsCityId")
}

model UpsCities {
  Id       BigInt     @id(map: "PK_UpsCities")
  Name     String     @db.NVarChar(100)
  UpsAreas UpsAreas[]
}

model Users {
  Id                                  BigInt                  @id(map: "PK_Users") @default(autoincrement())
  UserName                            String                  @unique(map: "UNQ_Users_UserName") @db.NVarChar(50)
  Password                            String                  @db.NVarChar(500)
  Email                               String                  @unique(map: "UNQ_Users_Email") @db.NVarChar(250)
  FirstName                           String                  @db.NVarChar(100)
  LastName                            String                  @db.NVarChar(100)
  BirthDate                           DateTime?               @db.DateTime
  Active                              Boolean
  SecurityStamp                       String                  @db.UniqueIdentifier
  ResetPasswordToken                  String?                 @db.NVarChar(128)
  ResetPasswordTokenExpiredAt         DateTime?               @db.DateTime
  ActivationToken                     String?                 @db.NVarChar(128)
  ProfileImage                        String?                 @db.NVarChar(80)
  LanguageId                          BigInt
  RefreshToken                        String?                 @db.NVarChar(500)
  RefreshTokenExpireDate              DateTime?               @db.DateTime
  ConnectedUsers                      ConnectedUsers[]
  CustomerECommerceKeys               CustomerECommerceKeys[]
  CustomerUsers                       CustomerUsers[]
  Orders_Orders_AssignedUserIdToUsers Orders[]                @relation("Orders_AssignedUserIdToUsers")
  Orders_Orders_PackedUserIdToUsers   Orders[]                @relation("Orders_PackedUserIdToUsers")
  Languages                           Languages               @relation(fields: [LanguageId], references: [Id], onUpdate: NoAction, map: "FK_LanguageUser")

  @@index([LanguageId], map: "IX_FK_LanguageUser")
}

model Variants {
  Id              BigInt            @id(map: "PK_Variants") @default(autoincrement())
  Name            String            @db.NVarChar(100)
  VariantType     String            @db.NVarChar(20)
  CustomerId      BigInt?
  ProductVariants ProductVariants[]
  Customers       Customers?        @relation(fields: [CustomerId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_CustomerVariant")
  VariantValues   VariantValues[]

  @@index([CustomerId], map: "IX_Variants_CustomerId")
  @@index([Name, CustomerId], map: "PERF_IX_Variants_Name_CustomerId")
}

model VariantValues {
  Id              BigInt            @id(map: "PK_VariantValues") @default(autoincrement())
  Value           String            @db.NVarChar(120)
  VariantId       BigInt
  CustomerId      BigInt
  ProductVariants ProductVariants[]
  Customers       Customers         @relation(fields: [CustomerId], references: [Id], onUpdate: NoAction, map: "FK_CustomerVariantValue")
  Variants        Variants          @relation(fields: [VariantId], references: [Id], onUpdate: NoAction, map: "FK_VariantVariantValue")

  @@index([CustomerId], map: "IX_VariantValues_CustomerId")
  @@index([Value, VariantId, CustomerId], map: "IX_VariantValues_Value_VariantId_CustomerId")
  @@index([VariantId, CustomerId], map: "IX_VariantValues_VariantId_CustomerId")
}

model VatRates {
  Id                    Int                     @id(map: "PK_VatRates") @default(autoincrement())
  Name                  String                  @db.NVarChar(20)
  Rate                  Decimal                 @db.Decimal(4, 2)
  Categories            Categories[]
  CustomerSettings      CustomerSettings[]
  OrderLinePhantomLines OrderLinePhantomLines[]
  OrderLines            OrderLines[]
  OrderServiceItems     OrderServiceItems[]
  Products              Products[]
}
